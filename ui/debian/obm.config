#!/bin/sh -e

. /usr/share/debconf/confmodule

db_version 2.0

echo "hello1"

if [ "$1" = "reconfigure" ] ; then
	# Rotate old configuration
	config="/usr/share/obm/obminclude/phplib/obmlib.inc"
	for i in $(seq 8 -1 0) ; do
		if [ -f ${config}.$i ]
			then mv ${config}.$i ${config}.$(($i +1))
		fi
	done
	mv ${config} ${config}.0
fi

echo "hello2"

debug="false"
step=0
finished="false"

db_capb backup

echo "hello3"

while ! $finished ; do
	skip="false"
	forward=1
	backward=1
	password=""
	confirm=""
	echo "switch start"
	case $step in
		0)	# Prompt user for notes.
			echo "step0"
			db_beginblock
				db_subst "obm/configuration/note" "site" `hostname -f`
				db_input critical "obm/configuration/note" || true
			db_endblock
			backward=0
		;;
		1)	# Ask for web server type.
			echo "step1"
			db_input medium "obm/webserver" || true
		;;
		2)	# Ask wich type of DB phpGroupWare should use.
			echo "step2"
			db_beginblock
				# The note is not critical, but i want user to understand the
				# installation process.
				db_input critical "obm/db" || true
			db_endblock
			# Skip previous step.
			backward=2
		;;
		3)	# Ask on wich host the DBMS is installed.
			echo "step3"
			db_input critical "obm/db/host" || true
			# Skip previous step.
			backward=2
		;;
		4)	# Check for the DBMS hostname (most for PostgresQL).
			echo "step4"
			db_get "obm/db/host" || true
			dbhost="$RET"
			# If DBMS is PostgresQL...
		;;
		5)	# Get the database administrator name and password.
			echo "step5"
			db_beginblock
				db_input critical "obm/db/admin/name" || true
				db_input critical "obm/db/admin/password" || true
			db_endblock
			# Skip previous step.
			backward=2
		;;
		6)	# Ask for DB name.
			echo "step6"
			db_input critical "obm/db/name" || true
		;;
		*)
			echo "hello4"
			skip="true"
			message="Unknown step #$tep."
			if [ $step -lt 0 ] ; then
				step=-1
			elif [ $step -gt 6 ] ; then
				finished="true"
			fi
		;;
	esac
	echo "hello5"
	if $skip ; then
		next=$(($step + 1))
		eval $onsuccess
		onsuccess=''
	else
		db_title "O.B.M." || true
		if db_go ; then
			next=$(($step + $forward))
			eval $onsuccess
			onsuccess=''
		else
			next=$(($step - $backward))
			onsuccess=''
		fi
	fi
	step=$next
done

db_stop
echo "hello6"
exit 0
