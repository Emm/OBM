#!/bin/sh
#Produit toute les question lors de l'installation du paquet
#Les réponses peuvent être utilisé dans les scripts postinst
#, preinst, postrm, prerm

set -e
#set -x

# Source debconf library.
. /usr/share/debconf/confmodule

is_initial_configuration() { 
# Check if this is the initial configuration and not an upgrade of an 
# existing configuration 
# Usage: if is_initial_configuration "$@"; then ... fi from top level 

# Plain installation 
  if [ "$1" = configure ] && [ -z "$2" ]; then 
    return 0 
  fi 
# Configuration via dpkg-reconfigure 
  if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then 
    return 0 
  fi 
  return 1 
}

isnot_reconfigure_configuration() {
# Check if this is the dpkg-reconfiguration and not an upgrade of an 
# existing configuration 

# Configuration via dpkg-reconfigure 
  if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then
    return 1
  fi
  return 0
}

check_alphanumeric() {
  DB_RET=$1
  DB_NAME=$2
  while [[ -z "$DB_RET" || $(echo $DB_RET | tr -d '[:alnum:]') ]] ; do
    db_input high obm-funambol-conf/${DB_NAME} || true
    db_go || true 
    db_get obm-funambol-conf/${DB_NAME} || true
    DB_RET="$RET"
  done
}

if isnot_reconfigure_configuration "$@"; then
  db_input high obm-funambol-storage/dbhost || true
 
  db_input high obm-funambol-storage/dbname || true
  db_go || true
  db_get obm-funambol-storage/dbname || true
  DB_RET="$RET"
  check_alphanumeric $DB_RET "dbname"

  db_input high obm-funambol-storage/dbuser || true
  db_go || true
  db_get obm-funambol-storage/dbuser || true
  DB_RET="$RET"
  check_alphanumeric $DB_RET "dbuser"

  
  while [ ! ${have_app_pass} ] ; do
    #get password
    db_input high obm-funambol-storage/dbpasswd || true
    db_go || true
    db_get obm-funambol-storage/dbpasswd || true
    DB_RET="$RET"
    check_alphanumeric $DB_RET "dbpasswd"
    pass1=${DB_RET}
    #get password confirm
    db_input high obm-funambol-storage/dbpasswd_verify || true
    db_go || true
    db_get obm-funambol-storage/dbpasswd_verify || true
    pass2="$RET"
    #test if password match
    
    if [ "${pass1}" = "${pass2}" ]; then
      have_app_pass="yes"
    else
      db_input high obm-funambol-storage/passwords-do-not-match || true
      db_go || true
    fi
  done
fi

db_get obm-funambol-storage/dbtype
FUNAMBOL_DBTYPE=$RET
db_get obm-funambol-storage/dbhost
FUNAMBOL_HOST=$RET
db_get obm-funambol-storage/dbname
FUNAMBOL_DB=$RET
db_get obm-funambol-storage/dbuser
FUNAMBOL_USER=$RET
db_get obm-funambol-storage/dbpasswd
FUNAMBOL_PASSWD=$RET


#create db and dbuser of OBM 
if [ -f /usr/share/dbconfig-common/dpkg/config ]; then
 #dbc_hardcoded_dbtype="mysql"
 #Bug in dbconfig-common 1.8.39 about dbc_dbpass and multidb
 #I can't use dbc_dbtypes
  dbc_hardcoded_dbtype="${FUNAMBOL_DBTYPE}"
  dbc_authmethod_user="password"
  dbc_dbserver="${FUNAMBOL_HOST}"
  dbc_dbname="${FUNAMBOL_DB}"
  dbc_dbuser="${FUNAMBOL_USER}"
  dbc_dbpass="${FUNAMBOL_PASSWD}"
  . /usr/share/dbconfig-common/dpkg/config
  dbc_go obm-funambol-storage $@
fi

exit 0
