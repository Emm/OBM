%!PS-Adobe-3.0
%%Title: rfc4918.txt
%%For: Thomas Cataldo
%%Creator: a2ps version 4.14
%%CreationDate: Mon Apr  6 17:49:30 2009
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 64
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontType get 0 eq {
    currentfont /FontMatrix get 3 get
  }{
    currentfont /FontMatrix get 3 get 1000 mul
  } ifelse
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% composite fonts for ASCII-EUC mixed strings
% Version 1.2 1/31/1990
% Original Ken'ichi HANDA (handa@etl.go.jp)
% Modified Norio Katayama (katayama@rd.nacsis.ac.jp),1998
% Extend & Fix Koji Nakamaru (maru@on.cs.keio.ac.jp), 1999
% Anyone can freely copy, modify, distribute this program.

/copyfont {	% font-dic extra-entry-count  copyfont  font-dic
	1 index maxlength add dict begin
	{	1 index /FID ne 2 index /UniqueID ne and
		{def} {pop pop} ifelse
	} forall
	currentdict
	end
} bind def

/compositefont { % ASCIIFontName EUCFontName RomanScale RomanOffset Rot(T/F) compositefont font
    /RomanRotation exch def
    /RomanOffset exch def
    /RomanScale exch def
    userdict /fixeucfont_dict known not {
	userdict begin
	    /fixeucfont_dict 2 dict begin
		/UpperByteEncoding [
		    16#00 1 16#20 { pop 0 } for
		    16#21 1 16#28 { 16#20 sub } for
		    16#29 1 16#2F { pop 0 } for
		    16#30 1 16#74 { 16#27 sub } for
		    16#75 1 16#FF { pop 0 } for
		] def
	        /LowerByteEncoding [
		    16#00 1 16#A0 { pop /.notdef } for
		    16#A1 1 16#FE { 16#80 sub 16 2 string cvrs
				    (cXX) dup 1 4 -1 roll
				    putinterval cvn } for
		    /.notdef
		] def
		currentdict
	    end def
	end
    } if
    findfont dup /FontType get 0 eq {
	14 dict begin
	    %
	    % 7+8 bit EUC font
	    %
	    12 dict begin
		/EUCFont exch def
		/FontInfo (7+8 bit EUC font) readonly def
		/PaintType 0 def
		/FontType 0 def
		/FontMatrix matrix def
		% /FontName
		/Encoding fixeucfont_dict /UpperByteEncoding get def
		/FMapType 2 def
		EUCFont /WMode known
		{ EUCFont /WMode get /WMode exch def }
		{ /WMode 0 def } ifelse
		/FDepVector [
		    EUCFont /FDepVector get 0 get
		    [ 16#21 1 16#28 {} for 16#30 1 16#74 {} for ]
		    {
			13 dict begin
			    /EUCFont EUCFont def
			    /UpperByte exch 16#80 add def	
			    % /FontName
			    /FontInfo (EUC lower byte font) readonly def
			    /PaintType 0 def
			    /FontType 3 def
			    /FontMatrix matrix def
			    /FontBBox {0 0 0 0} def
			    /Encoding
				fixeucfont_dict /LowerByteEncoding get def
			    % /UniqueID
			    % /WMode
			    /BuildChar {
				gsave
				exch dup /EUCFont get setfont
				/UpperByte get
				2 string
				dup 0 4 -1 roll put
				dup 1 4 -1 roll put
				dup stringwidth setcharwidth
				0 0 moveto show
				grestore
			    } bind def
			    currentdict
			end
			/lowerbytefont exch definefont
		    } forall
		] def
		currentdict
	    end
	    /eucfont exch definefont
	    exch
	    findfont 1 copyfont dup begin
		RomanRotation {
			/FontMatrix FontMatrix
			[ 0 RomanScale neg RomanScale 0 RomanOffset neg 0 ]
			matrix concatmatrix def
		}{
			/FontMatrix FontMatrix
			[ RomanScale 0 0 RomanScale 0 RomanOffset ] matrix concatmatrix
			def
			/CDevProc
			    {pop pop pop pop 0 exch -1000 exch 2 div 880} def
		} ifelse
	    end
	    /asciifont exch definefont
	    exch
	    /FDepVector [ 4 2 roll ] def
	    /FontType 0 def
	    /WMode 0 def
	    /FMapType 4 def
	    /FontMatrix matrix def
	    /Encoding [0 1] def
	    /FontBBox {0 0 0 0} def
%	    /FontHeight 1.0 def % XXXX
	    /FontHeight RomanScale 1.0 ge { RomanScale }{ 1.0 } ifelse def
	    /Descent -0.3 def   % XXXX
	    currentdict
	end
	/tmpfont exch definefont
	pop
	/tmpfont findfont
    }{
	pop findfont 0 copyfont
    } ifelse
} def	

/slantfont {	% FontName slant-degree  slantfont  font'
    exch findfont 1 copyfont begin
    [ 1 0 4 -1 roll 1 0 0 ] FontMatrix exch matrix concatmatrix
    /FontMatrix exch def
    currentdict
    end
} def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() N
() N
() N
() N
() N
(Network Working Group                                  L. Dusseault, Ed.) N
(Request for Comments: 4918                                   CommerceNet) N
(Obsoletes: 2518                                                June 2007) N
(Category: Standards Track) N
() N
() N
( HTTP Extensions for Web Distributed Authoring and Versioning \(WebDAV\)) N
() N
(Status of This Memo) N
() N
(   This document specifies an Internet standards track protocol for the) N
(   Internet community, and requests discussion and suggestions for) N
(   improvements.  Please refer to the current edition of the "Internet) N
(   Official Protocol Standards" \(STD 1\) for the standardization state) N
(   and status of this protocol.  Distribution of this memo is unlimited.) N
() N
(Copyright Notice) N
() N
(   Copyright \(C\) The IETF Trust \(2007\).) N
() N
(Abstract) N
() N
(   Web Distributed Authoring and Versioning \(WebDAV\) consists of a set) N
(   of methods, headers, and content-types ancillary to HTTP/1.1 for the) N
(   management of resource properties, creation and management of) N
(   resource collections, URL namespace manipulation, and resource) N
(   locking \(collision avoidance\).) N
() N
(   RFC 2518 was published in February 1999, and this specification) N
(   obsoletes RFC 2518 with minor revisions mostly due to) N
(   interoperability experience.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 1]) N
() N
(rfc4918.txt) (Page 1/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(Table of Contents) N
() N
(   1. Introduction ....................................................7) N
(   2. Notational Conventions ..........................................8) N
(   3. Terminology .....................................................8) N
(   4. Data Model for Resource Properties .............................10) N
(      4.1. The Resource Property Model ...............................10) N
(      4.2. Properties and HTTP Headers ...............................10) N
(      4.3. Property Values ...........................................10) N
(           4.3.1. Example - Property with Mixed Content ..............12) N
(      4.4. Property Names ............................................14) N
(      4.5. Source Resources and Output Resources .....................14) N
(   5. Collections of Web Resources ...................................14) N
(      5.1. HTTP URL Namespace Model ..................................15) N
(      5.2. Collection Resources ......................................15) N
(   6. Locking ........................................................17) N
(      6.1. Lock Model ................................................18) N
(      6.2. Exclusive vs. Shared Locks ................................19) N
(      6.3. Required Support ..........................................20) N
(      6.4. Lock Creator and Privileges ...............................20) N
(      6.5. Lock Tokens ...............................................21) N
(      6.6. Lock Timeout ..............................................21) N
(      6.7. Lock Capability Discovery .................................22) N
(      6.8. Active Lock Discovery .....................................22) N
(   7. Write Lock .....................................................23) N
(      7.1. Write Locks and Properties ................................24) N
(      7.2. Avoiding Lost Updates .....................................24) N
(      7.3. Write Locks and Unmapped URLs .............................25) N
(      7.4. Write Locks and Collections ...............................26) N
(      7.5. Write Locks and the If Request Header .....................28) N
(           7.5.1. Example - Write Lock and COPY ......................28) N
(           7.5.2. Example - Deleting a Member of a Locked) N
(                  Collection .........................................29) N
(      7.6. Write Locks and COPY/MOVE .................................30) N
(      7.7. Refreshing Write Locks ....................................30) N
(   8. General Request and Response Handling ..........................31) N
(      8.1. Precedence in Error Handling ..............................31) N
(      8.2. Use of XML ................................................31) N
(      8.3. URL Handling ..............................................32) N
(           8.3.1. Example - Correct URL Handling .....................32) N
(      8.4. Required Bodies in Requests ...............................33) N
(      8.5. HTTP Headers for Use in WebDAV ............................33) N
(      8.6. ETag ......................................................33) N
(      8.7. Including Error Response Bodies ...........................34) N
(      8.8. Impact of Namespace Operations on Cache Validators ........34) N
(   9. HTTP Methods for Distributed Authoring .........................35) N
(      9.1. PROPFIND Method ...........................................35) N
(           9.1.1. PROPFIND Status Codes ..............................37) N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 2]) N
() N
(rfc4918.txt) (Page 2/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (1/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(           9.1.2. Status Codes for Use in 'propstat' Element .........37) N
(           9.1.3. Example - Retrieving Named Properties ..............38) N
(           9.1.4. Example - Using 'propname' to Retrieve All) N
(                  Property Names .....................................39) N
(           9.1.5. Example - Using So-called 'allprop' ................41) N
(           9.1.6. Example - Using 'allprop' with 'include' ...........43) N
(      9.2. PROPPATCH Method ..........................................44) N
(           9.2.1. Status Codes for Use in 'propstat' Element .........44) N
(           9.2.2. Example - PROPPATCH ................................45) N
(      9.3. MKCOL Method ..............................................46) N
(           9.3.1. MKCOL Status Codes .................................47) N
(           9.3.2. Example - MKCOL ....................................47) N
(      9.4. GET, HEAD for Collections .................................48) N
(      9.5. POST for Collections ......................................48) N
(      9.6. DELETE Requirements .......................................48) N
(           9.6.1. DELETE for Collections .............................49) N
(           9.6.2. Example - DELETE ...................................49) N
(      9.7. PUT Requirements ..........................................50) N
(           9.7.1. PUT for Non-Collection Resources ...................50) N
(           9.7.2. PUT for Collections ................................51) N
(      9.8. COPY Method ...............................................51) N
(           9.8.1. COPY for Non-collection Resources ..................51) N
(           9.8.2. COPY for Properties ................................52) N
(           9.8.3. COPY for Collections ...............................52) N
(           9.8.4. COPY and Overwriting Destination Resources .........53) N
(           9.8.5. Status Codes .......................................54) N
(           9.8.6. Example - COPY with Overwrite ......................55) N
(           9.8.7. Example - COPY with No Overwrite ...................55) N
(           9.8.8. Example - COPY of a Collection .....................56) N
(      9.9. MOVE Method ...............................................56) N
(           9.9.1. MOVE for Properties ................................57) N
(           9.9.2. MOVE for Collections ...............................57) N
(           9.9.3. MOVE and the Overwrite Header ......................58) N
(           9.9.4. Status Codes .......................................59) N
(           9.9.5. Example - MOVE of a Non-Collection .................60) N
(           9.9.6. Example - MOVE of a Collection .....................60) N
(      9.10. LOCK Method ..............................................61) N
(           9.10.1. Creating a Lock on an Existing Resource ...........61) N
(           9.10.2. Refreshing Locks ..................................62) N
(           9.10.3. Depth and Locking .................................62) N
(           9.10.4. Locking Unmapped URLs .............................63) N
(           9.10.5. Lock Compatibility Table ..........................63) N
(           9.10.6. LOCK Responses ....................................63) N
(           9.10.7. Example - Simple Lock Request .....................64) N
(           9.10.8. Example - Refreshing a Write Lock .................65) N
(           9.10.9. Example - Multi-Resource Lock Request .............66) N
(      9.11. UNLOCK Method ............................................68) N
(           9.11.1. Status Codes ......................................68) N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 3]) N
() N
(rfc4918.txt) (Page 3/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(           9.11.2. Example - UNLOCK ..................................69) N
(   10. HTTP Headers for Distributed Authoring ........................69) N
(      10.1. DAV Header ...............................................69) N
(      10.2. Depth Header .............................................70) N
(      10.3. Destination Header .......................................71) N
(      10.4. If Header ................................................72) N
(           10.4.1. Purpose ...........................................72) N
(           10.4.2. Syntax ............................................72) N
(           10.4.3. List Evaluation ...................................73) N
(           10.4.4. Matching State Tokens and ETags ...................74) N
(           10.4.5. If Header and Non-DAV-Aware Proxies ...............74) N
(           10.4.6. Example - No-tag Production .......................75) N
(           10.4.7. Example - Using "Not" with No-tag Production ......75) N
(           10.4.8. Example - Causing a Condition to Always) N
(                   Evaluate to True ..................................75) N
(           10.4.9. Example - Tagged List If Header in COPY ...........76) N
(           10.4.10. Example - Matching Lock Tokens with) N
(                    Collection Locks .................................76) N
(           10.4.11. Example - Matching ETags on Unmapped URLs ........76) N
(      10.5. Lock-Token Header ........................................77) N
(      10.6. Overwrite Header .........................................77) N
(      10.7. Timeout Request Header ...................................78) N
(   11. Status Code Extensions to HTTP/1.1 ............................78) N
(      11.1. 207 Multi-Status .........................................78) N
(      11.2. 422 Unprocessable Entity .................................78) N
(      11.3. 423 Locked ...............................................78) N
(      11.4. 424 Failed Dependency ....................................79) N
(      11.5. 507 Insufficient Storage .................................79) N
(   12. Use of HTTP Status Codes ......................................79) N
(      12.1. 412 Precondition Failed ..................................79) N
(      12.2. 414 Request-URI Too Long .................................79) N
(   13. Multi-Status Response .........................................80) N
(      13.1. Response Headers .........................................80) N
(      13.2. Handling Redirected Child Resources ......................81) N
(      13.3. Internal Status Codes ....................................81) N
(   14. XML Element Definitions .......................................81) N
(      14.1. activelock XML Element ...................................81) N
(      14.2. allprop XML Element ......................................82) N
(      14.3. collection XML Element ...................................82) N
(      14.4. depth XML Element ........................................82) N
(      14.5. error XML Element ........................................82) N
(      14.6. exclusive XML Element ....................................83) N
(      14.7. href XML Element .........................................83) N
(      14.8. include XML Element ......................................83) N
(      14.9. location XML Element .....................................83) N
(      14.10. lockentry XML Element ...................................84) N
(      14.11. lockinfo XML Element ....................................84) N
(      14.12. lockroot XML Element ....................................84) N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 4]) N
() N
(rfc4918.txt) (Page 4/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (2/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(      14.13. lockscope XML Element ...................................84) N
(      14.14. locktoken XML Element ...................................85) N
(      14.15. locktype XML Element ....................................85) N
(      14.16. multistatus XML Element .................................85) N
(      14.17. owner XML Element .......................................85) N
(      14.18. prop XML Element ........................................86) N
(      14.19. propertyupdate XML Element ..............................86) N
(      14.20. propfind XML Element ....................................86) N
(      14.21. propname XML Element ....................................87) N
(      14.22. propstat XML Element ....................................87) N
(      14.23. remove XML Element ......................................87) N
(      14.24. response XML Element ....................................88) N
(      14.25. responsedescription XML Element .........................88) N
(      14.26. set XML Element .........................................88) N
(      14.27. shared XML Element ......................................89) N
(      14.28. status XML Element ......................................89) N
(      14.29. timeout XML Element .....................................89) N
(      14.30. write XML Element .......................................89) N
(   15. DAV Properties ................................................90) N
(   16. Precondition/Postcondition XML Elements .......................98) N
(   17. XML Extensibility in DAV .....................................101) N
(   18. DAV Compliance Classes .......................................103) N
(      18.1. Class 1 .................................................103) N
(      18.2. Class 2 .................................................103) N
(      18.3. Class 3 .................................................103) N
(   19. Internationalization Considerations ..........................104) N
(   20. Security Considerations ......................................105) N
(      20.1. Authentication of Clients ...............................105) N
(      20.2. Denial of Service .......................................106) N
(      20.3. Security through Obscurity ..............................106) N
(      20.4. Privacy Issues Connected to Locks .......................106) N
(      20.5. Privacy Issues Connected to Properties ..................107) N
(      20.6. Implications of XML Entities ............................107) N
(      20.7. Risks Connected with Lock Tokens ........................108) N
(      20.8. Hosting Malicious Content ...............................108) N
(   21. IANA Considerations ..........................................109) N
(      21.1. New URI Schemes .........................................109) N
(      21.2. XML Namespaces ..........................................109) N
(      21.3. Message Header Fields ...................................109) N
(           21.3.1. DAV ..............................................109) N
(           21.3.2. Depth ............................................110) N
(           21.3.3. Destination ......................................110) N
(           21.3.4. If ...............................................110) N
(           21.3.5. Lock-Token .......................................110) N
(           21.3.6. Overwrite ........................................111) N
(           21.3.7. Timeout ..........................................111) N
(      21.4. HTTP Status Codes .......................................111) N
(   22. Acknowledgements .............................................112) N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 5]) N
() N
(rfc4918.txt) (Page 5/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   23. Contributors to This Specification ...........................113) N
(   24. Authors of RFC 2518 ..........................................113) N
(   25. References ...................................................114) N
(      25.1. Normative References.....................................114) N
(      25.2. Informative References ..................................115) N
(   Appendix A.  Notes on Processing XML Elements ....................117) N
(      A.1. Notes on Empty XML Elements ..............................117) N
(      A.2. Notes on Illegal XML Processing ..........................117) N
(      A.3. Example - XML Syntax Error ...............................117) N
(      A.4. Example - Unexpected XML Element .........................118) N
(   Appendix B. Notes on HTTP Client Compatibility ...................119) N
(   Appendix C. The 'opaquelocktoken' Scheme and URIs ................120) N
(   Appendix D. Lock-null Resources ..................................120) N
(      D.1. Guidance for Clients Using LOCK to Create Resources ......121) N
(   Appendix E. Guidance for Clients Desiring to Authenticate ........121) N
(   Appendix F. Summary of Changes from RFC 2518 .....................123) N
(      F.1. Changes for Both Client and Server Implementations .......123) N
(      F.2. Changes for Server Implementations .......................125) N
(      F.3. Other Changes ............................................126) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 6]) N
() N
(rfc4918.txt) (Page 6/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (3/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(1.  Introduction) N
() N
(   This document describes an extension to the HTTP/1.1 protocol that) N
(   allows clients to perform remote Web content authoring operations.) N
(   This extension provides a coherent set of methods, headers, request) N
(   entity body formats, and response entity body formats that provide) N
(   operations for:) N
() N
(   Properties: The ability to create, remove, and query information) N
(   about Web pages, such as their authors, creation dates, etc.) N
() N
(   Collections: The ability to create sets of documents and to retrieve) N
(   a hierarchical membership listing \(like a directory listing in a file) N
(   system\).) N
() N
(   Locking: The ability to keep more than one person from working on a) N
(   document at the same time.  This prevents the "lost update problem",) N
(   in which modifications are lost as first one author, then another,) N
(   writes changes without merging the other author's changes.) N
() N
(   Namespace Operations: The ability to instruct the server to copy and) N
(   move Web resources, operations that change the mapping from URLs to) N
(   resources.) N
() N
(   Requirements and rationale for these operations are described in a) N
(   companion document, "Requirements for a Distributed Authoring and) N
(   Versioning Protocol for the World Wide Web" [RFC2291].) N
() N
(   This document does not specify the versioning operations suggested by) N
(   [RFC2291].  That work was done in a separate document, "Versioning) N
(   Extensions to WebDAV" [RFC3253].) N
() N
(   The sections below provide a detailed introduction to various WebDAV) N
(   abstractions: resource properties \(Section 4\), collections of) N
(   resources \(Section 5\), locks \(Section 6\) in general, and write locks) N
(   \(Section 7\) specifically.) N
() N
(   These abstractions are manipulated by the WebDAV-specific HTTP) N
(   methods \(Section 9\) and the extra HTTP headers \(Section 10\) used with) N
(   WebDAV methods.  General considerations for handling HTTP requests) N
(   and responses in WebDAV are found in Section 8.) N
() N
(   While the status codes provided by HTTP/1.1 are sufficient to) N
(   describe most error conditions encountered by WebDAV methods, there) N
(   are some errors that do not fall neatly into the existing categories.) N
(   This specification defines extra status codes developed for WebDAV) N
(   methods \(Section 11\) and describes existing HTTP status codes) N
(   \(Section 12\) as used in WebDAV.  Since some WebDAV methods may) N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 7]) N
() N
(rfc4918.txt) (Page 7/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   operate over many resources, the Multi-Status response \(Section 13\)) N
(   has been introduced to return status information for multiple) N
(   resources.  Finally, this version of WebDAV introduces precondition) N
(   and postcondition \(Section 16\) XML elements in error response bodies.) N
() N
(   WebDAV uses XML \([REC-XML]\) for property names and some values, and) N
(   also uses XML to marshal complicated requests and responses.  This) N
(   specification contains DTD and text definitions of all properties) N
(   \(Section 15\) and all other XML elements \(Section 14\) used in) N
(   marshalling.  WebDAV includes a few special rules on extending WebDAV) N
(   XML marshalling in backwards-compatible ways \(Section 17\).) N
() N
(   Finishing off the specification are sections on what it means for a) N
(   resource to be compliant with this specification \(Section 18\), on) N
(   internationalization support \(Section 19\), and on security) N
(   \(Section 20\).) N
() N
(2.  Notational Conventions) N
() N
(   Since this document describes a set of extensions to the HTTP/1.1) N
(   protocol, the augmented BNF used herein to describe protocol elements) N
(   is exactly the same as described in Section 2.1 of [RFC2616],) N
(   including the rules about implied linear whitespace.  Since this) N
(   augmented BNF uses the basic production rules provided in Section 2.2) N
(   of [RFC2616], these rules apply to this document as well.  Note this) N
(   is not the standard BNF syntax used in other RFCs.) N
() N
(   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",) N
(   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this) N
(   document are to be interpreted as described in [RFC2119].) N
() N
(   Note that in natural language, a property like the "creationdate") N
(   property in the "DAV:" XML namespace is sometimes referred to as) N
(   "DAV:creationdate" for brevity.) N
() N
(3.  Terminology) N
() N
(   URI/URL - A Uniform Resource Identifier and Uniform Resource Locator,) N
(   respectively.  These terms \(and the distinction between them\) are) N
(   defined in [RFC3986].) N
() N
(   URI/URL Mapping - A relation between an absolute URI and a resource.) N
(   Since a resource can represent items that are not network) N
(   retrievable, as well as those that are, it is possible for a resource) N
(   to have zero, one, or many URI mappings.  Mapping a resource to an) N
(   "http" scheme URI makes it possible to submit HTTP protocol requests) N
(   to the resource using the URI.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 8]) N
() N
(rfc4918.txt) (Page 8/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (4/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Path Segment - Informally, the characters found between slashes \("/"\)) N
(   in a URI.  Formally, as defined in Section 3.3 of [RFC3986].) N
() N
(   Collection - Informally, a resource that also acts as a container of) N
(   references to child resources.  Formally, a resource that contains a) N
(   set of mappings between path segments and resources and meets the) N
(   requirements defined in Section 5.) N
() N
(   Internal Member \(of a Collection\) - Informally, a child resource of a) N
(   collection.  Formally, a resource referenced by a path segment) N
(   mapping contained in the collection.) N
() N
(   Internal Member URL \(of a Collection\) - A URL of an internal member,) N
(   consisting of the URL of the collection \(including trailing slash\)) N
(   plus the path segment identifying the internal member.) N
() N
(   Member \(of a Collection\) - Informally, a "descendant" of a) N
(   collection.  Formally, an internal member of the collection, or,) N
(   recursively, a member of an internal member.) N
() N
(   Member URL \(of a Collection\) - A URL that is either an internal) N
(   member URL of the collection itself, or is an internal member URL of) N
(   a member of that collection.) N
() N
(   Property - A name/value pair that contains descriptive information) N
(   about a resource.) N
() N
(   Live Property - A property whose semantics and syntax are enforced by) N
(   the server.  For example, the live property DAV:getcontentlength has) N
(   its value, the length of the entity returned by a GET request,) N
(   automatically calculated by the server.) N
() N
(   Dead Property - A property whose semantics and syntax are not) N
(   enforced by the server.  The server only records the value of a dead) N
(   property; the client is responsible for maintaining the consistency) N
(   of the syntax and semantics of a dead property.) N
() N
(   Principal - A distinct human or computational actor that initiates) N
(   access to network resources.) N
() N
(   State Token - A URI that represents a state of a resource.  Lock) N
(   tokens are the only state tokens defined in this specification.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                     [Page 9]) N
() N
(rfc4918.txt) (Page 9/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(4.  Data Model for Resource Properties) N
() N
(4.1.  The Resource Property Model) N
() N
(   Properties are pieces of data that describe the state of a resource.) N
(   Properties are data about data.) N
() N
(   Properties are used in distributed authoring environments to provide) N
(   for efficient discovery and management of resources.  For example, a) N
(   'subject' property might allow for the indexing of all resources by) N
(   their subject, and an 'author' property might allow for the discovery) N
(   of what authors have written which documents.) N
() N
(   The DAV property model consists of name/value pairs.  The name of a) N
(   property identifies the property's syntax and semantics, and provides) N
(   an address by which to refer to its syntax and semantics.) N
() N
(   There are two categories of properties: "live" and "dead".  A live) N
(   property has its syntax and semantics enforced by the server.  Live) N
(   properties include cases where a\) the value of a property is) N
(   protected and maintained by the server, and b\) the value of the) N
(   property is maintained by the client, but the server performs syntax) N
(   checking on submitted values.  All instances of a given live property) N
(   MUST comply with the definition associated with that property name.) N
(   A dead property has its syntax and semantics enforced by the client;) N
(   the server merely records the value of the property verbatim.) N
() N
(4.2.  Properties and HTTP Headers) N
() N
(   Properties already exist, in a limited sense, in HTTP message) N
(   headers.  However, in distributed authoring environments, a) N
(   relatively large number of properties are needed to describe the) N
(   state of a resource, and setting/returning them all through HTTP) N
(   headers is inefficient.  Thus, a mechanism is needed that allows a) N
(   principal to identify a set of properties in which the principal is) N
(   interested and to set or retrieve just those properties.) N
() N
(4.3.  Property Values) N
() N
(   The value of a property is always a \(well-formed\) XML fragment.) N
() N
(   XML has been chosen because it is a flexible, self-describing,) N
(   structured data format that supports rich schema definitions, and) N
(   because of its support for multiple character sets.  XML's self-) N
(   describing nature allows any property's value to be extended by) N
(   adding elements.  Clients will not break when they encounter) N
(   extensions because they will still have the data specified in the) N
(   original schema and MUST ignore elements they do not understand.) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 10]) N
() N
(rfc4918.txt) (Page 10/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (5/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   XML's support for multiple character sets allows any human-readable) N
(   property to be encoded and read in a character set familiar to the) N
(   user.  XML's support for multiple human languages, using the "xml:) N
(   lang" attribute, handles cases where the same character set is) N
(   employed by multiple human languages.  Note that xml:lang scope is) N
(   recursive, so an xml:lang attribute on any element containing a) N
(   property name element applies to the property value unless it has) N
(   been overridden by a more locally scoped attribute.  Note that a) N
(   property only has one value, in one language \(or language MAY be left) N
(   undefined\); a property does not have multiple values in different) N
(   languages or a single value in multiple languages.) N
() N
(   A property is always represented with an XML element consisting of) N
(   the property name, called the "property name element".  The simplest) N
(   example is an empty property, which is different from a property that) N
(   does not exist:) N
() N
(      <R:title xmlns:R="http://www.example.com/ns/"></R:title>) N
() N
(   The value of the property appears inside the property name element.) N
(   The value may be any kind of well-formed XML content, including both) N
(   text-only and mixed content.  Servers MUST preserve the following XML) N
(   Information Items \(using the terminology from [REC-XML-INFOSET]\) in) N
(   storage and transmission of dead properties:) N
() N
(   For the property name Element Information Item itself:) N
() N
(      [namespace name]) N
() N
(      [local name]) N
() N
(      [attributes] named "xml:lang" or any such attribute in scope) N
() N
(      [children] of type element or character) N
() N
(   On all Element Information Items in the property value:) N
() N
(      [namespace name]) N
() N
(      [local name]) N
() N
(      [attributes]) N
() N
(      [children] of type element or character) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 11]) N
() N
(rfc4918.txt) (Page 11/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   On Attribute Information Items in the property value:) N
() N
(      [namespace name]) N
() N
(      [local name]) N
() N
(      [normalized value]) N
() N
(   On Character Information Items in the property value:) N
() N
(      [character code]) N
() N
(   Since prefixes are used in some XML vocabularies \(XPath and XML) N
(   Schema, for example\), servers SHOULD preserve, for any Information) N
(   Item in the value:) N
() N
(      [prefix]) N
() N
(   XML Infoset attributes not listed above MAY be preserved by the) N
(   server, but clients MUST NOT rely on them being preserved.  The above) N
(   rules would also apply by default to live properties, unless defined) N
(   otherwise.) N
() N
(   Servers MUST ignore the XML attribute xml:space if present and never) N
(   use it to change whitespace handling.  Whitespace in property values) N
(   is significant.) N
() N
(4.3.1.  Example - Property with Mixed Content) N
() N
(   Consider a dead property 'author' created by the client as follows:) N
() N
(     <D:prop xml:lang="en" xmlns:D="DAV:">) N
(       <x:author xmlns:x='http://example.com/ns'>) N
(         <x:name>Jane Doe</x:name>) N
(         <!-- Jane's contact info -->) N
(         <x:uri type='email') N
(                added='2005-11-26'>mailto:jane.doe@example.com</x:uri>) N
(         <x:uri type='web') N
(                added='2005-11-27'>http://www.example.com</x:uri>) N
(         <x:notes xmlns:h='http://www.w3.org/1999/xhtml'>) N
(           Jane has been working way <h:em>too</h:em> long on the) N
(           long-awaited revision of <![CDATA[<RFC2518>]]>.) N
(         </x:notes>) N
(       </x:author>) N
(     </D:prop>) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 12]) N
() N
(rfc4918.txt) (Page 12/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (6/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   When this property is requested, a server might return:) N
() N
(     <D:prop xmlns:D='DAV:'><author) N
(             xml:lang='en') N
(             xmlns:x='http://example.com/ns') N
(             xmlns='http://example.com/ns') N
(             xmlns:h='http://www.w3.org/1999/xhtml'>) N
(         <x:name>Jane Doe</x:name>) N
(         <x:uri   added="2005-11-26" type="email") N
(           >mailto:jane.doe@example.com</x:uri>) N
(         <x:uri   added="2005-11-27" type="web") N
(           >http://www.example.com</x:uri>) N
(         <x:notes>) N
(           Jane has been working way <h:em>too</h:em> long on the) N
(           long-awaited revision of &lt;RFC2518&gt;.) N
(         </x:notes>) N
(       </author>) N
(     </D:prop>) N
() N
(   Note in this example:) N
() N
(   o  The [prefix] for the property name itself was not preserved, being) N
(      non-significant, whereas all other [prefix] values have been) N
(      preserved,) N
() N
(   o  attribute values have been rewritten with double quotes instead of) N
(      single quotes \(quoting style is not significant\), and attribute) N
(      order has not been preserved,) N
() N
(   o  the xml:lang attribute has been returned on the property name) N
(      element itself \(it was in scope when the property was set, but the) N
(      exact position in the response is not considered significant as) N
(      long as it is in scope\),) N
() N
(   o  whitespace between tags has been preserved everywhere \(whitespace) N
(      between attributes not so\),) N
() N
(   o  CDATA encapsulation was replaced with character escaping \(the) N
(      reverse would also be legal\),) N
() N
(   o  the comment item was stripped \(as would have been a processing) N
(      instruction item\).) N
() N
(   Implementation note: there are cases such as editing scenarios where) N
(   clients may require that XML content is preserved character by) N
(   character \(such as attribute ordering or quoting style\).  In this) N
(   case, clients should consider using a text-only property value by) N
(   escaping all characters that have a special meaning in XML parsing.) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 13]) N
() N
(rfc4918.txt) (Page 13/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(4.4.  Property Names) N
() N
(   A property name is a universally unique identifier that is associated) N
(   with a schema that provides information about the syntax and) N
(   semantics of the property.) N
() N
(   Because a property's name is universally unique, clients can depend) N
(   upon consistent behavior for a particular property across multiple) N
(   resources, on the same and across different servers, so long as that) N
(   property is "live" on the resources in question, and the) N
(   implementation of the live property is faithful to its definition.) N
() N
(   The XML namespace mechanism, which is based on URIs \([RFC3986]\), is) N
(   used to name properties because it prevents namespace collisions and) N
(   provides for varying degrees of administrative control.) N
() N
(   The property namespace is flat; that is, no hierarchy of properties) N
(   is explicitly recognized.  Thus, if a property A and a property A/B) N
(   exist on a resource, there is no recognition of any relationship) N
(   between the two properties.  It is expected that a separate) N
(   specification will eventually be produced that will address issues) N
(   relating to hierarchical properties.) N
() N
(   Finally, it is not possible to define the same property twice on a) N
(   single resource, as this would cause a collision in the resource's) N
(   property namespace.) N
() N
(4.5.  Source Resources and Output Resources) N
() N
(   Some HTTP resources are dynamically generated by the server.  For) N
(   these resources, there presumably exists source code somewhere) N
(   governing how that resource is generated.  The relationship of source) N
(   files to output HTTP resources may be one to one, one to many, many) N
(   to one, or many to many.  There is no mechanism in HTTP to determine) N
(   whether a resource is even dynamic, let alone where its source files) N
(   exist or how to author them.  Although this problem would usefully be) N
(   solved, interoperable WebDAV implementations have been widely) N
(   deployed without actually solving this problem, by dealing only with) N
(   static resources.  Thus, the source vs. output problem is not solved) N
(   in this specification and has been deferred to a separate document.) N
() N
(5.  Collections of Web Resources) N
() N
(   This section provides a description of a type of Web resource, the) N
(   collection, and discusses its interactions with the HTTP URL) N
(   namespace and with HTTP methods.  The purpose of a collection) N
(   resource is to model collection-like objects \(e.g., file system) N
(   directories\) within a server's namespace.) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 14]) N
() N
(rfc4918.txt) (Page 14/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (7/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (15-16) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   All DAV-compliant resources MUST support the HTTP URL namespace model) N
(   specified herein.) N
() N
(5.1.  HTTP URL Namespace Model) N
() N
(   The HTTP URL namespace is a hierarchical namespace where the) N
(   hierarchy is delimited with the "/" character.) N
() N
(   An HTTP URL namespace is said to be consistent if it meets the) N
(   following conditions: for every URL in the HTTP hierarchy there) N
(   exists a collection that contains that URL as an internal member URL.) N
(   The root, or top-level collection of the namespace under) N
(   consideration, is exempt from the previous rule.  The top-level) N
(   collection of the namespace under consideration is not necessarily) N
(   the collection identified by the absolute path '/' -- it may be) N
(   identified by one or more path segments \(e.g., /servlets/webdav/...\)) N
() N
(   Neither HTTP/1.1 nor WebDAV requires that the entire HTTP URL) N
(   namespace be consistent -- a WebDAV-compatible resource may not have) N
(   a parent collection.  However, certain WebDAV methods are prohibited) N
(   from producing results that cause namespace inconsistencies.) N
() N
(   As is implicit in [RFC2616] and [RFC3986], any resource, including) N
(   collection resources, MAY be identified by more than one URI.  For) N
(   example, a resource could be identified by multiple HTTP URLs.) N
() N
(5.2.  Collection Resources) N
() N
(   Collection resources differ from other resources in that they also) N
(   act as containers.  Some HTTP methods apply only to a collection, but) N
(   some apply to some or all of the resources inside the container) N
(   defined by the collection.  When the scope of a method is not clear,) N
(   the client can specify what depth to apply.  Depth can be either zero) N
(   levels \(only the collection\), one level \(the collection and directly) N
(   contained resources\), or infinite levels \(the collection and all) N
(   contained resources recursively\).) N
() N
(   A collection's state consists of at least a set of mappings between) N
(   path segments and resources, and a set of properties on the) N
(   collection itself.  In this document, a resource B will be said to be) N
(   contained in the collection resource A if there is a path segment) N
(   mapping that maps to B and that is contained in A.  A collection MUST) N
(   contain at most one mapping for a given path segment, i.e., it is) N
(   illegal to have the same path segment mapped to more than one) N
(   resource.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 15]) N
() N
(rfc4918.txt) (Page 15/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Properties defined on collections behave exactly as do properties on) N
(   non-collection resources.  A collection MAY have additional state) N
(   such as entity bodies returned by GET.) N
() N
(   For all WebDAV-compliant resources A and B, identified by URLs "U") N
(   and "V", respectively, such that "V" is equal to "U/SEGMENT", A MUST) N
(   be a collection that contains a mapping from "SEGMENT" to B.  So, if) N
(   resource B with URL "http://example.com/bar/blah" is WebDAV compliant) N
(   and if resource A with URL "http://example.com/bar/" is WebDAV) N
(   compliant, then resource A must be a collection and must contain) N
(   exactly one mapping from "blah" to B.) N
() N
(   Although commonly a mapping consists of a single segment and a) N
(   resource, in general, a mapping consists of a set of segments and a) N
(   resource.  This allows a server to treat a set of segments as) N
(   equivalent \(i.e., either all of the segments are mapped to the same) N
(   resource, or none of the segments are mapped to a resource\).  For) N
(   example, a server that performs case-folding on segments will treat) N
(   the segments "ab", "Ab", "aB", and "AB" as equivalent.  A client can) N
(   then use any of these segments to identify the resource.  Note that a) N
(   PROPFIND result will select one of these equivalent segments to) N
(   identify the mapping, so there will be one PROPFIND response element) N
(   per mapping, not one per segment in the mapping.) N
() N
(   Collection resources MAY have mappings to non-WebDAV-compliant) N
(   resources in the HTTP URL namespace hierarchy but are not required to) N
(   do so.  For example, if resource X with URL) N
(   "http://example.com/bar/blah" is not WebDAV compliant and resource A) N
(   with "URL http://example.com/bar/" identifies a WebDAV collection,) N
(   then A may or may not have a mapping from "blah" to X.) N
() N
(   If a WebDAV-compliant resource has no WebDAV-compliant internal) N
(   members in the HTTP URL namespace hierarchy, then the WebDAV-) N
(   compliant resource is not required to be a collection.) N
() N
(   There is a standing convention that when a collection is referred to) N
(   by its name without a trailing slash, the server MAY handle the) N
(   request as if the trailing slash were present.  In this case, it) N
(   SHOULD return a Content-Location header in the response, pointing to) N
(   the URL ending with the "/".  For example, if a client invokes a) N
(   method on http://example.com/blah \(no trailing slash\), the server may) N
(   respond as if the operation were invoked on http://example.com/blah/) N
(   \(trailing slash\), and should return a Content-Location header with) N
(   the value http://example.com/blah/.  Wherever a server produces a URL) N
(   referring to a collection, the server SHOULD include the trailing) N
(   slash.  In general, clients SHOULD use the trailing slash form of) N
(   collection names.  If clients do not use the trailing slash form the) N
(   client needs to be prepared to see a redirect response.  Clients will) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 16]) N
() N
(rfc4918.txt) (Page 16/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (8/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (17-18) 9
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   find the DAV:resourcetype property more reliable than the URL to find) N
(   out if a resource is a collection.) N
() N
(   Clients MUST be able to support the case where WebDAV resources are) N
(   contained inside non-WebDAV resources.  For example, if an OPTIONS) N
(   response from "http://example.com/servlet/dav/collection" indicates) N
(   WebDAV support, the client cannot assume that) N
(   "http://example.com/servlet/dav/" or its parent necessarily are) N
(   WebDAV collections.) N
() N
(   A typical scenario in which mapped URLs do not appear as members of) N
(   their parent collection is the case where a server allows links or) N
(   redirects to non-WebDAV resources.  For instance, "/col/link" might) N
(   not appear as a member of "/col/", although the server would respond) N
(   with a 302 status to a GET request to "/col/link"; thus, the URL) N
(   "/col/link" would indeed be mapped.  Similarly, a dynamically-) N
(   generated page might have a URL mapping from "/col/index.html", thus) N
(   this resource might respond with a 200 OK to a GET request yet not) N
(   appear as a member of "/col/".) N
() N
(   Some mappings to even WebDAV-compliant resources might not appear in) N
(   the parent collection.  An example for this case are servers that) N
(   support multiple alias URLs for each WebDAV-compliant resource.  A) N
(   server may implement case-insensitive URLs, thus "/col/a" and) N
(   "/col/A" identify the same resource, yet only either "a" or "A" is) N
(   reported upon listing the members of "/col".  In cases where a server) N
(   treats a set of segments as equivalent, the server MUST expose only) N
(   one preferred segment per mapping, consistently chosen, in PROPFIND) N
(   responses.) N
() N
(6.  Locking) N
() N
(   The ability to lock a resource provides a mechanism for serializing) N
(   access to that resource.  Using a lock, an authoring client can) N
(   provide a reasonable guarantee that another principal will not modify) N
(   a resource while it is being edited.  In this way, a client can) N
(   prevent the "lost update" problem.) N
() N
(   This specification allows locks to vary over two client-specified) N
(   parameters, the number of principals involved \(exclusive vs. shared\)) N
(   and the type of access to be granted.  This document defines locking) N
(   for only one access type, write.  However, the syntax is extensible,) N
(   and permits the eventual specification of locking for other access) N
(   types.) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 17]) N
() N
(rfc4918.txt) (Page 17/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(6.1.  Lock Model) N
() N
(   This section provides a concise model for how locking behaves.  Later) N
(   sections will provide more detail on some of the concepts and refer) N
(   back to these model statements.  Normative statements related to LOCK) N
(   and UNLOCK method handling can be found in the sections on those) N
(   methods, whereas normative statements that cover any method are) N
(   gathered here.) N
() N
(   1.  A lock either directly or indirectly locks a resource.) N
() N
(   2.  A resource becomes directly locked when a LOCK request to a URL) N
(       of that resource creates a new lock.  The "lock-root" of the new) N
(       lock is that URL.  If at the time of the request, the URL is not) N
(       mapped to a resource, a new empty resource is created and) N
(       directly locked.) N
() N
(   3.  An exclusive lock \(Section 6.2\) conflicts with any other kind of) N
(       lock on the same resource, whether either lock is direct or) N
(       indirect.  A server MUST NOT create conflicting locks on a) N
(       resource.) N
() N
(   4.  For a collection that is locked with a depth-infinity lock L, all) N
(       member resources are indirectly locked.  Changes in membership of) N
(       such a collection affect the set of indirectly locked resources:) N
() N
(       *  If a member resource is added to the collection, the new) N
(          member resource MUST NOT already have a conflicting lock,) N
(          because the new resource MUST become indirectly locked by L.) N
() N
(       *  If a member resource stops being a member of the collection,) N
(          then the resource MUST no longer be indirectly locked by L.) N
() N
(   5.  Each lock is identified by a single globally unique lock token) N
(       \(Section 6.5\).) N
() N
(   6.  An UNLOCK request deletes the lock with the specified lock token.) N
(       After a lock is deleted, no resource is locked by that lock.) N
() N
(   7.  A lock token is "submitted" in a request when it appears in an) N
(       "If" header \(Section 7, "Write Lock", discusses when token) N
(       submission is required for write locks\).) N
() N
(   8.  If a request causes the lock-root of any lock to become an) N
(       unmapped URL, then the lock MUST also be deleted by that request.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 18]) N
() N
(rfc4918.txt) (Page 18/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (9/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (19-20) 10
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(6.2.  Exclusive vs. Shared Locks) N
() N
(   The most basic form of lock is an exclusive lock.  Exclusive locks) N
(   avoid having to deal with content change conflicts, without requiring) N
(   any coordination other than the methods described in this) N
(   specification.) N
() N
(   However, there are times when the goal of a lock is not to exclude) N
(   others from exercising an access right but rather to provide a) N
(   mechanism for principals to indicate that they intend to exercise) N
(   their access rights.  Shared locks are provided for this case.  A) N
(   shared lock allows multiple principals to receive a lock.  Hence any) N
(   principal that has both access privileges and a valid lock can use) N
(   the locked resource.) N
() N
(   With shared locks, there are two trust sets that affect a resource.) N
(   The first trust set is created by access permissions.  Principals who) N
(   are trusted, for example, may have permission to write to the) N
(   resource.  Among those who have access permission to write to the) N
(   resource, the set of principals who have taken out a shared lock also) N
(   must trust each other, creating a \(typically\) smaller trust set) N
(   within the access permission write set.) N
() N
(   Starting with every possible principal on the Internet, in most) N
(   situations the vast majority of these principals will not have write) N
(   access to a given resource.  Of the small number who do have write) N
(   access, some principals may decide to guarantee their edits are free) N
(   from overwrite conflicts by using exclusive write locks.  Others may) N
(   decide they trust their collaborators will not overwrite their work) N
(   \(the potential set of collaborators being the set of principals who) N
(   have write permission\) and use a shared lock, which informs their) N
(   collaborators that a principal may be working on the resource.) N
() N
(   The WebDAV extensions to HTTP do not need to provide all of the) N
(   communications paths necessary for principals to coordinate their) N
(   activities.  When using shared locks, principals may use any out-of-) N
(   band communication channel to coordinate their work \(e.g., face-to-) N
(   face interaction, written notes, post-it notes on the screen,) N
(   telephone conversation, email, etc.\)  The intent of a shared lock is) N
(   to let collaborators know who else may be working on a resource.) N
() N
(   Shared locks are included because experience from Web-distributed) N
(   authoring systems has indicated that exclusive locks are often too) N
(   rigid.  An exclusive lock is used to enforce a particular editing) N
(   process: take out an exclusive lock, read the resource, perform) N
(   edits, write the resource, release the lock.  This editing process) N
(   has the problem that locks are not always properly released, for) N
(   example, when a program crashes or when a lock creator leaves without) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 19]) N
() N
(rfc4918.txt) (Page 19/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   unlocking a resource.  While both timeouts \(Section 6.6\) and) N
(   administrative action can be used to remove an offending lock,) N
(   neither mechanism may be available when needed; the timeout may be) N
(   long or the administrator may not be available.) N
() N
(   A successful request for a new shared lock MUST result in the) N
(   generation of a unique lock associated with the requesting principal.) N
(   Thus, if five principals have taken out shared write locks on the) N
(   same resource, there will be five locks and five lock tokens, one for) N
(   each principal.) N
() N
(6.3.  Required Support) N
() N
(   A WebDAV-compliant resource is not required to support locking in any) N
(   form.  If the resource does support locking, it may choose to support) N
(   any combination of exclusive and shared locks for any access types.) N
() N
(   The reason for this flexibility is that locking policy strikes to the) N
(   very heart of the resource management and versioning systems employed) N
(   by various storage repositories.  These repositories require control) N
(   over what sort of locking will be made available.  For example, some) N
(   repositories only support shared write locks, while others only) N
(   provide support for exclusive write locks, while yet others use no) N
(   locking at all.  As each system is sufficiently different to merit) N
(   exclusion of certain locking features, this specification leaves) N
(   locking as the sole axis of negotiation within WebDAV.) N
() N
(6.4.  Lock Creator and Privileges) N
() N
(   The creator of a lock has special privileges to use the lock to) N
(   modify the resource.  When a locked resource is modified, a server) N
(   MUST check that the authenticated principal matches the lock creator) N
(   \(in addition to checking for valid lock token submission\).) N
() N
(   The server MAY allow privileged users other than the lock creator to) N
(   destroy a lock \(for example, the resource owner or an administrator\).) N
(   The 'unlock' privilege in [RFC3744] was defined to provide that) N
(   permission.) N
() N
(   There is no requirement for servers to accept LOCK requests from all) N
(   users or from anonymous users.) N
() N
(   Note that having a lock does not confer full privilege to modify the) N
(   locked resource.  Write access and other privileges MUST be enforced) N
(   through normal privilege or authentication mechanisms, not based on) N
(   the possible obscurity of lock token values.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 20]) N
() N
(rfc4918.txt) (Page 20/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (10/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (21-22) 11
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(6.5.  Lock Tokens) N
() N
(   A lock token is a type of state token that identifies a particular) N
(   lock.  Each lock has exactly one unique lock token generated by the) N
(   server.  Clients MUST NOT attempt to interpret lock tokens in any) N
(   way.) N
() N
(   Lock token URIs MUST be unique across all resources for all time.) N
(   This uniqueness constraint allows lock tokens to be submitted across) N
(   resources and servers without fear of confusion.  Since lock tokens) N
(   are unique, a client MAY submit a lock token in an If header on a) N
(   resource other than the one that returned it.) N
() N
(   When a LOCK operation creates a new lock, the new lock token is) N
(   returned in the Lock-Token response header defined in Section 10.5,) N
(   and also in the body of the response.) N
() N
(   Servers MAY make lock tokens publicly readable \(e.g., in the DAV:) N
(   lockdiscovery property\).  One use case for making lock tokens) N
(   readable is so that a long-lived lock can be removed by the resource) N
(   owner \(the client that obtained the lock might have crashed or) N
(   disconnected before cleaning up the lock\).  Except for the case of) N
(   using UNLOCK under user guidance, a client SHOULD NOT use a lock) N
(   token created by another client instance.) N
() N
(   This specification encourages servers to create Universally Unique) N
(   Identifiers \(UUIDs\) for lock tokens, and to use the URI form defined) N
(   by "A Universally Unique Identifier \(UUID\) URN Namespace") N
(   \([RFC4122]\).  However, servers are free to use any URI \(e.g., from) N
(   another scheme\) so long as it meets the uniqueness requirements.  For) N
(   example, a valid lock token might be constructed using the) N
(   "opaquelocktoken" scheme defined in Appendix C.) N
() N
(   Example: "urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6") N
() N
(6.6.  Lock Timeout) N
() N
(   A lock MAY have a limited lifetime.  The lifetime is suggested by the) N
(   client when creating or refreshing the lock, but the server) N
(   ultimately chooses the timeout value.  Timeout is measured in seconds) N
(   remaining until lock expiration.) N
() N
(   The timeout counter MUST be restarted if a refresh lock request is) N
(   successful \(see Section 9.10.2\).  The timeout counter SHOULD NOT be) N
(   restarted at any other time.) N
() N
(   If the timeout expires, then the lock SHOULD be removed.  In this) N
(   case the server SHOULD act as if an UNLOCK method was executed by the) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 21]) N
() N
(rfc4918.txt) (Page 21/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   server on the resource using the lock token of the timed-out lock,) N
(   performed with its override authority.) N
() N
(   Servers are advised to pay close attention to the values submitted by) N
(   clients, as they will be indicative of the type of activity the) N
(   client intends to perform.  For example, an applet running in a) N
(   browser may need to lock a resource, but because of the instability) N
(   of the environment within which the applet is running, the applet may) N
(   be turned off without warning.  As a result, the applet is likely to) N
(   ask for a relatively small timeout value so that if the applet dies,) N
(   the lock can be quickly harvested.  However, a document management) N
(   system is likely to ask for an extremely long timeout because its) N
(   user may be planning on going offline.) N
() N
(   A client MUST NOT assume that just because the timeout has expired,) N
(   the lock has immediately been removed.) N
() N
(   Likewise, a client MUST NOT assume that just because the timeout has) N
(   not expired, the lock still exists.  Clients MUST assume that locks) N
(   can arbitrarily disappear at any time, regardless of the value given) N
(   in the Timeout header.  The Timeout header only indicates the) N
(   behavior of the server if extraordinary circumstances do not occur.) N
(   For example, a sufficiently privileged user may remove a lock at any) N
(   time, or the system may crash in such a way that it loses the record) N
(   of the lock's existence.) N
() N
(6.7.  Lock Capability Discovery) N
() N
(   Since server lock support is optional, a client trying to lock a) N
(   resource on a server can either try the lock and hope for the best,) N
(   or perform some form of discovery to determine what lock capabilities) N
(   the server supports.  This is known as lock capability discovery.  A) N
(   client can determine what lock types the server supports by) N
(   retrieving the DAV:supportedlock property.) N
() N
(   Any DAV-compliant resource that supports the LOCK method MUST support) N
(   the DAV:supportedlock property.) N
() N
(6.8.  Active Lock Discovery) N
() N
(   If another principal locks a resource that a principal wishes to) N
(   access, it is useful for the second principal to be able to find out) N
(   who the first principal is.  For this purpose the DAV:lockdiscovery) N
(   property is provided.  This property lists all outstanding locks,) N
(   describes their type, and MAY even provide the lock tokens.) N
() N
(   Any DAV-compliant resource that supports the LOCK method MUST support) N
(   the DAV:lockdiscovery property.) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 22]) N
() N
(rfc4918.txt) (Page 22/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (11/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (23-24) 12
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(7.  Write Lock) N
() N
(   This section describes the semantics specific to the write lock type.) N
(   The write lock is a specific instance of a lock type, and is the only) N
(   lock type described in this specification.) N
() N
(   An exclusive write lock protects a resource: it prevents changes by) N
(   any principal other than the lock creator and in any case where the) N
(   lock token is not submitted \(e.g., by a client process other than the) N
(   one holding the lock\).) N
() N
(   Clients MUST submit a lock-token they are authorized to use in any) N
(   request that modifies a write-locked resource.  The list of) N
(   modifications covered by a write-lock include:) N
() N
(   1.  A change to any of the following aspects of any write-locked) N
(       resource:) N
() N
(       *  any variant,) N
() N
(       *  any dead property,) N
() N
(       *  any live property that is lockable \(a live property is) N
(          lockable unless otherwise defined.\)) N
() N
(   2.  For collections, any modification of an internal member URI.  An) N
(       internal member URI of a collection is considered to be modified) N
(       if it is added, removed, or identifies a different resource.) N
(       More discussion on write locks and collections is found in) N
(       Section 7.4.) N
() N
(   3.  A modification of the mapping of the root of the write lock,) N
(       either to another resource or to no resource \(e.g., DELETE\).) N
() N
(   Of the methods defined in HTTP and WebDAV, PUT, POST, PROPPATCH,) N
(   LOCK, UNLOCK, MOVE, COPY \(for the destination resource\), DELETE, and) N
(   MKCOL are affected by write locks.  All other HTTP/WebDAV methods) N
(   defined so far -- GET in particular -- function independently of a) N
(   write lock.) N
() N
(   The next few sections describe in more specific terms how write locks) N
(   interact with various operations.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 23]) N
() N
(rfc4918.txt) (Page 23/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(7.1.  Write Locks and Properties) N
() N
(   While those without a write lock may not alter a property on a) N
(   resource it is still possible for the values of live properties to) N
(   change, even while locked, due to the requirements of their schemas.) N
(   Only dead properties and live properties defined as lockable are) N
(   guaranteed not to change while write locked.) N
() N
(7.2.  Avoiding Lost Updates) N
() N
(   Although the write locks provide some help in preventing lost) N
(   updates, they cannot guarantee that updates will never be lost.) N
(   Consider the following scenario:) N
() N
(   Two clients A and B are interested in editing the resource) N
(   'index.html'.  Client A is an HTTP client rather than a WebDAV) N
(   client, and so does not know how to perform locking.) N
() N
(   Client A doesn't lock the document, but does a GET, and begins) N
(   editing.) N
() N
(   Client B does LOCK, performs a GET and begins editing.) N
() N
(   Client B finishes editing, performs a PUT, then an UNLOCK.) N
() N
(   Client A performs a PUT, overwriting and losing all of B's changes.) N
() N
(   There are several reasons why the WebDAV protocol itself cannot) N
(   prevent this situation.  First, it cannot force all clients to use) N
(   locking because it must be compatible with HTTP clients that do not) N
(   comprehend locking.  Second, it cannot require servers to support) N
(   locking because of the variety of repository implementations, some of) N
(   which rely on reservations and merging rather than on locking.) N
(   Finally, being stateless, it cannot enforce a sequence of operations) N
(   like LOCK / GET / PUT / UNLOCK.) N
() N
(   WebDAV servers that support locking can reduce the likelihood that) N
(   clients will accidentally overwrite each other's changes by requiring) N
(   clients to lock resources before modifying them.  Such servers would) N
(   effectively prevent HTTP 1.0 and HTTP 1.1 clients from modifying) N
(   resources.) N
() N
(   WebDAV clients can be good citizens by using a lock / retrieve /) N
(   write /unlock sequence of operations \(at least by default\) whenever) N
(   they interact with a WebDAV server that supports locking.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 24]) N
() N
(rfc4918.txt) (Page 24/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (12/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (25-26) 13
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   HTTP 1.1 clients can be good citizens, avoiding overwriting other) N
(   clients' changes, by using entity tags in If-Match headers with any) N
(   requests that would modify resources.) N
() N
(   Information managers may attempt to prevent overwrites by) N
(   implementing client-side procedures requiring locking before) N
(   modifying WebDAV resources.) N
() N
(7.3.  Write Locks and Unmapped URLs) N
() N
(   WebDAV provides the ability to send a LOCK request to an unmapped URL) N
(   in order to reserve the name for use.  This is a simple way to avoid) N
(   the lost-update problem on the creation of a new resource \(another) N
(   way is to use If-None-Match header specified in Section 14.26 of) N
(   [RFC2616]\).  It has the side benefit of locking the new resource) N
(   immediately for use of the creator.) N
() N
(   Note that the lost-update problem is not an issue for collections) N
(   because MKCOL can only be used to create a collection, not to) N
(   overwrite an existing collection.  When trying to lock a collection) N
(   upon creation, clients can attempt to increase the likelihood of) N
(   getting the lock by pipelining the MKCOL and LOCK requests together) N
(   \(but because this doesn't convert two separate operations into one) N
(   atomic operation, there's no guarantee this will work\).) N
() N
(   A successful lock request to an unmapped URL MUST result in the) N
(   creation of a locked \(non-collection\) resource with empty content.) N
(   Subsequently, a successful PUT request \(with the correct lock token\)) N
(   provides the content for the resource.  Note that the LOCK request) N
(   has no mechanism for the client to provide Content-Type or Content-) N
(   Language, thus the server will use defaults or empty values and rely) N
(   on the subsequent PUT request for correct values.) N
() N
(   A resource created with a LOCK is empty but otherwise behaves in) N
(   every way as a normal resource.  It behaves the same way as a) N
(   resource created by a PUT request with an empty body \(and where a) N
(   Content-Type and Content-Language was not specified\), followed by a) N
(   LOCK request to the same resource.  Following from this model, a) N
(   locked empty resource:) N
() N
(   o  Can be read, deleted, moved, and copied, and in all ways behaves) N
(      as a regular non-collection resource.) N
() N
(   o  Appears as a member of its parent collection.) N
() N
(   o  SHOULD NOT disappear when its lock goes away \(clients must) N
(      therefore be responsible for cleaning up their own mess, as with) N
(      any other operation or any non-empty resource\).) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 25]) N
() N
(rfc4918.txt) (Page 25/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   o  MAY NOT have values for properties like DAV:getcontentlanguage) N
(      that haven't been specified yet by the client.) N
() N
(   o  Can be updated \(have content added\) with a PUT request.) N
() N
(   o  MUST NOT be converted into a collection.  The server MUST fail a) N
(      MKCOL request \(as it would with a MKCOL request to any existing) N
(      non-collection resource\).) N
() N
(   o  MUST have defined values for DAV:lockdiscovery and DAV:) N
(      supportedlock properties.) N
() N
(   o  The response MUST indicate that a resource was created, by use of) N
(      the "201 Created" response code \(a LOCK request to an existing) N
(      resource instead will result in 200 OK\).  The body must still) N
(      include the DAV:lockdiscovery property, as with a LOCK request to) N
(      an existing resource.) N
() N
(   The client is expected to update the locked empty resource shortly) N
(   after locking it, using PUT and possibly PROPPATCH.) N
() N
(   Alternatively and for backwards compatibility to [RFC2518], servers) N
(   MAY implement Lock-Null Resources \(LNRs\) instead \(see definition in) N
(   Appendix D\).  Clients can easily interoperate both with servers that) N
(   support the old model LNRs and the recommended model of "locked empty) N
(   resources" by only attempting PUT after a LOCK to an unmapped URL,) N
(   not MKCOL or GET, and by not relying on specific properties of LNRs.) N
() N
(7.4.  Write Locks and Collections) N
() N
(   There are two kinds of collection write locks.  A depth-0 write lock) N
(   on a collection protects the collection properties plus the internal) N
(   member URLs of that one collection, while not protecting the content) N
(   or properties of member resources \(if the collection itself has any) N
(   entity bodies, those are also protected\).  A depth-infinity write) N
(   lock on a collection provides the same protection on that collection) N
(   and also provides write lock protection on every member resource.) N
() N
(   Expressed otherwise, a write lock of either kind protects any request) N
(   that would create a new resource in a write locked collection, any) N
(   request that would remove an internal member URL of a write locked) N
(   collection, and any request that would change the segment name of any) N
(   internal member.) N
() N
(   Thus, a collection write lock protects all the following actions:) N
() N
(   o  DELETE a collection's direct internal member,) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 26]) N
() N
(rfc4918.txt) (Page 26/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (13/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (27-28) 14
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   o  MOVE an internal member out of the collection,) N
() N
(   o  MOVE an internal member into the collection,) N
() N
(   o  MOVE to rename an internal member within a collection,) N
() N
(   o  COPY an internal member into a collection, and) N
() N
(   o  PUT or MKCOL request that would create a new internal member.) N
() N
(   The collection's lock token is required in addition to the lock token) N
(   on the internal member itself, if it is locked separately.) N
() N
(   In addition, a depth-infinity lock affects all write operations to) N
(   all members of the locked collection.  With a depth-infinity lock,) N
(   the resource identified by the root of the lock is directly locked,) N
(   and all its members are indirectly locked.) N
() N
(   o  Any new resource added as a descendant of a depth-infinity locked) N
(      collection becomes indirectly locked.) N
() N
(   o  Any indirectly locked resource moved out of the locked collection) N
(      into an unlocked collection is thereafter unlocked.) N
() N
(   o  Any indirectly locked resource moved out of a locked source) N
(      collection into a depth-infinity locked target collection remains) N
(      indirectly locked but is now protected by the lock on the target) N
(      collection \(the target collection's lock token will thereafter be) N
(      required to make further changes\).) N
() N
(   If a depth-infinity write LOCK request is issued to a collection) N
(   containing member URLs identifying resources that are currently) N
(   locked in a manner that conflicts with the new lock \(see Section 6.1,) N
(   point 3\), the request MUST fail with a 423 \(Locked\) status code, and) N
(   the response SHOULD contain the 'no-conflicting-lock' precondition.) N
() N
(   If a lock request causes the URL of a resource to be added as an) N
(   internal member URL of a depth-infinity locked collection, then the) N
(   new resource MUST be automatically protected by the lock.  For) N
(   example, if the collection /a/b/ is write locked and the resource /c) N
(   is moved to /a/b/c, then resource /a/b/c will be added to the write) N
(   lock.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 27]) N
() N
(rfc4918.txt) (Page 27/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(7.5.  Write Locks and the If Request Header) N
() N
(   A user agent has to demonstrate knowledge of a lock when requesting) N
(   an operation on a locked resource.  Otherwise, the following scenario) N
(   might occur.  In the scenario, program A, run by User A, takes out a) N
(   write lock on a resource.  Program B, also run by User A, has no) N
(   knowledge of the lock taken out by program A, yet performs a PUT to) N
(   the locked resource.  In this scenario, the PUT succeeds because) N
(   locks are associated with a principal, not a program, and thus) N
(   program B, because it is acting with principal A's credential, is) N
(   allowed to perform the PUT.  However, had program B known about the) N
(   lock, it would not have overwritten the resource, preferring instead) N
(   to present a dialog box describing the conflict to the user.  Due to) N
(   this scenario, a mechanism is needed to prevent different programs) N
(   from accidentally ignoring locks taken out by other programs with the) N
(   same authorization.) N
() N
(   In order to prevent these collisions, a lock token MUST be submitted) N
(   by an authorized principal for all locked resources that a method may) N
(   change or the method MUST fail.  A lock token is submitted when it) N
(   appears in an If header.  For example, if a resource is to be moved) N
(   and both the source and destination are locked, then two lock tokens) N
(   must be submitted in the If header, one for the source and the other) N
(   for the destination.) N
() N
(7.5.1.  Example - Write Lock and COPY) N
() N
(   >>Request) N
() N
(     COPY /~fielding/index.html HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: http://www.example.com/users/f/fielding/index.html) N
(     If: <http://www.example.com/users/f/fielding/index.html>) N
(         \(<urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6>\)) N
() N
(   >>Response) N
() N
(     HTTP/1.1 204 No Content) N
() N
(   In this example, even though both the source and destination are) N
(   locked, only one lock token must be submitted \(the one for the lock) N
(   on the destination\).  This is because the source resource is not) N
(   modified by a COPY, and hence unaffected by the write lock.  In this) N
(   example, user agent authentication has previously occurred via a) N
(   mechanism outside the scope of the HTTP protocol, in the underlying) N
(   transport layer.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 28]) N
() N
(rfc4918.txt) (Page 28/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (14/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (29-30) 15
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(7.5.2.  Example - Deleting a Member of a Locked Collection) N
() N
(   Consider a collection "/locked" with an exclusive, depth-infinity) N
(   write lock, and an attempt to delete an internal member "/locked/) N
(   member":) N
() N
(   >>Request) N
() N
(     DELETE /locked/member HTTP/1.1) N
(     Host: example.com) N
() N
(   >>Response) N
() N
(     HTTP/1.1 423 Locked) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:error xmlns:D="DAV:">) N
(       <D:lock-token-submitted>) N
(         <D:href>/locked/</D:href>) N
(       </D:lock-token-submitted>) N
(     </D:error>) N
() N
(   Thus, the client would need to submit the lock token with the request) N
(   to make it succeed.  To do that, various forms of the If header \(see) N
(   Section 10.4\) could be used.) N
() N
(   "No-Tag-List" format:) N
() N
(     If: \(<urn:uuid:150852e2-3847-42d5-8cbe-0f4f296f26cf>\)) N
() N
(   "Tagged-List" format, for "http://example.com/locked/":) N
() N
(     If: <http://example.com/locked/>) N
(         \(<urn:uuid:150852e2-3847-42d5-8cbe-0f4f296f26cf>\)) N
() N
(   "Tagged-List" format, for "http://example.com/locked/member":) N
() N
(     If: <http://example.com/locked/member>) N
(         \(<urn:uuid:150852e2-3847-42d5-8cbe-0f4f296f26cf>\)) N
() N
(   Note that, for the purpose of submitting the lock token, the actual) N
(   form doesn't matter; what's relevant is that the lock token appears) N
(   in the If header, and that the If header itself evaluates to true.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 29]) N
() N
(rfc4918.txt) (Page 29/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(7.6.  Write Locks and COPY/MOVE) N
() N
(   A COPY method invocation MUST NOT duplicate any write locks active on) N
(   the source.  However, as previously noted, if the COPY copies the) N
(   resource into a collection that is locked with a depth-infinity lock,) N
(   then the resource will be added to the lock.) N
() N
(   A successful MOVE request on a write locked resource MUST NOT move) N
(   the write lock with the resource.  However, if there is an existing) N
(   lock at the destination, the server MUST add the moved resource to) N
(   the destination lock scope.  For example, if the MOVE makes the) N
(   resource a child of a collection that has a depth-infinity lock, then) N
(   the resource will be added to that collection's lock.  Additionally,) N
(   if a resource with a depth-infinity lock is moved to a destination) N
(   that is within the scope of the same lock \(e.g., within the URL) N
(   namespace tree covered by the lock\), the moved resource will again be) N
(   added to the lock.  In both these examples, as specified in) N
(   Section 7.5, an If header must be submitted containing a lock token) N
(   for both the source and destination.) N
() N
(7.7.  Refreshing Write Locks) N
() N
(   A client MUST NOT submit the same write lock request twice.  Note) N
(   that a client is always aware it is resubmitting the same lock) N
(   request because it must include the lock token in the If header in) N
(   order to make the request for a resource that is already locked.) N
() N
(   However, a client may submit a LOCK request with an If header but) N
(   without a body.  A server receiving a LOCK request with no body MUST) N
(   NOT create a new lock -- this form of the LOCK request is only to be) N
(   used to "refresh" an existing lock \(meaning, at minimum, that any) N
(   timers associated with the lock MUST be reset\).) N
() N
(   Clients may submit Timeout headers of arbitrary value with their lock) N
(   refresh requests.  Servers, as always, may ignore Timeout headers) N
(   submitted by the client, and a server MAY refresh a lock with a) N
(   timeout period that is different than the previous timeout period) N
(   used for the lock, provided it advertises the new value in the LOCK) N
(   refresh response.) N
() N
(   If an error is received in response to a refresh LOCK request, the) N
(   client MUST NOT assume that the lock was refreshed.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 30]) N
() N
(rfc4918.txt) (Page 30/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (15/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (31-32) 16
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(8.  General Request and Response Handling) N
() N
(8.1.  Precedence in Error Handling) N
() N
(   Servers MUST return authorization errors in preference to other) N
(   errors.  This avoids leaking information about protected resources) N
(   \(e.g., a client that finds that a hidden resource exists by seeing a) N
(   423 Locked response to an anonymous request to the resource\).) N
() N
(8.2.  Use of XML) N
() N
(   In HTTP/1.1, method parameter information was exclusively encoded in) N
(   HTTP headers.  Unlike HTTP/1.1, WebDAV encodes method parameter) N
(   information either in an XML \([REC-XML]\) request entity body, or in) N
(   an HTTP header.  The use of XML to encode method parameters was) N
(   motivated by the ability to add extra XML elements to existing) N
(   structures, providing extensibility; and by XML's ability to encode) N
(   information in ISO 10646 character sets, providing) N
(   internationalization support.) N
() N
(   In addition to encoding method parameters, XML is used in WebDAV to) N
(   encode the responses from methods, providing the extensibility and) N
(   internationalization advantages of XML for method output, as well as) N
(   input.) N
() N
(   When XML is used for a request or response body, the Content-Type) N
(   type SHOULD be application/xml.  Implementations MUST accept both) N
(   text/xml and application/xml in request and response bodies.  Use of) N
(   text/xml is deprecated.) N
() N
(   All DAV-compliant clients and resources MUST use XML parsers that are) N
(   compliant with [REC-XML] and [REC-XML-NAMES].  All XML used in either) N
(   requests or responses MUST be, at minimum, well formed and use) N
(   namespaces correctly.  If a server receives XML that is not well-) N
(   formed, then the server MUST reject the entire request with a 400) N
(   \(Bad Request\).  If a client receives XML that is not well-formed in a) N
(   response, then the client MUST NOT assume anything about the outcome) N
(   of the executed method and SHOULD treat the server as malfunctioning.) N
() N
(   Note that processing XML submitted by an untrusted source may cause) N
(   risks connected to privacy, security, and service quality \(see) N
(   Section 20\).  Servers MAY reject questionable requests \(even though) N
(   they consist of well-formed XML\), for instance, with a 400 \(Bad) N
(   Request\) status code and an optional response body explaining the) N
(   problem.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 31]) N
() N
(rfc4918.txt) (Page 31/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(8.3.  URL Handling) N
() N
(   URLs appear in many places in requests and responses.) N
(   Interoperability experience with [RFC2518] showed that many clients) N
(   parsing Multi-Status responses did not fully implement the full) N
(   Reference Resolution defined in Section 5 of [RFC3986].  Thus,) N
(   servers in particular need to be careful in handling URLs in) N
(   responses, to ensure that clients have enough context to be able to) N
(   interpret all the URLs.  The rules in this section apply not only to) N
(   resource URLs in the 'href' element in Multi-Status responses, but) N
(   also to the Destination and If header resource URLs.) N
() N
(   The sender has a choice between two approaches: using a relative) N
(   reference, which is resolved against the Request-URI, or a full URI.) N
(   A server MUST ensure that every 'href' value within a Multi-Status) N
(   response uses the same format.) N
() N
(   WebDAV only uses one form of relative reference in its extensions,) N
(   the absolute path.) N
() N
(      Simple-ref = absolute-URI | \( path-absolute [ "?" query ] \)) N
() N
(   The absolute-URI, path-absolute and query productions are defined in) N
(   Sections 4.3, 3.3, and 3.4 of [RFC3986].) N
() N
(   Within Simple-ref productions, senders MUST NOT:) N
() N
(   o  use dot-segments \("." or ".."\), or) N
() N
(   o  have prefixes that do not match the Request-URI \(using the) N
(      comparison rules defined in Section 3.2.3 of [RFC2616]\).) N
() N
(   Identifiers for collections SHOULD end in a '/' character.) N
() N
(8.3.1.  Example - Correct URL Handling) N
() N
(   Consider the collection http://example.com/sample/ with the internal) N
(   member URL http://example.com/sample/a%20test and the PROPFIND) N
(   request below:) N
() N
(   >>Request:) N
() N
(     PROPFIND /sample/ HTTP/1.1) N
(     Host: example.com) N
(     Depth: 1) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 32]) N
() N
(rfc4918.txt) (Page 32/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (16/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (33-34) 17
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   In this case, the server should return two 'href' elements containing) N
(   either) N
() N
(   o  'http://example.com/sample/' and) N
(      'http://example.com/sample/a%20test', or) N
() N
(   o  '/sample/' and '/sample/a%20test') N
() N
(   Note that even though the server may be storing the member resource) N
(   internally as 'a test', it has to be percent-encoded when used inside) N
(   a URI reference \(see Section 2.1 of [RFC3986]\).  Also note that a) N
(   legal URI may still contain characters that need to be escaped within) N
(   XML character data, such as the ampersand character.) N
() N
(8.4.  Required Bodies in Requests) N
() N
(   Some of these new methods do not define bodies.  Servers MUST examine) N
(   all requests for a body, even when a body was not expected.  In cases) N
(   where a request body is present but would be ignored by a server, the) N
(   server MUST reject the request with 415 \(Unsupported Media Type\).) N
(   This informs the client \(which may have been attempting to use an) N
(   extension\) that the body could not be processed as the client) N
(   intended.) N
() N
(8.5.  HTTP Headers for Use in WebDAV) N
() N
(   HTTP defines many headers that can be used in WebDAV requests and) N
(   responses.  Not all of these are appropriate in all situations and) N
(   some interactions may be undefined.  Note that HTTP 1.1 requires the) N
(   Date header in all responses if possible \(see Section 14.18,) N
(   [RFC2616]\).) N
() N
(   The server MUST do authorization checks before checking any HTTP) N
(   conditional header.) N
() N
(8.6.  ETag) N
() N
(   HTTP 1.1 recommends the use of ETags rather than modification dates,) N
(   for cache control, and there are even stronger reasons to prefer) N
(   ETags for authoring.  Correct use of ETags is even more important in) N
(   a distributed authoring environment, because ETags are necessary) N
(   along with locks to avoid the lost-update problem.  A client might) N
(   fail to renew a lock, for example, when the lock times out and the) N
(   client is accidentally offline or in the middle of a long upload.) N
(   When a client fails to renew the lock, it's quite possible the) N
(   resource can still be relocked and the user can go on editing, as) N
(   long as no changes were made in the meantime.  ETags are required for) N
(   the client to be able to distinguish this case.  Otherwise, the) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 33]) N
() N
(rfc4918.txt) (Page 33/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   client is forced to ask the user whether to overwrite the resource on) N
(   the server without even being able to tell the user if it has) N
(   changed.  Timestamps do not solve this problem nearly as well as) N
(   ETags.) N
() N
(   Strong ETags are much more useful for authoring use cases than weak) N
(   ETags \(see Section 13.3.3 of [RFC2616]\).  Semantic equivalence can be) N
(   a useful concept but that depends on the document type and the) N
(   application type, and interoperability might require some agreement) N
(   or standard outside the scope of this specification and HTTP.  Note) N
(   also that weak ETags have certain restrictions in HTTP, e.g., these) N
(   cannot be used in If-Match headers.) N
() N
(   Note that the meaning of an ETag in a PUT response is not clearly) N
(   defined either in this document or in RFC 2616 \(i.e., whether the) N
(   ETag means that the resource is octet-for-octet equivalent to the) N
(   body of the PUT request, or whether the server could have made minor) N
(   changes in the formatting or content of the document upon storage\).) N
(   This is an HTTP issue, not purely a WebDAV issue.) N
() N
(   Because clients may be forced to prompt users or throw away changed) N
(   content if the ETag changes, a WebDAV server SHOULD NOT change the) N
(   ETag \(or the Last-Modified time\) for a resource that has an unchanged) N
(   body and location.  The ETag represents the state of the body or) N
(   contents of the resource.  There is no similar way to tell if) N
(   properties have changed.) N
() N
(8.7.  Including Error Response Bodies) N
() N
(   HTTP and WebDAV did not use the bodies of most error responses for) N
(   machine-parsable information until the specification for Versioning) N
(   Extensions to WebDAV introduced a mechanism to include more specific) N
(   information in the body of an error response \(Section 1.6 of) N
(   [RFC3253]\).  The error body mechanism is appropriate to use with any) N
(   error response that may take a body but does not already have a body) N
(   defined.  The mechanism is particularly appropriate when a status) N
(   code can mean many things \(for example, 400 Bad Request can mean) N
(   required headers are missing, headers are incorrectly formatted, or) N
(   much more\).  This error body mechanism is covered in Section 16.) N
() N
(8.8.  Impact of Namespace Operations on Cache Validators) N
() N
(   Note that the HTTP response headers "Etag" and "Last-Modified" \(see) N
(   [RFC2616], Sections 14.19 and 14.29\) are defined per URL \(not per) N
(   resource\), and are used by clients for caching.  Therefore servers) N
(   must ensure that executing any operation that affects the URL) N
(   namespace \(such as COPY, MOVE, DELETE, PUT, or MKCOL\) does preserve) N
(   their semantics, in particular:) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 34]) N
() N
(rfc4918.txt) (Page 34/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (17/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (35-36) 18
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   o  For any given URL, the "Last-Modified" value MUST increment every) N
(      time the representation returned upon GET changes \(within the) N
(      limits of timestamp resolution\).) N
() N
(   o  For any given URL, an "ETag" value MUST NOT be reused for) N
(      different representations returned by GET.) N
() N
(   In practice this means that servers) N
() N
(   o  might have to increment "Last-Modified" timestamps for every) N
(      resource inside the destination namespace of a namespace operation) N
(      unless it can do so more selectively, and) N
() N
(   o  similarly, might have to re-assign "ETag" values for these) N
(      resources \(unless the server allocates entity tags in a way so) N
(      that they are unique across the whole URL namespace managed by the) N
(      server\).) N
() N
(   Note that these considerations also apply to specific use cases, such) N
(   as using PUT to create a new resource at a URL that has been mapped) N
(   before, but has been deleted since then.) N
() N
(   Finally, WebDAV properties \(such as DAV:getetag and DAV:) N
(   getlastmodified\) that inherit their semantics from HTTP headers must) N
(   behave accordingly.) N
() N
(9.  HTTP Methods for Distributed Authoring) N
() N
(9.1.  PROPFIND Method) N
() N
(   The PROPFIND method retrieves properties defined on the resource) N
(   identified by the Request-URI, if the resource does not have any) N
(   internal members, or on the resource identified by the Request-URI) N
(   and potentially its member resources, if the resource is a collection) N
(   that has internal member URLs.  All DAV-compliant resources MUST) N
(   support the PROPFIND method and the propfind XML element) N
(   \(Section 14.20\) along with all XML elements defined for use with that) N
(   element.) N
() N
(   A client MUST submit a Depth header with a value of "0", "1", or) N
(   "infinity" with a PROPFIND request.  Servers MUST support "0" and "1") N
(   depth requests on WebDAV-compliant resources and SHOULD support) N
(   "infinity" requests.  In practice, support for infinite-depth) N
(   requests MAY be disabled, due to the performance and security) N
(   concerns associated with this behavior.  Servers SHOULD treat a) N
(   request without a Depth header as if a "Depth: infinity" header was) N
(   included.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 35]) N
() N
(rfc4918.txt) (Page 35/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   A client may submit a 'propfind' XML element in the body of the) N
(   request method describing what information is being requested.  It is) N
(   possible to:) N
() N
(   o  Request particular property values, by naming the properties) N
(      desired within the 'prop' element \(the ordering of properties in) N
(      here MAY be ignored by the server\),) N
() N
(   o  Request property values for those properties defined in this) N
(      specification \(at a minimum\) plus dead properties, by using the) N
(      'allprop' element \(the 'include' element can be used with) N
(      'allprop' to instruct the server to also include additional live) N
(      properties that may not have been returned otherwise\),) N
() N
(   o  Request a list of names of all the properties defined on the) N
(      resource, by using the 'propname' element.) N
() N
(   A client may choose not to submit a request body.  An empty PROPFIND) N
(   request body MUST be treated as if it were an 'allprop' request.) N
() N
(   Note that 'allprop' does not return values for all live properties.) N
(   WebDAV servers increasingly have expensively-calculated or lengthy) N
(   properties \(see [RFC3253] and [RFC3744]\) and do not return all) N
(   properties already.  Instead, WebDAV clients can use propname) N
(   requests to discover what live properties exist, and request named) N
(   properties when retrieving values.  For a live property defined) N
(   elsewhere, that definition can specify whether or not that live) N
(   property would be returned in 'allprop' requests.) N
() N
(   All servers MUST support returning a response of content type text/) N
(   xml or application/xml that contains a multistatus XML element that) N
(   describes the results of the attempts to retrieve the various) N
(   properties.) N
() N
(   If there is an error retrieving a property, then a proper error) N
(   result MUST be included in the response.  A request to retrieve the) N
(   value of a property that does not exist is an error and MUST be noted) N
(   with a 'response' XML element that contains a 404 \(Not Found\) status) N
(   value.) N
() N
(   Consequently, the 'multistatus' XML element for a collection resource) N
(   MUST include a 'response' XML element for each member URL of the) N
(   collection, to whatever depth was requested.  It SHOULD NOT include) N
(   any 'response' elements for resources that are not WebDAV-compliant.) N
(   Each 'response' element MUST contain an 'href' element that contains) N
(   the URL of the resource on which the properties in the prop XML) N
(   element are defined.  Results for a PROPFIND on a collection resource) N
(   are returned as a flat list whose order of entries is not) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 36]) N
() N
(rfc4918.txt) (Page 36/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (18/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (37-38) 19
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   significant.  Note that a resource may have only one value for a) N
(   property of a given name, so the property may only show up once in) N
(   PROPFIND responses.) N
() N
(   Properties may be subject to access control.  In the case of) N
(   'allprop' and 'propname' requests, if a principal does not have the) N
(   right to know whether a particular property exists, then the property) N
(   MAY be silently excluded from the response.) N
() N
(   Some PROPFIND results MAY be cached, with care, as there is no cache) N
(   validation mechanism for most properties.  This method is both safe) N
(   and idempotent \(see Section 9.1 of [RFC2616]\).) N
() N
(9.1.1.  PROPFIND Status Codes) N
() N
(   This section, as with similar sections for other methods, provides) N
(   some guidance on error codes and preconditions or postconditions) N
(   \(defined in Section 16\) that might be particularly useful with) N
(   PROPFIND.) N
() N
(   403 Forbidden - A server MAY reject PROPFIND requests on collections) N
(   with depth header of "Infinity", in which case it SHOULD use this) N
(   error with the precondition code 'propfind-finite-depth' inside the) N
(   error body.) N
() N
(9.1.2.  Status Codes for Use in 'propstat' Element) N
() N
(   In PROPFIND responses, information about individual properties is) N
(   returned inside 'propstat' elements \(see Section 14.22\), each) N
(   containing an individual 'status' element containing information) N
(   about the properties appearing in it.  The list below summarizes the) N
(   most common status codes used inside 'propstat'; however, clients) N
(   should be prepared to handle other 2/3/4/5xx series status codes as) N
(   well.) N
() N
(   200 OK - A property exists and/or its value is successfully returned.) N
() N
(   401 Unauthorized - The property cannot be viewed without appropriate) N
(   authorization.) N
() N
(   403 Forbidden - The property cannot be viewed regardless of) N
(   authentication.) N
() N
(   404 Not Found - The property does not exist.) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 37]) N
() N
(rfc4918.txt) (Page 37/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.1.3.  Example - Retrieving Named Properties) N
() N
(   >>Request) N
() N
(     PROPFIND /file HTTP/1.1) N
(     Host: www.example.com) N
(     Content-type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:propfind xmlns:D="DAV:">) N
(       <D:prop xmlns:R="http://ns.example.com/boxschema/">) N
(         <R:bigbox/>) N
(         <R:author/>) N
(         <R:DingALing/>) N
(         <R:Random/>) N
(       </D:prop>) N
(     </D:propfind>) N
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:multistatus xmlns:D="DAV:">) N
(       <D:response xmlns:R="http://ns.example.com/boxschema/">) N
(         <D:href>http://www.example.com/file</D:href>) N
(         <D:propstat>) N
(           <D:prop>) N
(             <R:bigbox>) N
(               <R:BoxType>Box type A</R:BoxType>) N
(             </R:bigbox>) N
(             <R:author>) N
(               <R:Name>J.J. Johnson</R:Name>) N
(             </R:author>) N
(           </D:prop>) N
(           <D:status>HTTP/1.1 200 OK</D:status>) N
(         </D:propstat>) N
(         <D:propstat>) N
(           <D:prop><R:DingALing/><R:Random/></D:prop>) N
(           <D:status>HTTP/1.1 403 Forbidden</D:status>) N
(           <D:responsedescription> The user does not have access to the) N
(      DingALing property.) N
(           </D:responsedescription>) N
(         </D:propstat>) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 38]) N
() N
(rfc4918.txt) (Page 38/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (19/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (39-40) 20
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(       </D:response>) N
(       <D:responsedescription> There has been an access violation error.) N
(       </D:responsedescription>) N
(     </D:multistatus>) N
() N
() N
(   In this example, PROPFIND is executed on a non-collection resource) N
(   http://www.example.com/file.  The propfind XML element specifies the) N
(   name of four properties whose values are being requested.  In this) N
(   case, only two properties were returned, since the principal issuing) N
(   the request did not have sufficient access rights to see the third) N
(   and fourth properties.) N
() N
(9.1.4.  Example - Using 'propname' to Retrieve All Property Names) N
() N
(   >>Request) N
() N
(     PROPFIND /container/ HTTP/1.1) N
(     Host: www.example.com) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <propfind xmlns="DAV:">) N
(       <propname/>) N
(     </propfind>) N
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <multistatus xmlns="DAV:">) N
(       <response>) N
(         <href>http://www.example.com/container/</href>) N
(         <propstat>) N
(           <prop xmlns:R="http://ns.example.com/boxschema/">) N
(             <R:bigbox/>) N
(             <R:author/>) N
(             <creationdate/>) N
(             <displayname/>) N
(             <resourcetype/>) N
(             <supportedlock/>) N
(           </prop>) N
(           <status>HTTP/1.1 200 OK</status>) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 39]) N
() N
(rfc4918.txt) (Page 39/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(         </propstat>) N
(       </response>) N
(       <response>) N
(         <href>http://www.example.com/container/front.html</href>) N
(         <propstat>) N
(           <prop xmlns:R="http://ns.example.com/boxschema/">) N
(             <R:bigbox/>) N
(             <creationdate/>) N
(             <displayname/>) N
(             <getcontentlength/>) N
(             <getcontenttype/>) N
(             <getetag/>) N
(             <getlastmodified/>) N
(             <resourcetype/>) N
(             <supportedlock/>) N
(           </prop>) N
(           <status>HTTP/1.1 200 OK</status>) N
(         </propstat>) N
(       </response>) N
(     </multistatus>) N
() N
(   In this example, PROPFIND is invoked on the collection resource) N
(   http://www.example.com/container/, with a propfind XML element) N
(   containing the propname XML element, meaning the name of all) N
(   properties should be returned.  Since no Depth header is present, it) N
(   assumes its default value of "infinity", meaning the name of the) N
(   properties on the collection and all its descendants should be) N
(   returned.) N
() N
(   Consistent with the previous example, resource) N
(   http://www.example.com/container/ has six properties defined on it:) N
(   bigbox and author in the "http://ns.example.com/boxschema/") N
(   namespace, and creationdate, displayname, resourcetype, and) N
(   supportedlock in the "DAV:" namespace.) N
() N
(   The resource http://www.example.com/container/index.html, a member of) N
(   the "container" collection, has nine properties defined on it, bigbox) N
(   in the "http://ns.example.com/boxschema/" namespace and creationdate,) N
(   displayname, getcontentlength, getcontenttype, getetag,) N
(   getlastmodified, resourcetype, and supportedlock in the "DAV:") N
(   namespace.) N
() N
(   This example also demonstrates the use of XML namespace scoping and) N
(   the default namespace.  Since the "xmlns" attribute does not contain) N
(   a prefix, the namespace applies by default to all enclosed elements.) N
(   Hence, all elements that do not explicitly state the namespace to) N
(   which they belong are members of the "DAV:" namespace.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 40]) N
() N
(rfc4918.txt) (Page 40/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (20/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (41-42) 21
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.1.5.  Example - Using So-called 'allprop') N
() N
(   Note that 'allprop', despite its name, which remains for backward-) N
(   compatibility, does not return every property, but only dead) N
(   properties and the live properties defined in this specification.) N
() N
(   >>Request) N
() N
(     PROPFIND /container/ HTTP/1.1) N
(     Host: www.example.com) N
(     Depth: 1) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:propfind xmlns:D="DAV:">) N
(       <D:allprop/>) N
(     </D:propfind>) N
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:multistatus xmlns:D="DAV:">) N
(       <D:response>) N
(         <D:href>/container/</D:href>) N
(         <D:propstat>) N
(           <D:prop xmlns:R="http://ns.example.com/boxschema/">) N
(             <R:bigbox><R:BoxType>Box type A</R:BoxType></R:bigbox>) N
(             <R:author><R:Name>Hadrian</R:Name></R:author>) N
(             <D:creationdate>1997-12-01T17:42:21-08:00</D:creationdate>) N
(             <D:displayname>Example collection</D:displayname>) N
(             <D:resourcetype><D:collection/></D:resourcetype>) N
(             <D:supportedlock>) N
(               <D:lockentry>) N
(                 <D:lockscope><D:exclusive/></D:lockscope>) N
(                 <D:locktype><D:write/></D:locktype>) N
(               </D:lockentry>) N
(               <D:lockentry>) N
(                 <D:lockscope><D:shared/></D:lockscope>) N
(                 <D:locktype><D:write/></D:locktype>) N
(               </D:lockentry>) N
(             </D:supportedlock>) N
(           </D:prop>) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 41]) N
() N
(rfc4918.txt) (Page 41/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(           <D:status>HTTP/1.1 200 OK</D:status>) N
(         </D:propstat>) N
(       </D:response>) N
(       <D:response>) N
(         <D:href>/container/front.html</D:href>) N
(         <D:propstat>) N
(           <D:prop xmlns:R="http://ns.example.com/boxschema/">) N
(             <R:bigbox><R:BoxType>Box type B</R:BoxType>) N
(             </R:bigbox>) N
(             <D:creationdate>1997-12-01T18:27:21-08:00</D:creationdate>) N
(             <D:displayname>Example HTML resource</D:displayname>) N
(             <D:getcontentlength>4525</D:getcontentlength>) N
(             <D:getcontenttype>text/html</D:getcontenttype>) N
(             <D:getetag>"zzyzx"</D:getetag>) N
(             <D:getlastmodified) N
(               >Mon, 12 Jan 1998 09:25:56 GMT</D:getlastmodified>) N
(             <D:resourcetype/>) N
(             <D:supportedlock>) N
(               <D:lockentry>) N
(                 <D:lockscope><D:exclusive/></D:lockscope>) N
(                 <D:locktype><D:write/></D:locktype>) N
(               </D:lockentry>) N
(               <D:lockentry>) N
(                 <D:lockscope><D:shared/></D:lockscope>) N
(                 <D:locktype><D:write/></D:locktype>) N
(               </D:lockentry>) N
(             </D:supportedlock>) N
(           </D:prop>) N
(           <D:status>HTTP/1.1 200 OK</D:status>) N
(         </D:propstat>) N
(       </D:response>) N
(     </D:multistatus>) N
() N
(   In this example, PROPFIND was invoked on the resource) N
(   http://www.example.com/container/ with a Depth header of 1, meaning) N
(   the request applies to the resource and its children, and a propfind) N
(   XML element containing the allprop XML element, meaning the request) N
(   should return the name and value of all the dead properties defined) N
(   on the resources, plus the name and value of all the properties) N
(   defined in this specification.  This example illustrates the use of) N
(   relative references in the 'href' elements of the response.) N
() N
(   The resource http://www.example.com/container/ has six properties) N
(   defined on it: 'bigbox' and 'author in the) N
(   "http://ns.example.com/boxschema/" namespace, DAV:creationdate, DAV:) N
(   displayname, DAV:resourcetype, and DAV:supportedlock.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 42]) N
() N
(rfc4918.txt) (Page 42/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (21/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (43-44) 22
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   The last four properties are WebDAV-specific, defined in Section 15.) N
(   Since GET is not supported on this resource, the get* properties) N
(   \(e.g., DAV:getcontentlength\) are not defined on this resource.  The) N
(   WebDAV-specific properties assert that "container" was created on) N
(   December 1, 1997, at 5:42:21PM, in a time zone 8 hours west of GMT) N
(   \(DAV:creationdate\), has a name of "Example collection" \(DAV:) N
(   displayname\), a collection resource type \(DAV:resourcetype\), and) N
(   supports exclusive write and shared write locks \(DAV:supportedlock\).) N
() N
(   The resource http://www.example.com/container/front.html has nine) N
(   properties defined on it:) N
() N
(   'bigbox' in the "http://ns.example.com/boxschema/" namespace \(another) N
(   instance of the "bigbox" property type\), DAV:creationdate, DAV:) N
(   displayname, DAV:getcontentlength, DAV:getcontenttype, DAV:getetag,) N
(   DAV:getlastmodified, DAV:resourcetype, and DAV:supportedlock.) N
() N
(   The DAV-specific properties assert that "front.html" was created on) N
(   December 1, 1997, at 6:27:21PM, in a time zone 8 hours west of GMT) N
(   \(DAV:creationdate\), has a name of "Example HTML resource" \(DAV:) N
(   displayname\), a content length of 4525 bytes \(DAV:getcontentlength\),) N
(   a MIME type of "text/html" \(DAV:getcontenttype\), an entity tag of) N
(   "zzyzx" \(DAV:getetag\), was last modified on Monday, January 12, 1998,) N
(   at 09:25:56 GMT \(DAV:getlastmodified\), has an empty resource type,) N
(   meaning that it is not a collection \(DAV:resourcetype\), and supports) N
(   both exclusive write and shared write locks \(DAV:supportedlock\).) N
() N
(9.1.6.  Example - Using 'allprop' with 'include') N
() N
(   >>Request) N
() N
(     PROPFIND /mycol/ HTTP/1.1) N
(     Host: www.example.com) N
(     Depth: 1) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:propfind xmlns:D="DAV:">) N
(       <D:allprop/>) N
(       <D:include>) N
(         <D:supported-live-property-set/>) N
(         <D:supported-report-set/>) N
(       </D:include>) N
(     </D:propfind>) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 43]) N
() N
(rfc4918.txt) (Page 43/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   In this example, PROPFIND is executed on the resource) N
(   http://www.example.com/mycol/ and its internal member resources.  The) N
(   client requests the values of all live properties defined in this) N
(   specification, plus all dead properties, plus two more live) N
(   properties defined in [RFC3253].  The response is not shown.) N
() N
(9.2.  PROPPATCH Method) N
() N
(   The PROPPATCH method processes instructions specified in the request) N
(   body to set and/or remove properties defined on the resource) N
(   identified by the Request-URI.) N
() N
(   All DAV-compliant resources MUST support the PROPPATCH method and) N
(   MUST process instructions that are specified using the) N
(   propertyupdate, set, and remove XML elements.  Execution of the) N
(   directives in this method is, of course, subject to access control) N
(   constraints.  DAV-compliant resources SHOULD support the setting of) N
(   arbitrary dead properties.) N
() N
(   The request message body of a PROPPATCH method MUST contain the) N
(   propertyupdate XML element.) N
() N
(   Servers MUST process PROPPATCH instructions in document order \(an) N
(   exception to the normal rule that ordering is irrelevant\).) N
(   Instructions MUST either all be executed or none executed.  Thus, if) N
(   any error occurs during processing, all executed instructions MUST be) N
(   undone and a proper error result returned.  Instruction processing) N
(   details can be found in the definition of the set and remove) N
(   instructions in Sections 14.23 and 14.26.) N
() N
(   If a server attempts to make any of the property changes in a) N
(   PROPPATCH request \(i.e., the request is not rejected for high-level) N
(   errors before processing the body\), the response MUST be a Multi-) N
(   Status response as described in Section 9.2.1.) N
() N
(   This method is idempotent, but not safe \(see Section 9.1 of) N
(   [RFC2616]\).  Responses to this method MUST NOT be cached.) N
() N
(9.2.1.  Status Codes for Use in 'propstat' Element) N
() N
(   In PROPPATCH responses, information about individual properties is) N
(   returned inside 'propstat' elements \(see Section 14.22\), each) N
(   containing an individual 'status' element containing information) N
(   about the properties appearing in it.  The list below summarizes the) N
(   most common status codes used inside 'propstat'; however, clients) N
(   should be prepared to handle other 2/3/4/5xx series status codes as) N
(   well.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 44]) N
() N
(rfc4918.txt) (Page 44/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (22/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (45-46) 23
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   200 \(OK\) - The property set or change succeeded.  Note that if this) N
(   appears for one property, it appears for every property in the) N
(   response, due to the atomicity of PROPPATCH.) N
() N
(   403 \(Forbidden\) - The client, for reasons the server chooses not to) N
(   specify, cannot alter one of the properties.) N
() N
(   403 \(Forbidden\): The client has attempted to set a protected) N
(   property, such as DAV:getetag.  If returning this error, the server) N
(   SHOULD use the precondition code 'cannot-modify-protected-property') N
(   inside the response body.) N
() N
(   409 \(Conflict\) - The client has provided a value whose semantics are) N
(   not appropriate for the property.) N
() N
(   424 \(Failed Dependency\) - The property change could not be made) N
(   because of another property change that failed.) N
() N
(   507 \(Insufficient Storage\) - The server did not have sufficient space) N
(   to record the property.) N
() N
(9.2.2.  Example - PROPPATCH) N
() N
(   >>Request) N
() N
(     PROPPATCH /bar.html HTTP/1.1) N
(     Host: www.example.com) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:propertyupdate xmlns:D="DAV:") N
(             xmlns:Z="http://ns.example.com/standards/z39.50/">) N
(       <D:set>) N
(         <D:prop>) N
(           <Z:Authors>) N
(             <Z:Author>Jim Whitehead</Z:Author>) N
(             <Z:Author>Roy Fielding</Z:Author>) N
(           </Z:Authors>) N
(         </D:prop>) N
(       </D:set>) N
(       <D:remove>) N
(         <D:prop><Z:Copyright-Owner/></D:prop>) N
(       </D:remove>) N
(     </D:propertyupdate>) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 45]) N
() N
(rfc4918.txt) (Page 45/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:multistatus xmlns:D="DAV:") N
(             xmlns:Z="http://ns.example.com/standards/z39.50/">) N
(       <D:response>) N
(         <D:href>http://www.example.com/bar.html</D:href>) N
(         <D:propstat>) N
(           <D:prop><Z:Authors/></D:prop>) N
(           <D:status>HTTP/1.1 424 Failed Dependency</D:status>) N
(         </D:propstat>) N
(         <D:propstat>) N
(           <D:prop><Z:Copyright-Owner/></D:prop>) N
(           <D:status>HTTP/1.1 409 Conflict</D:status>) N
(         </D:propstat>) N
(         <D:responsedescription> Copyright Owner cannot be deleted or) N
(           altered.</D:responsedescription>) N
(       </D:response>) N
(     </D:multistatus>) N
() N
(   In this example, the client requests the server to set the value of) N
(   the "Authors" property in the) N
(   "http://ns.example.com/standards/z39.50/" namespace, and to remove) N
(   the property "Copyright-Owner" in the same namespace.  Since the) N
(   Copyright-Owner property could not be removed, no property) N
(   modifications occur.  The 424 \(Failed Dependency\) status code for the) N
(   Authors property indicates this action would have succeeded if it) N
(   were not for the conflict with removing the Copyright-Owner property.) N
() N
(9.3.  MKCOL Method) N
() N
(   MKCOL creates a new collection resource at the location specified by) N
(   the Request-URI.  If the Request-URI is already mapped to a resource,) N
(   then the MKCOL MUST fail.  During MKCOL processing, a server MUST) N
(   make the Request-URI an internal member of its parent collection,) N
(   unless the Request-URI is "/".  If no such ancestor exists, the) N
(   method MUST fail.  When the MKCOL operation creates a new collection) N
(   resource, all ancestors MUST already exist, or the method MUST fail) N
(   with a 409 \(Conflict\) status code.  For example, if a request to) N
(   create collection /a/b/c/d/ is made, and /a/b/c/ does not exist, the) N
(   request must fail.) N
() N
(   When MKCOL is invoked without a request body, the newly created) N
(   collection SHOULD have no members.) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 46]) N
() N
(rfc4918.txt) (Page 46/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (23/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (47-48) 24
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   A MKCOL request message may contain a message body.  The precise) N
(   behavior of a MKCOL request when the body is present is undefined,) N
(   but limited to creating collections, members of a collection, bodies) N
(   of members, and properties on the collections or members.  If the) N
(   server receives a MKCOL request entity type it does not support or) N
(   understand, it MUST respond with a 415 \(Unsupported Media Type\)) N
(   status code.  If the server decides to reject the request based on) N
(   the presence of an entity or the type of an entity, it should use the) N
(   415 \(Unsupported Media Type\) status code.) N
() N
(   This method is idempotent, but not safe \(see Section 9.1 of) N
(   [RFC2616]\).  Responses to this method MUST NOT be cached.) N
() N
(9.3.1.  MKCOL Status Codes) N
() N
(   In addition to the general status codes possible, the following) N
(   status codes have specific applicability to MKCOL:) N
() N
(   201 \(Created\) - The collection was created.) N
() N
(   403 \(Forbidden\) - This indicates at least one of two conditions: 1\)) N
(   the server does not allow the creation of collections at the given) N
(   location in its URL namespace, or 2\) the parent collection of the) N
(   Request-URI exists but cannot accept members.) N
() N
(   405 \(Method Not Allowed\) - MKCOL can only be executed on an unmapped) N
(   URL.) N
() N
(   409 \(Conflict\) - A collection cannot be made at the Request-URI until) N
(   one or more intermediate collections have been created.  The server) N
(   MUST NOT create those intermediate collections automatically.) N
() N
(   415 \(Unsupported Media Type\) - The server does not support the) N
(   request body type \(although bodies are legal on MKCOL requests, since) N
(   this specification doesn't define any, the server is likely not to) N
(   support any given body type\).) N
() N
(   507 \(Insufficient Storage\) - The resource does not have sufficient) N
(   space to record the state of the resource after the execution of this) N
(   method.) N
() N
(9.3.2.  Example - MKCOL) N
() N
(   This example creates a collection called /webdisc/xfiles/ on the) N
(   server www.example.com.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 47]) N
() N
(rfc4918.txt) (Page 47/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   >>Request) N
() N
(     MKCOL /webdisc/xfiles/ HTTP/1.1) N
(     Host: www.example.com) N
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 201 Created) N
() N
(9.4.  GET, HEAD for Collections) N
() N
(   The semantics of GET are unchanged when applied to a collection,) N
(   since GET is defined as, "retrieve whatever information \(in the form) N
(   of an entity\) is identified by the Request-URI" [RFC2616].  GET, when) N
(   applied to a collection, may return the contents of an "index.html") N
(   resource, a human-readable view of the contents of the collection, or) N
(   something else altogether.  Hence, it is possible that the result of) N
(   a GET on a collection will bear no correlation to the membership of) N
(   the collection.) N
() N
(   Similarly, since the definition of HEAD is a GET without a response) N
(   message body, the semantics of HEAD are unmodified when applied to) N
(   collection resources.) N
() N
(9.5.  POST for Collections) N
() N
(   Since by definition the actual function performed by POST is) N
(   determined by the server and often depends on the particular) N
(   resource, the behavior of POST when applied to collections cannot be) N
(   meaningfully modified because it is largely undefined.  Thus, the) N
(   semantics of POST are unmodified when applied to a collection.) N
() N
(9.6.  DELETE Requirements) N
() N
(   DELETE is defined in [RFC2616], Section 9.7, to "delete the resource) N
(   identified by the Request-URI".  However, WebDAV changes some DELETE) N
(   handling requirements.) N
() N
(   A server processing a successful DELETE request:) N
() N
(      MUST destroy locks rooted on the deleted resource) N
() N
(      MUST remove the mapping from the Request-URI to any resource.) N
() N
(   Thus, after a successful DELETE operation \(and in the absence of) N
(   other actions\), a subsequent GET/HEAD/PROPFIND request to the target) N
(   Request-URI MUST return 404 \(Not Found\).) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 48]) N
() N
(rfc4918.txt) (Page 48/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (24/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (49-50) 25
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.6.1.  DELETE for Collections) N
() N
(   The DELETE method on a collection MUST act as if a "Depth: infinity") N
(   header was used on it.  A client MUST NOT submit a Depth header with) N
(   a DELETE on a collection with any value but infinity.) N
() N
(   DELETE instructs that the collection specified in the Request-URI and) N
(   all resources identified by its internal member URLs are to be) N
(   deleted.) N
() N
(   If any resource identified by a member URL cannot be deleted, then) N
(   all of the member's ancestors MUST NOT be deleted, so as to maintain) N
(   URL namespace consistency.) N
() N
(   Any headers included with DELETE MUST be applied in processing every) N
(   resource to be deleted.) N
() N
(   When the DELETE method has completed processing, it MUST result in a) N
(   consistent URL namespace.) N
() N
(   If an error occurs deleting a member resource \(a resource other than) N
(   the resource identified in the Request-URI\), then the response can be) N
(   a 207 \(Multi-Status\).  Multi-Status is used here to indicate which) N
(   internal resources could NOT be deleted, including an error code,) N
(   which should help the client understand which resources caused the) N
(   failure.  For example, the Multi-Status body could include a response) N
(   with status 423 \(Locked\) if an internal resource was locked.) N
() N
(   The server MAY return a 4xx status response, rather than a 207, if) N
(   the request failed completely.) N
() N
(   424 \(Failed Dependency\) status codes SHOULD NOT be in the 207 \(Multi-) N
(   Status\) response for DELETE.  They can be safely left out because the) N
(   client will know that the ancestors of a resource could not be) N
(   deleted when the client receives an error for the ancestor's progeny.) N
(   Additionally, 204 \(No Content\) errors SHOULD NOT be returned in the) N
(   207 \(Multi-Status\).  The reason for this prohibition is that 204 \(No) N
(   Content\) is the default success code.) N
() N
(9.6.2.  Example - DELETE) N
() N
(   >>Request) N
() N
(     DELETE  /container/ HTTP/1.1) N
(     Host: www.example.com) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 49]) N
() N
(rfc4918.txt) (Page 49/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <d:multistatus xmlns:d="DAV:">) N
(       <d:response>) N
(         <d:href>http://www.example.com/container/resource3</d:href>) N
(         <d:status>HTTP/1.1 423 Locked</d:status>) N
(         <d:error><d:lock-token-submitted/></d:error>) N
(       </d:response>) N
(     </d:multistatus>) N
() N
(   In this example, the attempt to delete) N
(   http://www.example.com/container/resource3 failed because it is) N
(   locked, and no lock token was submitted with the request.) N
(   Consequently, the attempt to delete http://www.example.com/container/) N
(   also failed.  Thus, the client knows that the attempt to delete) N
(   http://www.example.com/container/ must have also failed since the) N
(   parent cannot be deleted unless its child has also been deleted.) N
(   Even though a Depth header has not been included, a depth of infinity) N
(   is assumed because the method is on a collection.) N
() N
(9.7.  PUT Requirements) N
() N
(9.7.1.  PUT for Non-Collection Resources) N
() N
(   A PUT performed on an existing resource replaces the GET response) N
(   entity of the resource.  Properties defined on the resource may be) N
(   recomputed during PUT processing but are not otherwise affected.  For) N
(   example, if a server recognizes the content type of the request body,) N
(   it may be able to automatically extract information that could be) N
(   profitably exposed as properties.) N
() N
(   A PUT that would result in the creation of a resource without an) N
(   appropriately scoped parent collection MUST fail with a 409) N
(   \(Conflict\).) N
() N
(   A PUT request allows a client to indicate what media type an entity) N
(   body has, and whether it should change if overwritten.  Thus, a) N
(   client SHOULD provide a Content-Type for a new resource if any is) N
(   known.  If the client does not provide a Content-Type for a new) N
(   resource, the server MAY create a resource with no Content-Type) N
(   assigned, or it MAY attempt to assign a Content-Type.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 50]) N
() N
(rfc4918.txt) (Page 50/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (25/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (51-52) 26
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Note that although a recipient ought generally to treat metadata) N
(   supplied with an HTTP request as authoritative, in practice there's) N
(   no guarantee that a server will accept client-supplied metadata) N
(   \(e.g., any request header beginning with "Content-"\).  Many servers) N
(   do not allow configuring the Content-Type on a per-resource basis in) N
(   the first place.  Thus, clients can't always rely on the ability to) N
(   directly influence the content type by including a Content-Type) N
(   request header.) N
() N
(9.7.2.  PUT for Collections) N
() N
(   This specification does not define the behavior of the PUT method for) N
(   existing collections.  A PUT request to an existing collection MAY be) N
(   treated as an error \(405 Method Not Allowed\).) N
() N
(   The MKCOL method is defined to create collections.) N
() N
(9.8.  COPY Method) N
() N
(   The COPY method creates a duplicate of the source resource identified) N
(   by the Request-URI, in the destination resource identified by the URI) N
(   in the Destination header.  The Destination header MUST be present.) N
(   The exact behavior of the COPY method depends on the type of the) N
(   source resource.) N
() N
(   All WebDAV-compliant resources MUST support the COPY method.) N
(   However, support for the COPY method does not guarantee the ability) N
(   to copy a resource.  For example, separate programs may control) N
(   resources on the same server.  As a result, it may not be possible to) N
(   copy a resource to a location that appears to be on the same server.) N
() N
(   This method is idempotent, but not safe \(see Section 9.1 of) N
(   [RFC2616]\).  Responses to this method MUST NOT be cached.) N
() N
(9.8.1.  COPY for Non-collection Resources) N
() N
(   When the source resource is not a collection, the result of the COPY) N
(   method is the creation of a new resource at the destination whose) N
(   state and behavior match that of the source resource as closely as) N
(   possible.  Since the environment at the destination may be different) N
(   than at the source due to factors outside the scope of control of the) N
(   server, such as the absence of resources required for correct) N
(   operation, it may not be possible to completely duplicate the) N
(   behavior of the resource at the destination.  Subsequent alterations) N
(   to the destination resource will not modify the source resource.) N
(   Subsequent alterations to the source resource will not modify the) N
(   destination resource.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 51]) N
() N
(rfc4918.txt) (Page 51/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.8.2.  COPY for Properties) N
() N
(   After a successful COPY invocation, all dead properties on the source) N
(   resource SHOULD be duplicated on the destination resource.  Live) N
(   properties described in this document SHOULD be duplicated as) N
(   identically behaving live properties at the destination resource, but) N
(   not necessarily with the same values.  Servers SHOULD NOT convert) N
(   live properties into dead properties on the destination resource,) N
(   because clients may then draw incorrect conclusions about the state) N
(   or functionality of a resource.  Note that some live properties are) N
(   defined such that the absence of the property has a specific meaning) N
(   \(e.g., a flag with one meaning if present, and the opposite if) N
(   absent\), and in these cases, a successful COPY might result in the) N
(   property being reported as "Not Found" in subsequent requests.) N
() N
(   When the destination is an unmapped URL, a COPY operation creates a) N
(   new resource much like a PUT operation does.  Live properties that) N
(   are related to resource creation \(such as DAV:creationdate\) should) N
(   have their values set accordingly.) N
() N
(9.8.3.  COPY for Collections) N
() N
(   The COPY method on a collection without a Depth header MUST act as if) N
(   a Depth header with value "infinity" was included.  A client may) N
(   submit a Depth header on a COPY on a collection with a value of "0") N
(   or "infinity".  Servers MUST support the "0" and "infinity" Depth) N
(   header behaviors on WebDAV-compliant resources.) N
() N
(   An infinite-depth COPY instructs that the collection resource) N
(   identified by the Request-URI is to be copied to the location) N
(   identified by the URI in the Destination header, and all its internal) N
(   member resources are to be copied to a location relative to it,) N
(   recursively through all levels of the collection hierarchy.  Note) N
(   that an infinite-depth COPY of /A/ into /A/B/ could lead to infinite) N
(   recursion if not handled correctly.) N
() N
(   A COPY of "Depth: 0" only instructs that the collection and its) N
(   properties, but not resources identified by its internal member URLs,) N
(   are to be copied.) N
() N
(   Any headers included with a COPY MUST be applied in processing every) N
(   resource to be copied with the exception of the Destination header.) N
() N
(   The Destination header only specifies the destination URI for the) N
(   Request-URI.  When applied to members of the collection identified by) N
(   the Request-URI, the value of Destination is to be modified to) N
(   reflect the current location in the hierarchy.  So, if the Request-) N
(   URI is /a/ with Host header value http://example.com/ and the) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 52]) N
() N
(rfc4918.txt) (Page 52/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (26/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (53-54) 27
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Destination is http://example.com/b/, then when) N
(   http://example.com/a/c/d is processed, it must use a Destination of) N
(   http://example.com/b/c/d.) N
() N
(   When the COPY method has completed processing, it MUST have created a) N
(   consistent URL namespace at the destination \(see Section 5.1 for the) N
(   definition of namespace consistency\).  However, if an error occurs) N
(   while copying an internal collection, the server MUST NOT copy any) N
(   resources identified by members of this collection \(i.e., the server) N
(   must skip this subtree\), as this would create an inconsistent) N
(   namespace.  After detecting an error, the COPY operation SHOULD try) N
(   to finish as much of the original copy operation as possible \(i.e.,) N
(   the server should still attempt to copy other subtrees and their) N
(   members that are not descendants of an error-causing collection\).) N
() N
(   So, for example, if an infinite-depth copy operation is performed on) N
(   collection /a/, which contains collections /a/b/ and /a/c/, and an) N
(   error occurs copying /a/b/, an attempt should still be made to copy) N
(   /a/c/.  Similarly, after encountering an error copying a non-) N
(   collection resource as part of an infinite-depth copy, the server) N
(   SHOULD try to finish as much of the original copy operation as) N
(   possible.) N
() N
(   If an error in executing the COPY method occurs with a resource other) N
(   than the resource identified in the Request-URI, then the response) N
(   MUST be a 207 \(Multi-Status\), and the URL of the resource causing the) N
(   failure MUST appear with the specific error.) N
() N
(   The 424 \(Failed Dependency\) status code SHOULD NOT be returned in the) N
(   207 \(Multi-Status\) response from a COPY method.  These responses can) N
(   be safely omitted because the client will know that the progeny of a) N
(   resource could not be copied when the client receives an error for) N
(   the parent.  Additionally, 201 \(Created\)/204 \(No Content\) status) N
(   codes SHOULD NOT be returned as values in 207 \(Multi-Status\)) N
(   responses from COPY methods.  They, too, can be safely omitted) N
(   because they are the default success codes.) N
() N
(9.8.4.  COPY and Overwriting Destination Resources) N
() N
(   If a COPY request has an Overwrite header with a value of "F", and a) N
(   resource exists at the Destination URL, the server MUST fail the) N
(   request.) N
() N
(   When a server executes a COPY request and overwrites a destination) N
(   resource, the exact behavior MAY depend on many factors, including) N
(   WebDAV extension capabilities \(see particularly [RFC3253]\).  For) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 53]) N
() N
(rfc4918.txt) (Page 53/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   example, when an ordinary resource is overwritten, the server could) N
(   delete the target resource before doing the copy, or could do an in-) N
(   place overwrite to preserve live properties.) N
() N
(   When a collection is overwritten, the membership of the destination) N
(   collection after the successful COPY request MUST be the same) N
(   membership as the source collection immediately before the COPY.) N
(   Thus, merging the membership of the source and destination) N
(   collections together in the destination is not a compliant behavior.) N
() N
(   In general, if clients require the state of the destination URL to be) N
(   wiped out prior to a COPY \(e.g., to force live properties to be) N
(   reset\), then the client could send a DELETE to the destination before) N
(   the COPY request to ensure this reset.) N
() N
(9.8.5.  Status Codes) N
() N
(   In addition to the general status codes possible, the following) N
(   status codes have specific applicability to COPY:) N
() N
(   201 \(Created\) - The source resource was successfully copied.  The) N
(   COPY operation resulted in the creation of a new resource.) N
() N
(   204 \(No Content\) - The source resource was successfully copied to a) N
(   preexisting destination resource.) N
() N
(   207 \(Multi-Status\) - Multiple resources were to be affected by the) N
(   COPY, but errors on some of them prevented the operation from taking) N
(   place.  Specific error messages, together with the most appropriate) N
(   of the source and destination URLs, appear in the body of the multi-) N
(   status response.  For example, if a destination resource was locked) N
(   and could not be overwritten, then the destination resource URL) N
(   appears with the 423 \(Locked\) status.) N
() N
(   403 \(Forbidden\) - The operation is forbidden.  A special case for) N
(   COPY could be that the source and destination resources are the same) N
(   resource.) N
() N
(   409 \(Conflict\) - A resource cannot be created at the destination) N
(   until one or more intermediate collections have been created.  The) N
(   server MUST NOT create those intermediate collections automatically.) N
() N
(   412 \(Precondition Failed\) - A precondition header check failed, e.g.,) N
(   the Overwrite header is "F" and the destination URL is already mapped) N
(   to a resource.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 54]) N
() N
(rfc4918.txt) (Page 54/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (27/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (55-56) 28
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   423 \(Locked\) - The destination resource, or resource within the) N
(   destination collection, was locked.  This response SHOULD contain the) N
(   'lock-token-submitted' precondition element.) N
() N
(   502 \(Bad Gateway\) - This may occur when the destination is on another) N
(   server, repository, or URL namespace.  Either the source namespace) N
(   does not support copying to the destination namespace, or the) N
(   destination namespace refuses to accept the resource.  The client may) N
(   wish to try GET/PUT and PROPFIND/PROPPATCH instead.) N
() N
(   507 \(Insufficient Storage\) - The destination resource does not have) N
(   sufficient space to record the state of the resource after the) N
(   execution of this method.) N
() N
(9.8.6.  Example - COPY with Overwrite) N
() N
(   This example shows resource) N
(   http://www.example.com/~fielding/index.html being copied to the) N
(   location http://www.example.com/users/f/fielding/index.html.  The 204) N
(   \(No Content\) status code indicates that the existing resource at the) N
(   destination was overwritten.) N
() N
(   >>Request) N
() N
(     COPY /~fielding/index.html HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: http://www.example.com/users/f/fielding/index.html) N
() N
(   >>Response) N
() N
(     HTTP/1.1 204 No Content) N
() N
(9.8.7.  Example - COPY with No Overwrite) N
() N
(   The following example shows the same copy operation being performed,) N
(   but with the Overwrite header set to "F." A response of 412) N
(   \(Precondition Failed\) is returned because the destination URL is) N
(   already mapped to a resource.) N
() N
(   >>Request) N
() N
(     COPY /~fielding/index.html HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: http://www.example.com/users/f/fielding/index.html) N
(     Overwrite: F) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 55]) N
() N
(rfc4918.txt) (Page 55/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 412 Precondition Failed) N
() N
(9.8.8.  Example - COPY of a Collection) N
() N
(   >>Request) N
() N
(     COPY /container/ HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: http://www.example.com/othercontainer/) N
(     Depth: infinity) N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
() N
(     <d:multistatus xmlns:d="DAV:">) N
(       <d:response>) N
(         <d:href>http://www.example.com/othercontainer/R2/</d:href>) N
(         <d:status>HTTP/1.1 423 Locked</d:status>) N
(         <d:error><d:lock-token-submitted/></d:error>) N
(       </d:response>) N
(     </d:multistatus>) N
() N
(   The Depth header is unnecessary as the default behavior of COPY on a) N
(   collection is to act as if a "Depth: infinity" header had been) N
(   submitted.  In this example, most of the resources, along with the) N
(   collection, were copied successfully.  However, the collection R2) N
(   failed because the destination R2 is locked.  Because there was an) N
(   error copying R2, none of R2's members were copied.  However, no) N
(   errors were listed for those members due to the error minimization) N
(   rules.) N
() N
(9.9.  MOVE Method) N
() N
(   The MOVE operation on a non-collection resource is the logical) N
(   equivalent of a copy \(COPY\), followed by consistency maintenance) N
(   processing, followed by a delete of the source, where all three) N
(   actions are performed in a single operation.  The consistency) N
(   maintenance step allows the server to perform updates caused by the) N
(   move, such as updating all URLs, other than the Request-URI that) N
(   identifies the source resource, to point to the new destination) N
(   resource.) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 56]) N
() N
(rfc4918.txt) (Page 56/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (28/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (57-58) 29
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   The Destination header MUST be present on all MOVE methods and MUST) N
(   follow all COPY requirements for the COPY part of the MOVE method.) N
(   All WebDAV-compliant resources MUST support the MOVE method.) N
() N
(   Support for the MOVE method does not guarantee the ability to move a) N
(   resource to a particular destination.  For example, separate programs) N
(   may actually control different sets of resources on the same server.) N
(   Therefore, it may not be possible to move a resource within a) N
(   namespace that appears to belong to the same server.) N
() N
(   If a resource exists at the destination, the destination resource) N
(   will be deleted as a side-effect of the MOVE operation, subject to) N
(   the restrictions of the Overwrite header.) N
() N
(   This method is idempotent, but not safe \(see Section 9.1 of) N
(   [RFC2616]\).  Responses to this method MUST NOT be cached.) N
() N
(9.9.1.  MOVE for Properties) N
() N
(   Live properties described in this document SHOULD be moved along with) N
(   the resource, such that the resource has identically behaving live) N
(   properties at the destination resource, but not necessarily with the) N
(   same values.  Note that some live properties are defined such that) N
(   the absence of the property has a specific meaning \(e.g., a flag with) N
(   one meaning if present, and the opposite if absent\), and in these) N
(   cases, a successful MOVE might result in the property being reported) N
(   as "Not Found" in subsequent requests.  If the live properties will) N
(   not work the same way at the destination, the server MAY fail the) N
(   request.) N
() N
(   MOVE is frequently used by clients to rename a file without changing) N
(   its parent collection, so it's not appropriate to reset all live) N
(   properties that are set at resource creation.  For example, the DAV:) N
(   creationdate property value SHOULD remain the same after a MOVE.) N
() N
(   Dead properties MUST be moved along with the resource.) N
() N
(9.9.2.  MOVE for Collections) N
() N
(   A MOVE with "Depth: infinity" instructs that the collection) N
(   identified by the Request-URI be moved to the address specified in) N
(   the Destination header, and all resources identified by its internal) N
(   member URLs are to be moved to locations relative to it, recursively) N
(   through all levels of the collection hierarchy.) N
() N
(   The MOVE method on a collection MUST act as if a "Depth: infinity") N
(   header was used on it.  A client MUST NOT submit a Depth header on a) N
(   MOVE on a collection with any value but "infinity".) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 57]) N
() N
(rfc4918.txt) (Page 57/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Any headers included with MOVE MUST be applied in processing every) N
(   resource to be moved with the exception of the Destination header.) N
(   The behavior of the Destination header is the same as given for COPY) N
(   on collections.) N
() N
(   When the MOVE method has completed processing, it MUST have created a) N
(   consistent URL namespace at both the source and destination \(see) N
(   Section 5.1 for the definition of namespace consistency\).  However,) N
(   if an error occurs while moving an internal collection, the server) N
(   MUST NOT move any resources identified by members of the failed) N
(   collection \(i.e., the server must skip the error-causing subtree\), as) N
(   this would create an inconsistent namespace.  In this case, after) N
(   detecting the error, the move operation SHOULD try to finish as much) N
(   of the original move as possible \(i.e., the server should still) N
(   attempt to move other subtrees and the resources identified by their) N
(   members that are not descendants of an error-causing collection\).) N
(   So, for example, if an infinite-depth move is performed on collection) N
(   /a/, which contains collections /a/b/ and /a/c/, and an error occurs) N
(   moving /a/b/, an attempt should still be made to try moving /a/c/.) N
(   Similarly, after encountering an error moving a non-collection) N
(   resource as part of an infinite-depth move, the server SHOULD try to) N
(   finish as much of the original move operation as possible.) N
() N
(   If an error occurs with a resource other than the resource identified) N
(   in the Request-URI, then the response MUST be a 207 \(Multi-Status\),) N
(   and the errored resource's URL MUST appear with the specific error.) N
() N
(   The 424 \(Failed Dependency\) status code SHOULD NOT be returned in the) N
(   207 \(Multi-Status\) response from a MOVE method.  These errors can be) N
(   safely omitted because the client will know that the progeny of a) N
(   resource could not be moved when the client receives an error for the) N
(   parent.  Additionally, 201 \(Created\)/204 \(No Content\) responses) N
(   SHOULD NOT be returned as values in 207 \(Multi-Status\) responses from) N
(   a MOVE.  These responses can be safely omitted because they are the) N
(   default success codes.) N
() N
(9.9.3.  MOVE and the Overwrite Header) N
() N
(   If a resource exists at the destination and the Overwrite header is) N
(   "T", then prior to performing the move, the server MUST perform a) N
(   DELETE with "Depth: infinity" on the destination resource.  If the) N
(   Overwrite header is set to "F", then the operation will fail.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 58]) N
() N
(rfc4918.txt) (Page 58/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (29/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (59-60) 30
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.9.4.  Status Codes) N
() N
(   In addition to the general status codes possible, the following) N
(   status codes have specific applicability to MOVE:) N
() N
(   201 \(Created\) - The source resource was successfully moved, and a new) N
(   URL mapping was created at the destination.) N
() N
(   204 \(No Content\) - The source resource was successfully moved to a) N
(   URL that was already mapped.) N
() N
(   207 \(Multi-Status\) - Multiple resources were to be affected by the) N
(   MOVE, but errors on some of them prevented the operation from taking) N
(   place.  Specific error messages, together with the most appropriate) N
(   of the source and destination URLs, appear in the body of the multi-) N
(   status response.  For example, if a source resource was locked and) N
(   could not be moved, then the source resource URL appears with the 423) N
(   \(Locked\) status.) N
() N
(   403 \(Forbidden\) - Among many possible reasons for forbidding a MOVE) N
(   operation, this status code is recommended for use when the source) N
(   and destination resources are the same.) N
() N
(   409 \(Conflict\) - A resource cannot be created at the destination) N
(   until one or more intermediate collections have been created.  The) N
(   server MUST NOT create those intermediate collections automatically.) N
(   Or, the server was unable to preserve the behavior of the live) N
(   properties and still move the resource to the destination \(see) N
(   'preserved-live-properties' postcondition\).) N
() N
(   412 \(Precondition Failed\) - A condition header failed.  Specific to) N
(   MOVE, this could mean that the Overwrite header is "F" and the) N
(   destination URL is already mapped to a resource.) N
() N
(   423 \(Locked\) - The source or the destination resource, the source or) N
(   destination resource parent, or some resource within the source or) N
(   destination collection, was locked.  This response SHOULD contain the) N
(   'lock-token-submitted' precondition element.) N
() N
(   502 \(Bad Gateway\) - This may occur when the destination is on another) N
(   server and the destination server refuses to accept the resource.) N
(   This could also occur when the destination is on another sub-section) N
(   of the same server namespace.) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 59]) N
() N
(rfc4918.txt) (Page 59/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.9.5.  Example - MOVE of a Non-Collection) N
() N
(   This example shows resource) N
(   http://www.example.com/~fielding/index.html being moved to the) N
(   location http://www.example.com/users/f/fielding/index.html.  The) N
(   contents of the destination resource would have been overwritten if) N
(   the destination URL was already mapped to a resource.  In this case,) N
(   since there was nothing at the destination resource, the response) N
(   code is 201 \(Created\).) N
() N
(   >>Request) N
() N
(     MOVE /~fielding/index.html HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: http://www.example/users/f/fielding/index.html) N
() N
(   >>Response) N
() N
(     HTTP/1.1 201 Created) N
(     Location: http://www.example.com/users/f/fielding/index.html) N
() N
(9.9.6.  Example - MOVE of a Collection) N
() N
(   >>Request) N
() N
(     MOVE /container/ HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: http://www.example.com/othercontainer/) N
(     Overwrite: F) N
(     If: \(<urn:uuid:fe184f2e-6eec-41d0-c765-01adc56e6bb4>\)) N
(        \(<urn:uuid:e454f3f3-acdc-452a-56c7-00a5c91e4b77>\)) N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <d:multistatus xmlns:d='DAV:'>) N
(       <d:response>) N
(         <d:href>http://www.example.com/othercontainer/C2/</d:href>) N
(         <d:status>HTTP/1.1 423 Locked</d:status>) N
(         <d:error><d:lock-token-submitted/></d:error>) N
(       </d:response>) N
(     </d:multistatus>) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 60]) N
() N
(rfc4918.txt) (Page 60/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (30/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (61-62) 31
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   In this example, the client has submitted a number of lock tokens) N
(   with the request.  A lock token will need to be submitted for every) N
(   resource, both source and destination, anywhere in the scope of the) N
(   method, that is locked.  In this case, the proper lock token was not) N
(   submitted for the destination) N
(   http://www.example.com/othercontainer/C2/.  This means that the) N
(   resource /container/C2/ could not be moved.  Because there was an) N
(   error moving /container/C2/, none of /container/C2's members were) N
(   moved.  However, no errors were listed for those members due to the) N
(   error minimization rules.  User agent authentication has previously) N
(   occurred via a mechanism outside the scope of the HTTP protocol, in) N
(   an underlying transport layer.) N
() N
(9.10.  LOCK Method) N
() N
(   The following sections describe the LOCK method, which is used to) N
(   take out a lock of any access type and to refresh an existing lock.) N
(   These sections on the LOCK method describe only those semantics that) N
(   are specific to the LOCK method and are independent of the access) N
(   type of the lock being requested.) N
() N
(   Any resource that supports the LOCK method MUST, at minimum, support) N
(   the XML request and response formats defined herein.) N
() N
(   This method is neither idempotent nor safe \(see Section 9.1 of) N
(   [RFC2616]\).  Responses to this method MUST NOT be cached.) N
() N
(9.10.1.  Creating a Lock on an Existing Resource) N
() N
(   A LOCK request to an existing resource will create a lock on the) N
(   resource identified by the Request-URI, provided the resource is not) N
(   already locked with a conflicting lock.  The resource identified in) N
(   the Request-URI becomes the root of the lock.  LOCK method requests) N
(   to create a new lock MUST have an XML request body.  The server MUST) N
(   preserve the information provided by the client in the 'owner') N
(   element in the LOCK request.  The LOCK request MAY have a Timeout) N
(   header.) N
() N
(   When a new lock is created, the LOCK response:) N
() N
(   o  MUST contain a body with the value of the DAV:lockdiscovery) N
(      property in a prop XML element.  This MUST contain the full) N
(      information about the lock just granted, while information about) N
(      other \(shared\) locks is OPTIONAL.) N
() N
(   o  MUST include the Lock-Token response header with the token) N
(      associated with the new lock.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 61]) N
() N
(rfc4918.txt) (Page 61/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.10.2.  Refreshing Locks) N
() N
(   A lock is refreshed by sending a LOCK request to the URL of a) N
(   resource within the scope of the lock.  This request MUST NOT have a) N
(   body and it MUST specify which lock to refresh by using the 'If') N
(   header with a single lock token \(only one lock may be refreshed at a) N
(   time\).  The request MAY contain a Timeout header, which a server MAY) N
(   accept to change the duration remaining on the lock to the new value.) N
(   A server MUST ignore the Depth header on a LOCK refresh.) N
() N
(   If the resource has other \(shared\) locks, those locks are unaffected) N
(   by a lock refresh.  Additionally, those locks do not prevent the) N
(   named lock from being refreshed.) N
() N
(   The Lock-Token header is not returned in the response for a) N
(   successful refresh LOCK request, but the LOCK response body MUST) N
(   contain the new value for the DAV:lockdiscovery property.) N
() N
(9.10.3.  Depth and Locking) N
() N
(   The Depth header may be used with the LOCK method.  Values other than) N
(   0 or infinity MUST NOT be used with the Depth header on a LOCK) N
(   method.  All resources that support the LOCK method MUST support the) N
(   Depth header.) N
() N
(   A Depth header of value 0 means to just lock the resource specified) N
(   by the Request-URI.) N
() N
(   If the Depth header is set to infinity, then the resource specified) N
(   in the Request-URI along with all its members, all the way down the) N
(   hierarchy, are to be locked.  A successful result MUST return a) N
(   single lock token.  Similarly, if an UNLOCK is successfully executed) N
(   on this token, all associated resources are unlocked.  Hence, partial) N
(   success is not an option for LOCK or UNLOCK.  Either the entire) N
(   hierarchy is locked or no resources are locked.) N
() N
(   If the lock cannot be granted to all resources, the server MUST) N
(   return a Multi-Status response with a 'response' element for at least) N
(   one resource that prevented the lock from being granted, along with a) N
(   suitable status code for that failure \(e.g., 403 \(Forbidden\) or 423) N
(   \(Locked\)\).  Additionally, if the resource causing the failure was not) N
(   the resource requested, then the server SHOULD include a 'response') N
(   element for the Request-URI as well, with a 'status' element) N
(   containing 424 Failed Dependency.) N
() N
(   If no Depth header is submitted on a LOCK request, then the request) N
(   MUST act as if a "Depth:infinity" had been submitted.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 62]) N
() N
(rfc4918.txt) (Page 62/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (31/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (63-64) 32
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.10.4.  Locking Unmapped URLs) N
() N
(   A successful LOCK method MUST result in the creation of an empty) N
(   resource that is locked \(and that is not a collection\) when a) N
(   resource did not previously exist at that URL.  Later on, the lock) N
(   may go away but the empty resource remains.  Empty resources MUST) N
(   then appear in PROPFIND responses including that URL in the response) N
(   scope.  A server MUST respond successfully to a GET request to an) N
(   empty resource, either by using a 204 No Content response, or by) N
(   using 200 OK with a Content-Length header indicating zero length) N
() N
(9.10.5.  Lock Compatibility Table) N
() N
(   The table below describes the behavior that occurs when a lock) N
(   request is made on a resource.) N
() N
(     +--------------------------+----------------+-------------------+) N
(     | Current State            | Shared Lock OK | Exclusive Lock OK |) N
(     +--------------------------+----------------+-------------------+) N
(     | None                     | True           | True              |) N
(     | Shared Lock              | True           | False             |) N
(     | Exclusive Lock           | False          | False*            |) N
(     +--------------------------+----------------+-------------------+) N
() N
(   Legend: True = lock may be granted.  False = lock MUST NOT be) N
(   granted. *=It is illegal for a principal to request the same lock) N
(   twice.) N
() N
(   The current lock state of a resource is given in the leftmost column,) N
(   and lock requests are listed in the first row.  The intersection of a) N
(   row and column gives the result of a lock request.  For example, if a) N
(   shared lock is held on a resource, and an exclusive lock is) N
(   requested, the table entry is "false", indicating that the lock must) N
(   not be granted.) N
() N
(9.10.6.  LOCK Responses) N
() N
(   In addition to the general status codes possible, the following) N
(   status codes have specific applicability to LOCK:) N
() N
(   200 \(OK\) - The LOCK request succeeded and the value of the DAV:) N
(   lockdiscovery property is included in the response body.) N
() N
(   201 \(Created\) - The LOCK request was to an unmapped URL, the request) N
(   succeeded and resulted in the creation of a new resource, and the) N
(   value of the DAV:lockdiscovery property is included in the response) N
(   body.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 63]) N
() N
(rfc4918.txt) (Page 63/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   409 \(Conflict\) - A resource cannot be created at the destination) N
(   until one or more intermediate collections have been created.  The) N
(   server MUST NOT create those intermediate collections automatically.) N
() N
(   423 \(Locked\), potentially with 'no-conflicting-lock' precondition) N
(   code - There is already a lock on the resource that is not compatible) N
(   with the requested lock \(see lock compatibility table above\).) N
() N
(   412 \(Precondition Failed\), with 'lock-token-matches-request-uri') N
(   precondition code - The LOCK request was made with an If header,) N
(   indicating that the client wishes to refresh the given lock.) N
(   However, the Request-URI did not fall within the scope of the lock) N
(   identified by the token.  The lock may have a scope that does not) N
(   include the Request-URI, or the lock could have disappeared, or the) N
(   token may be invalid.) N
() N
(9.10.7.  Example - Simple Lock Request) N
() N
(   >>Request) N
() N
(     LOCK /workspace/webdav/proposal.doc HTTP/1.1) N
(     Host: example.com) N
(     Timeout: Infinite, Second-4100000000) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
(     Authorization: Digest username="ejw",) N
(       realm="ejw@example.com", nonce="...",) N
(       uri="/workspace/webdav/proposal.doc",) N
(       response="...", opaque="...") N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:lockinfo xmlns:D='DAV:'>) N
(       <D:lockscope><D:exclusive/></D:lockscope>) N
(       <D:locktype><D:write/></D:locktype>) N
(       <D:owner>) N
(         <D:href>http://example.org/~ejw/contact.html</D:href>) N
(       </D:owner>) N
(     </D:lockinfo>) N
() N
(   >>Response) N
() N
(     HTTP/1.1 200 OK) N
(     Lock-Token: <urn:uuid:e71d4fae-5dec-22d6-fea5-00a0c91e6be4>) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:prop xmlns:D="DAV:">) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 64]) N
() N
(rfc4918.txt) (Page 64/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (32/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (65-66) 33
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(       <D:lockdiscovery>) N
(         <D:activelock>) N
(           <D:locktype><D:write/></D:locktype>) N
(           <D:lockscope><D:exclusive/></D:lockscope>) N
(           <D:depth>infinity</D:depth>) N
(           <D:owner>) N
(             <D:href>http://example.org/~ejw/contact.html</D:href>) N
(           </D:owner>) N
(           <D:timeout>Second-604800</D:timeout>) N
(           <D:locktoken>) N
(             <D:href) N
(             >urn:uuid:e71d4fae-5dec-22d6-fea5-00a0c91e6be4</D:href>) N
(           </D:locktoken>) N
(           <D:lockroot>) N
(             <D:href) N
(             >http://example.com/workspace/webdav/proposal.doc</D:href>) N
(           </D:lockroot>) N
(         </D:activelock>) N
(       </D:lockdiscovery>) N
(     </D:prop>) N
() N
() N
(   This example shows the successful creation of an exclusive write lock) N
(   on resource http://example.com/workspace/webdav/proposal.doc.  The) N
(   resource http://example.org/~ejw/contact.html contains contact) N
(   information for the creator of the lock.  The server has an activity-) N
(   based timeout policy in place on this resource, which causes the lock) N
(   to automatically be removed after 1 week \(604800 seconds\).  Note that) N
(   the nonce, response, and opaque fields have not been calculated in) N
(   the Authorization request header.) N
() N
(9.10.8.  Example - Refreshing a Write Lock) N
() N
(   >>Request) N
() N
(     LOCK /workspace/webdav/proposal.doc HTTP/1.1) N
(     Host: example.com) N
(     Timeout: Infinite, Second-4100000000) N
(     If: \(<urn:uuid:e71d4fae-5dec-22d6-fea5-00a0c91e6be4>\)) N
(     Authorization: Digest username="ejw",) N
(       realm="ejw@example.com", nonce="...",) N
(       uri="/workspace/webdav/proposal.doc",) N
(       response="...", opaque="...") N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 65]) N
() N
(rfc4918.txt) (Page 65/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   >>Response) N
() N
(     HTTP/1.1 200 OK) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:prop xmlns:D="DAV:">) N
(       <D:lockdiscovery>) N
(         <D:activelock>) N
(           <D:locktype><D:write/></D:locktype>) N
(           <D:lockscope><D:exclusive/></D:lockscope>) N
(           <D:depth>infinity</D:depth>) N
(           <D:owner>) N
(             <D:href>http://example.org/~ejw/contact.html</D:href>) N
(           </D:owner>) N
(           <D:timeout>Second-604800</D:timeout>) N
(           <D:locktoken>) N
(             <D:href) N
(             >urn:uuid:e71d4fae-5dec-22d6-fea5-00a0c91e6be4</D:href>) N
(           </D:locktoken>) N
(           <D:lockroot>) N
(             <D:href) N
(             >http://example.com/workspace/webdav/proposal.doc</D:href>) N
(           </D:lockroot>) N
(         </D:activelock>) N
(       </D:lockdiscovery>) N
(     </D:prop>) N
() N
() N
(   This request would refresh the lock, attempting to reset the timeout) N
(   to the new value specified in the timeout header.  Notice that the) N
(   client asked for an infinite time out but the server choose to ignore) N
(   the request.  In this example, the nonce, response, and opaque fields) N
(   have not been calculated in the Authorization request header.) N
() N
(9.10.9.  Example - Multi-Resource Lock Request) N
() N
(   >>Request) N
() N
(     LOCK /webdav/ HTTP/1.1) N
(     Host: example.com) N
(     Timeout: Infinite, Second-4100000000) N
(     Depth: infinity) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
(     Authorization: Digest username="ejw",) N
(       realm="ejw@example.com", nonce="...",) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 66]) N
() N
(rfc4918.txt) (Page 66/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (33/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (67-68) 34
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(       uri="/workspace/webdav/proposal.doc",) N
(       response="...", opaque="...") N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:lockinfo xmlns:D="DAV:">) N
(       <D:locktype><D:write/></D:locktype>) N
(       <D:lockscope><D:exclusive/></D:lockscope>) N
(       <D:owner>) N
(         <D:href>http://example.org/~ejw/contact.html</D:href>) N
(       </D:owner>) N
(     </D:lockinfo>) N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:multistatus xmlns:D="DAV:">) N
(       <D:response>) N
(         <D:href>http://example.com/webdav/secret</D:href>) N
(         <D:status>HTTP/1.1 403 Forbidden</D:status>) N
(       </D:response>) N
(       <D:response>) N
(         <D:href>http://example.com/webdav/</D:href>) N
(         <D:status>HTTP/1.1 424 Failed Dependency</D:status>) N
(       </D:response>) N
(     </D:multistatus>) N
() N
() N
(   This example shows a request for an exclusive write lock on a) N
(   collection and all its children.  In this request, the client has) N
(   specified that it desires an infinite-length lock, if available,) N
(   otherwise a timeout of 4.1 billion seconds, if available.  The) N
(   request entity body contains the contact information for the) N
(   principal taking out the lock -- in this case, a Web page URL.) N
() N
(   The error is a 403 \(Forbidden\) response on the resource) N
(   http://example.com/webdav/secret.  Because this resource could not be) N
(   locked, none of the resources were locked.  Note also that the a) N
(   'response' element for the Request-URI itself has been included as) N
(   required.) N
() N
(   In this example, the nonce, response, and opaque fields have not been) N
(   calculated in the Authorization request header.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 67]) N
() N
(rfc4918.txt) (Page 67/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.11.  UNLOCK Method) N
() N
(   The UNLOCK method removes the lock identified by the lock token in) N
(   the Lock-Token request header.  The Request-URI MUST identify a) N
(   resource within the scope of the lock.) N
() N
(   Note that use of the Lock-Token header to provide the lock token is) N
(   not consistent with other state-changing methods, which all require) N
(   an If header with the lock token.  Thus, the If header is not needed) N
(   to provide the lock token.  Naturally, when the If header is present,) N
(   it has its normal meaning as a conditional header.) N
() N
(   For a successful response to this method, the server MUST delete the) N
(   lock entirely.) N
() N
(   If all resources that have been locked under the submitted lock token) N
(   cannot be unlocked, then the UNLOCK request MUST fail.) N
() N
(   A successful response to an UNLOCK method does not mean that the) N
(   resource is necessarily unlocked.  It means that the specific lock) N
(   corresponding to the specified token no longer exists.) N
() N
(   Any DAV-compliant resource that supports the LOCK method MUST support) N
(   the UNLOCK method.) N
() N
(   This method is idempotent, but not safe \(see Section 9.1 of) N
(   [RFC2616]\).  Responses to this method MUST NOT be cached.) N
() N
(9.11.1.  Status Codes) N
() N
(   In addition to the general status codes possible, the following) N
(   status codes have specific applicability to UNLOCK:) N
() N
(   204 \(No Content\) - Normal success response \(rather than 200 OK, since) N
(   200 OK would imply a response body, and an UNLOCK success response) N
(   does not normally contain a body\).) N
() N
(   400 \(Bad Request\) - No lock token was provided.) N
() N
(   403 \(Forbidden\) - The currently authenticated principal does not have) N
(   permission to remove the lock.) N
() N
(   409 \(Conflict\), with 'lock-token-matches-request-uri' precondition -) N
(   The resource was not locked, or the request was made to a Request-URI) N
(   that was not within the scope of the lock.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 68]) N
() N
(rfc4918.txt) (Page 68/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (34/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (69-70) 35
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(9.11.2.  Example - UNLOCK) N
() N
(   >>Request) N
() N
(     UNLOCK /workspace/webdav/info.doc HTTP/1.1) N
(     Host: example.com) N
(     Lock-Token: <urn:uuid:a515cfa4-5da4-22e1-f5b5-00a0451e6bf7>) N
(     Authorization: Digest username="ejw") N
(       realm="ejw@example.com", nonce="...",) N
(       uri="/workspace/webdav/proposal.doc",) N
(       response="...", opaque="...") N
() N
(   >>Response) N
() N
(     HTTP/1.1 204 No Content) N
() N
(   In this example, the lock identified by the lock token) N
(   "urn:uuid:a515cfa4-5da4-22e1-f5b5-00a0451e6bf7" is successfully) N
(   removed from the resource) N
(   http://example.com/workspace/webdav/info.doc.  If this lock included) N
(   more than just one resource, the lock is removed from all resources) N
(   included in the lock.) N
() N
(   In this example, the nonce, response, and opaque fields have not been) N
(   calculated in the Authorization request header.) N
() N
(10.  HTTP Headers for Distributed Authoring) N
() N
(   All DAV headers follow the same basic formatting rules as HTTP) N
(   headers.  This includes rules like line continuation and how to) N
(   combine \(or separate\) multiple instances of the same header using) N
(   commas.) N
() N
(   WebDAV adds two new conditional headers to the set defined in HTTP:) N
(   the If and Overwrite headers.) N
() N
(10.1.  DAV Header) N
() N
(    DAV              = "DAV" ":" #\( compliance-class \)) N
(    compliance-class = \( "1" | "2" | "3" | extend \)) N
(    extend           = Coded-URL | token) N
(                       ; token is defined in RFC 2616, Section 2.2) N
(    Coded-URL        = "<" absolute-URI ">") N
(                       ; No linear whitespace \(LWS\) allowed in Coded-URL) N
(                       ; absolute-URI defined in RFC 3986, Section 4.3) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 69]) N
() N
(rfc4918.txt) (Page 69/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   This general-header appearing in the response indicates that the) N
(   resource supports the DAV schema and protocol as specified.  All DAV-) N
(   compliant resources MUST return the DAV header with compliance-class) N
(   "1" on all OPTIONS responses.  In cases where WebDAV is only) N
(   supported in part of the server namespace, an OPTIONS request to non-) N
(   WebDAV resources \(including "/"\) SHOULD NOT advertise WebDAV support.) N
() N
(   The value is a comma-separated list of all compliance class) N
(   identifiers that the resource supports.  Class identifiers may be) N
(   Coded-URLs or tokens \(as defined by [RFC2616]\).  Identifiers can) N
(   appear in any order.  Identifiers that are standardized through the) N
(   IETF RFC process are tokens, but other identifiers SHOULD be Coded-) N
(   URLs to encourage uniqueness.) N
() N
(   A resource must show class 1 compliance if it shows class 2 or 3) N
(   compliance.  In general, support for one compliance class does not) N
(   entail support for any other, and in particular, support for) N
(   compliance class 3 does not require support for compliance class 2.) N
(   Please refer to Section 18 for more details on compliance classes) N
(   defined in this specification.) N
() N
(   Note that many WebDAV servers do not advertise WebDAV support in) N
(   response to "OPTIONS *".) N
() N
(   As a request header, this header allows the client to advertise) N
(   compliance with named features when the server needs that) N
(   information.  Clients SHOULD NOT send this header unless a standards) N
(   track specification requires it.  Any extension that makes use of) N
(   this as a request header will need to carefully consider caching) N
(   implications.) N
() N
(10.2.  Depth Header) N
() N
(      Depth = "Depth" ":" \("0" | "1" | "infinity"\)) N
() N
(   The Depth request header is used with methods executed on resources) N
(   that could potentially have internal members to indicate whether the) N
(   method is to be applied only to the resource \("Depth: 0"\), to the) N
(   resource and its internal members only \("Depth: 1"\), or the resource) N
(   and all its members \("Depth: infinity"\).) N
() N
(   The Depth header is only supported if a method's definition) N
(   explicitly provides for such support.) N
() N
(   The following rules are the default behavior for any method that) N
(   supports the Depth header.  A method may override these defaults by) N
(   defining different behavior in its definition.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 70]) N
() N
(rfc4918.txt) (Page 70/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (35/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (71-72) 36
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Methods that support the Depth header may choose not to support all) N
(   of the header's values and may define, on a case-by-case basis, the) N
(   behavior of the method if a Depth header is not present.  For) N
(   example, the MOVE method only supports "Depth: infinity", and if a) N
(   Depth header is not present, it will act as if a "Depth: infinity") N
(   header had been applied.) N
() N
(   Clients MUST NOT rely upon methods executing on members of their) N
(   hierarchies in any particular order or on the execution being atomic) N
(   unless the particular method explicitly provides such guarantees.) N
() N
(   Upon execution, a method with a Depth header will perform as much of) N
(   its assigned task as possible and then return a response specifying) N
(   what it was able to accomplish and what it failed to do.) N
() N
(   So, for example, an attempt to COPY a hierarchy may result in some of) N
(   the members being copied and some not.) N
() N
(   By default, the Depth header does not interact with other headers.) N
(   That is, each header on a request with a Depth header MUST be applied) N
(   only to the Request-URI if it applies to any resource, unless) N
(   specific Depth behavior is defined for that header.) N
() N
(   If a source or destination resource within the scope of the Depth) N
(   header is locked in such a way as to prevent the successful execution) N
(   of the method, then the lock token for that resource MUST be) N
(   submitted with the request in the If request header.) N
() N
(   The Depth header only specifies the behavior of the method with) N
(   regards to internal members.  If a resource does not have internal) N
(   members, then the Depth header MUST be ignored.) N
() N
(10.3.  Destination Header) N
() N
(   The Destination request header specifies the URI that identifies a) N
(   destination resource for methods such as COPY and MOVE, which take) N
(   two URIs as parameters.) N
() N
(      Destination = "Destination" ":" Simple-ref) N
() N
() N
(   If the Destination value is an absolute-URI \(Section 4.3 of) N
(   [RFC3986]\), it may name a different server \(or different port or) N
(   scheme\).  If the source server cannot attempt a copy to the remote) N
(   server, it MUST fail the request.  Note that copying and moving) N
(   resources to remote servers is not fully defined in this) N
(   specification \(e.g., specific error conditions\).) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 71]) N
() N
(rfc4918.txt) (Page 71/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   If the Destination value is too long or otherwise unacceptable, the) N
(   server SHOULD return 400 \(Bad Request\), ideally with helpful) N
(   information in an error body.) N
() N
(10.4.  If Header) N
() N
(   The If request header is intended to have similar functionality to) N
(   the If-Match header defined in Section 14.24 of [RFC2616].  However,) N
(   the If header handles any state token as well as ETags.  A typical) N
(   example of a state token is a lock token, and lock tokens are the) N
(   only state tokens defined in this specification.) N
() N
(10.4.1.  Purpose) N
() N
(   The If header has two distinct purposes:) N
() N
(   o  The first purpose is to make a request conditional by supplying a) N
(      series of state lists with conditions that match tokens and ETags) N
(      to a specific resource.  If this header is evaluated and all state) N
(      lists fail, then the request MUST fail with a 412 \(Precondition) N
(      Failed\) status.  On the other hand, the request can succeed only) N
(      if one of the described state lists succeeds.  The success) N
(      criteria for state lists and matching functions are defined in) N
(      Sections 10.4.3 and 10.4.4.) N
() N
(   o  Additionally, the mere fact that a state token appears in an If) N
(      header means that it has been "submitted" with the request.  In) N
(      general, this is used to indicate that the client has knowledge of) N
(      that state token.  The semantics for submitting a state token) N
(      depend on its type \(for lock tokens, please refer to Section 6\).) N
() N
(   Note that these two purposes need to be treated distinctly: a state) N
(   token counts as being submitted independently of whether the server) N
(   actually has evaluated the state list it appears in, and also) N
(   independently of whether or not the condition it expressed was found) N
(   to be true.) N
() N
(10.4.2.  Syntax) N
() N
(     If = "If" ":" \( 1*No-tag-list | 1*Tagged-list \)) N
() N
(     No-tag-list = List) N
(     Tagged-list = Resource-Tag 1*List) N
() N
(     List = "\(" 1*Condition "\)") N
(     Condition = ["Not"] \(State-token | "[" entity-tag "]"\)) N
(     ; entity-tag: see Section 3.11 of [RFC2616]) N
(     ; No LWS allowed between "[", entity-tag and "]") N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 72]) N
() N
(rfc4918.txt) (Page 72/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (36/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (73-74) 37
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(     State-token = Coded-URL) N
() N
(     Resource-Tag = "<" Simple-ref ">") N
(     ; Simple-ref: see Section 8.3) N
(     ; No LWS allowed in Resource-Tag) N
() N
(   The syntax distinguishes between untagged lists \("No-tag-list"\) and) N
(   tagged lists \("Tagged-list"\).  Untagged lists apply to the resource) N
(   identified by the Request-URI, while tagged lists apply to the) N
(   resource identified by the preceding Resource-Tag.) N
() N
(   A Resource-Tag applies to all subsequent Lists, up to the next) N
(   Resource-Tag.) N
() N
(   Note that the two list types cannot be mixed within an If header.) N
(   This is not a functional restriction because the No-tag-list syntax) N
(   is just a shorthand notation for a Tagged-list production with a) N
(   Resource-Tag referring to the Request-URI.) N
() N
(   Each List consists of one or more Conditions.  Each Condition is) N
(   defined in terms of an entity-tag or state-token, potentially negated) N
(   by the prefix "Not".) N
() N
(   Note that the If header syntax does not allow multiple instances of) N
(   If headers in a single request.  However, the HTTP header syntax) N
(   allows extending single header values across multiple lines, by) N
(   inserting a line break followed by whitespace \(see [RFC2616], Section) N
(   4.2\).) N
() N
(10.4.3.  List Evaluation) N
() N
(   A Condition that consists of a single entity-tag or state-token) N
(   evaluates to true if the resource matches the described state \(where) N
(   the individual matching functions are defined below in) N
(   Section 10.4.4\).  Prefixing it with "Not" reverses the result of the) N
(   evaluation \(thus, the "Not" applies only to the subsequent entity-tag) N
(   or state-token\).) N
() N
(   Each List production describes a series of conditions.  The whole) N
(   list evaluates to true if and only if each condition evaluates to) N
(   true \(that is, the list represents a logical conjunction of) N
(   Conditions\).) N
() N
(   Each No-tag-list and Tagged-list production may contain one or more) N
(   Lists.  They evaluate to true if and only if any of the contained) N
(   lists evaluates to true \(that is, if there's more than one List, that) N
(   List sequence represents a logical disjunction of the Lists\).) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 73]) N
() N
(rfc4918.txt) (Page 73/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Finally, the whole If header evaluates to true if and only if at) N
(   least one of the No-tag-list or Tagged-list productions evaluates to) N
(   true.  If the header evaluates to false, the server MUST reject the) N
(   request with a 412 \(Precondition Failed\) status.  Otherwise,) N
(   execution of the request can proceed as if the header wasn't present.) N
() N
(10.4.4.  Matching State Tokens and ETags) N
() N
(   When performing If header processing, the definition of a matching) N
(   state token or entity tag is as follows:) N
() N
(   Identifying a resource: The resource is identified by the URI along) N
(   with the token, in tagged list production, or by the Request-URI in) N
(   untagged list production.) N
() N
(   Matching entity tag: Where the entity tag matches an entity tag) N
(   associated with the identified resource.  Servers MUST use either the) N
(   weak or the strong comparison function defined in Section 13.3.3 of) N
(   [RFC2616].) N
() N
(   Matching state token: Where there is an exact match between the state) N
(   token in the If header and any state token on the identified) N
(   resource.  A lock state token is considered to match if the resource) N
(   is anywhere in the scope of the lock.) N
() N
(   Handling unmapped URLs: For both ETags and state tokens, treat as if) N
(   the URL identified a resource that exists but does not have the) N
(   specified state.) N
() N
(10.4.5.  If Header and Non-DAV-Aware Proxies) N
() N
(   Non-DAV-aware proxies will not honor the If header, since they will) N
(   not understand the If header, and HTTP requires non-understood) N
(   headers to be ignored.  When communicating with HTTP/1.1 proxies, the) N
(   client MUST use the "Cache-Control: no-cache" request header so as to) N
(   prevent the proxy from improperly trying to service the request from) N
(   its cache.  When dealing with HTTP/1.0 proxies, the "Pragma: no-) N
(   cache" request header MUST be used for the same reason.) N
() N
(   Because in general clients may not be able to reliably detect non-) N
(   DAV-aware intermediates, they are advised to always prevent caching) N
(   using the request directives mentioned above.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 74]) N
() N
(rfc4918.txt) (Page 74/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (37/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (75-76) 38
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(10.4.6.  Example - No-tag Production) N
() N
(     If: \(<urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>) N
(       ["I am an ETag"]\)) N
(       \(["I am another ETag"]\)) N
() N
(   The previous header would require that the resource identified in the) N
(   Request-URI be locked with the specified lock token and be in the) N
(   state identified by the "I am an ETag" ETag or in the state) N
(   identified by the second ETag "I am another ETag".) N
() N
(   To put the matter more plainly one can think of the previous If) N
(   header as expressing the condition below:) N
() N
(     \() N
(       is-locked-with\(urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2\) AND) N
(       matches-etag\("I am an ETag"\)) N
(     \)) N
(     OR) N
(     \() N
(       matches-etag\("I am another ETag"\)) N
(     \)) N
() N
(10.4.7.  Example - Using "Not" with No-tag Production) N
() N
(     If: \(Not <urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>) N
(     <urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092>\)) N
() N
(   This If header requires that the resource must not be locked with a) N
(   lock having the lock token) N
(   urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2 and must be locked by a) N
(   lock with the lock token) N
(   urn:uuid:58f202ac-22cf-11d1-b12d-002035b29092.) N
() N
(10.4.8.  Example - Causing a Condition to Always Evaluate to True) N
() N
(   There may be cases where a client wishes to submit state tokens, but) N
(   doesn't want the request to fail just because the state token isn't) N
(   current anymore.  One simple way to do this is to include a Condition) N
(   that is known to always evaluate to true, such as in:) N
() N
(     If: \(<urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>\)) N
(       \(Not <DAV:no-lock>\)) N
() N
(   "DAV:no-lock" is known to never represent a current lock token.  Lock) N
(   tokens are assigned by the server, following the uniqueness) N
(   requirements described in Section 6.5, therefore cannot use the) N
(   "DAV:" scheme.  Thus, by applying "Not" to a state token that is) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 75]) N
() N
(rfc4918.txt) (Page 75/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   known not to be current, the Condition always evaluates to true.) N
(   Consequently, the whole If header will always evaluate to true, and) N
(   the lock token urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2 will be) N
(   submitted in any case.) N
() N
(10.4.9.  Example - Tagged List If Header in COPY) N
() N
(   >>Request) N
() N
(     COPY /resource1 HTTP/1.1) N
(     Host: www.example.com) N
(     Destination: /resource2) N
(     If: </resource1>) N
(       \(<urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>) N
(       [W/"A weak ETag"]\) \(["strong ETag"]\)) N
() N
(   In this example, http://www.example.com/resource1 is being copied to) N
(   http://www.example.com/resource2.  When the method is first applied) N
(   to http://www.example.com/resource1, resource1 must be in the state) N
(   specified by "\(<urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2> [W/"A) N
(   weak ETag"]\) \(["strong ETag"]\)".  That is, either it must be locked) N
(   with a lock token of "urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2") N
(   and have a weak entity tag W/"A weak ETag" or it must have a strong) N
(   entity tag "strong ETag".) N
() N
(10.4.10.  Example - Matching Lock Tokens with Collection Locks) N
() N
(     DELETE /specs/rfc2518.txt HTTP/1.1) N
(     Host: www.example.com) N
(     If: <http://www.example.com/specs/>) N
(       \(<urn:uuid:181d4fae-7d8c-11d0-a765-00a0c91e6bf2>\)) N
() N
(   For this example, the lock token must be compared to the identified) N
(   resource, which is the 'specs' collection identified by the URL in) N
(   the tagged list production.  If the 'specs' collection is not locked) N
(   by a lock with the specified lock token, the request MUST fail.) N
(   Otherwise, this request could succeed, because the If header) N
(   evaluates to true, and because the lock token for the lock affecting) N
(   the affected resource has been submitted.) N
() N
(10.4.11.  Example - Matching ETags on Unmapped URLs) N
() N
(   Consider a collection "/specs" that does not contain the member) N
(   "/specs/rfc2518.doc".  In this case, the If header) N
() N
(     If: </specs/rfc2518.doc> \(["4217"]\)) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 76]) N
() N
(rfc4918.txt) (Page 76/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (38/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (77-78) 39
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   will evaluate to false \(the URI isn't mapped, thus the resource) N
(   identified by the URI doesn't have an entity matching the ETag) N
(   "4217"\).) N
() N
(   On the other hand, an If header of) N
() N
(     If: </specs/rfc2518.doc> \(Not ["4217"]\)) N
() N
(   will consequently evaluate to true.) N
() N
(   Note that, as defined above in Section 10.4.4, the same) N
(   considerations apply to matching state tokens.) N
() N
(10.5.  Lock-Token Header) N
() N
(      Lock-Token = "Lock-Token" ":" Coded-URL) N
() N
(   The Lock-Token request header is used with the UNLOCK method to) N
(   identify the lock to be removed.  The lock token in the Lock-Token) N
(   request header MUST identify a lock that contains the resource) N
(   identified by Request-URI as a member.) N
() N
(   The Lock-Token response header is used with the LOCK method to) N
(   indicate the lock token created as a result of a successful LOCK) N
(   request to create a new lock.) N
() N
(10.6.  Overwrite Header) N
() N
(      Overwrite = "Overwrite" ":" \("T" | "F"\)) N
() N
(   The Overwrite request header specifies whether the server should) N
(   overwrite a resource mapped to the destination URL during a COPY or) N
(   MOVE.  A value of "F" states that the server must not perform the) N
(   COPY or MOVE operation if the destination URL does map to a resource.) N
(   If the overwrite header is not included in a COPY or MOVE request,) N
(   then the resource MUST treat the request as if it has an overwrite) N
(   header of value "T".  While the Overwrite header appears to duplicate) N
(   the functionality of using an "If-Match: *" header \(see [RFC2616]\),) N
(   If-Match applies only to the Request-URI, and not to the Destination) N
(   of a COPY or MOVE.) N
() N
(   If a COPY or MOVE is not performed due to the value of the Overwrite) N
(   header, the method MUST fail with a 412 \(Precondition Failed\) status) N
(   code.  The server MUST do authorization checks before checking this) N
(   or any conditional header.) N
() N
(   All DAV-compliant resources MUST support the Overwrite header.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 77]) N
() N
(rfc4918.txt) (Page 77/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(10.7.  Timeout Request Header) N
() N
(      TimeOut = "Timeout" ":" 1#TimeType) N
(      TimeType = \("Second-" DAVTimeOutVal | "Infinite"\)) N
(                 ; No LWS allowed within TimeType) N
(      DAVTimeOutVal = 1*DIGIT) N
() N
(   Clients MAY include Timeout request headers in their LOCK requests.) N
(   However, the server is not required to honor or even consider these) N
(   requests.  Clients MUST NOT submit a Timeout request header with any) N
(   method other than a LOCK method.) N
() N
(   The "Second" TimeType specifies the number of seconds that will) N
(   elapse between granting of the lock at the server, and the automatic) N
(   removal of the lock.  The timeout value for TimeType "Second" MUST) N
(   NOT be greater than 2^32-1.) N
() N
(   See Section 6.6 for a description of lock timeout behavior.) N
() N
(11.  Status Code Extensions to HTTP/1.1) N
() N
(   The following status codes are added to those defined in HTTP/1.1) N
(   [RFC2616].) N
() N
(11.1.  207 Multi-Status) N
() N
(   The 207 \(Multi-Status\) status code provides status for multiple) N
(   independent operations \(see Section 13 for more information\).) N
() N
(11.2.  422 Unprocessable Entity) N
() N
(   The 422 \(Unprocessable Entity\) status code means the server) N
(   understands the content type of the request entity \(hence a) N
(   415\(Unsupported Media Type\) status code is inappropriate\), and the) N
(   syntax of the request entity is correct \(thus a 400 \(Bad Request\)) N
(   status code is inappropriate\) but was unable to process the contained) N
(   instructions.  For example, this error condition may occur if an XML) N
(   request body contains well-formed \(i.e., syntactically correct\), but) N
(   semantically erroneous, XML instructions.) N
() N
(11.3.  423 Locked) N
() N
(   The 423 \(Locked\) status code means the source or destination resource) N
(   of a method is locked.  This response SHOULD contain an appropriate) N
(   precondition or postcondition code, such as 'lock-token-submitted' or) N
(   'no-conflicting-lock'.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 78]) N
() N
(rfc4918.txt) (Page 78/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (39/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (79-80) 40
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(11.4.  424 Failed Dependency) N
() N
(   The 424 \(Failed Dependency\) status code means that the method could) N
(   not be performed on the resource because the requested action) N
(   depended on another action and that action failed.  For example, if a) N
(   command in a PROPPATCH method fails, then, at minimum, the rest of) N
(   the commands will also fail with 424 \(Failed Dependency\).) N
() N
(11.5.  507 Insufficient Storage) N
() N
(   The 507 \(Insufficient Storage\) status code means the method could not) N
(   be performed on the resource because the server is unable to store) N
(   the representation needed to successfully complete the request.  This) N
(   condition is considered to be temporary.  If the request that) N
(   received this status code was the result of a user action, the) N
(   request MUST NOT be repeated until it is requested by a separate user) N
(   action.) N
() N
(12.  Use of HTTP Status Codes) N
() N
(   These HTTP codes are not redefined, but their use is somewhat) N
(   extended by WebDAV methods and requirements.  In general, many HTTP) N
(   status codes can be used in response to any request, not just in) N
(   cases described in this document.  Note also that WebDAV servers are) N
(   known to use 300-level redirect responses \(and early interoperability) N
(   tests found clients unprepared to see those responses\).  A 300-level) N
(   response MUST NOT be used when the server has created a new resource) N
(   in response to the request.) N
() N
(12.1.  412 Precondition Failed) N
() N
(   Any request can contain a conditional header defined in HTTP \(If-) N
(   Match, If-Modified-Since, etc.\) or the "If" or "Overwrite") N
(   conditional headers defined in this specification.  If the server) N
(   evaluates a conditional header, and if that condition fails to hold,) N
(   then this error code MUST be returned.  On the other hand, if the) N
(   client did not include a conditional header in the request, then the) N
(   server MUST NOT use this status code.) N
() N
(12.2.  414 Request-URI Too Long) N
() N
(   This status code is used in HTTP 1.1 only for Request-URIs, not URIs) N
(   in other locations.) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 79]) N
() N
(rfc4918.txt) (Page 79/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(13.  Multi-Status Response) N
() N
(   A Multi-Status response conveys information about multiple resources) N
(   in situations where multiple status codes might be appropriate.  The) N
(   default Multi-Status response body is a text/xml or application/xml) N
(   HTTP entity with a 'multistatus' root element.  Further elements) N
(   contain 200, 300, 400, and 500 series status codes generated during) N
(   the method invocation. 100 series status codes SHOULD NOT be recorded) N
(   in a 'response' XML element.) N
() N
(   Although '207' is used as the overall response status code, the) N
(   recipient needs to consult the contents of the multistatus response) N
(   body for further information about the success or failure of the) N
(   method execution.  The response MAY be used in success, partial) N
(   success and also in failure situations.) N
() N
(   The 'multistatus' root element holds zero or more 'response' elements) N
(   in any order, each with information about an individual resource.) N
(   Each 'response' element MUST have an 'href' element to identify the) N
(   resource.) N
() N
(   A Multi-Status response uses one out of two distinct formats for) N
(   representing the status:) N
() N
(   1.  A 'status' element as child of the 'response' element indicates) N
(       the status of the message execution for the identified resource) N
(       as a whole \(for instance, see Section 9.6.2\).  Some method) N
(       definitions provide information about specific status codes) N
(       clients should be prepared to see in a response.  However,) N
(       clients MUST be able to handle other status codes, using the) N
(       generic rules defined in Section 10 of [RFC2616].) N
() N
(   2.  For PROPFIND and PROPPATCH, the format has been extended using) N
(       the 'propstat' element instead of 'status', providing information) N
(       about individual properties of a resource.  This format is) N
(       specific to PROPFIND and PROPPATCH, and is described in detail in) N
(       Sections 9.1 and 9.2.) N
() N
(13.1.  Response Headers) N
() N
(   HTTP defines the Location header to indicate a preferred URL for the) N
(   resource that was addressed in the Request-URI \(e.g., in response to) N
(   successful PUT requests or in redirect responses\).  However, use of) N
(   this header creates ambiguity when there are URLs in the body of the) N
(   response, as with Multi-Status.  Thus, use of the Location header) N
(   with the Multi-Status response is intentionally undefined.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 80]) N
() N
(rfc4918.txt) (Page 80/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (40/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (81-82) 41
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(13.2.  Handling Redirected Child Resources) N
() N
(   Redirect responses \(300-303, 305, and 307\) defined in HTTP 1.1) N
(   normally take a Location header to indicate the new URI for the) N
(   single resource redirected from the Request-URI.  Multi-Status) N
(   responses contain many resource addresses, but the original) N
(   definition in [RFC2518] did not have any place for the server to) N
(   provide the new URI for redirected resources.  This specification) N
(   does define a 'location' element for this information \(see) N
(   Section 14.9\).  Servers MUST use this new element with redirect) N
(   responses in Multi-Status.) N
() N
(   Clients encountering redirected resources in Multi-Status MUST NOT) N
(   rely on the 'location' element being present with a new URI.  If the) N
(   element is not present, the client MAY reissue the request to the) N
(   individual redirected resource, because the response to that request) N
(   can be redirected with a Location header containing the new URI.) N
() N
(13.3.  Internal Status Codes) N
() N
(   Sections 9.2.1, 9.1.2, 9.6.1, 9.8.3, and 9.9.2 define various status) N
(   codes used in Multi-Status responses.  This specification does not) N
(   define the meaning of other status codes that could appear in these) N
(   responses.) N
() N
(14.  XML Element Definitions) N
() N
(   In this section, the final line of each section gives the element) N
(   type declaration using the format defined in [REC-XML].  The "Value") N
(   field, where present, specifies further restrictions on the allowable) N
(   contents of the XML element using BNF \(i.e., to further restrict the) N
(   values of a PCDATA element\).  Note that all of the elements defined) N
(   here may be extended according to the rules defined in Section 17.) N
(   All elements defined here are in the "DAV:" namespace.) N
() N
(14.1.  activelock XML Element) N
() N
(   Name:   activelock) N
() N
(   Purpose:   Describes a lock on a resource.) N
() N
() N
(   <!ELEMENT activelock \(lockscope, locktype, depth, owner?, timeout?,) N
(             locktoken?, lockroot\)>) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 81]) N
() N
(rfc4918.txt) (Page 81/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(14.2.  allprop XML Element) N
() N
(   Name:   allprop) N
() N
(   Purpose:   Specifies that all names and values of dead properties and) N
(      the live properties defined by this document existing on the) N
(      resource are to be returned.) N
() N
(   <!ELEMENT allprop EMPTY >) N
() N
(14.3.  collection XML Element) N
() N
(   Name:   collection) N
() N
(   Purpose:   Identifies the associated resource as a collection.  The) N
(      DAV:resourcetype property of a collection resource MUST contain) N
(      this element.  It is normally empty but extensions may add sub-) N
(      elements.) N
() N
(   <!ELEMENT collection EMPTY >) N
() N
(14.4.  depth XML Element) N
() N
(   Name:   depth) N
() N
(   Purpose:   Used for representing depth values in XML content \(e.g.,) N
(      in lock information\).) N
() N
(   Value:   "0" | "1" | "infinity") N
() N
(   <!ELEMENT depth \(#PCDATA\) >) N
() N
(14.5.  error XML Element) N
() N
(   Name:   error) N
() N
(   Purpose:   Error responses, particularly 403 Forbidden and 409) N
(      Conflict, sometimes need more information to indicate what went) N
(      wrong.  In these cases, servers MAY return an XML response body) N
(      with a document element of 'error', containing child elements) N
(      identifying particular condition codes.) N
() N
(   Description:   Contains at least one XML element, and MUST NOT) N
(      contain text or mixed content.  Any element that is a child of the) N
(      'error' element is considered to be a precondition or) N
(      postcondition code.  Unrecognized elements MUST be ignored.) N
() N
(   <!ELEMENT error ANY >) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 82]) N
() N
(rfc4918.txt) (Page 82/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (41/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (83-84) 42
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(14.6.  exclusive XML Element) N
() N
(   Name:   exclusive) N
() N
(   Purpose:   Specifies an exclusive lock.) N
() N
() N
(   <!ELEMENT exclusive EMPTY >) N
() N
() N
(14.7.  href XML Element) N
() N
(   Name:   href) N
() N
(   Purpose:   MUST contain a URI or a relative reference.) N
() N
(   Description:   There may be limits on the value of 'href' depending) N
(      on the context of its use.  Refer to the specification text where) N
(      'href' is used to see what limitations apply in each case.) N
() N
(   Value:   Simple-ref) N
() N
() N
(   <!ELEMENT href \(#PCDATA\)>) N
() N
(14.8.  include XML Element) N
() N
(   Name:   include) N
() N
(   Purpose:   Any child element represents the name of a property to be) N
(      included in the PROPFIND response.  All elements inside an) N
(      'include' XML element MUST define properties related to the) N
(      resource, although possible property names are in no way limited) N
(      to those property names defined in this document or other) N
(      standards.  This element MUST NOT contain text or mixed content.) N
() N
(   <!ELEMENT include ANY >) N
() N
(14.9.  location XML Element) N
() N
(   Name:   location) N
() N
(   Purpose:   HTTP defines the "Location" header \(see [RFC2616], Section) N
(      14.30\) for use with some status codes \(such as 201 and the 300) N
(      series codes\).  When these codes are used inside a 'multistatus') N
(      element, the 'location' element can be used to provide the) N
(      accompanying Location header value.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 83]) N
() N
(rfc4918.txt) (Page 83/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Description:   Contains a single href element with the same value) N
(      that would be used in a Location header.) N
() N
() N
(   <!ELEMENT location \(href\)>) N
() N
(14.10.  lockentry XML Element) N
() N
(   Name:   lockentry) N
() N
(   Purpose:   Defines the types of locks that can be used with the) N
(      resource.) N
() N
(   <!ELEMENT lockentry \(lockscope, locktype\) >) N
() N
(14.11.  lockinfo XML Element) N
() N
(   Name:   lockinfo) N
() N
(   Purpose:   The 'lockinfo' XML element is used with a LOCK method to) N
(      specify the type of lock the client wishes to have created.) N
() N
() N
(   <!ELEMENT lockinfo \(lockscope, locktype, owner?\)  >) N
() N
(14.12.  lockroot XML Element) N
() N
(   Name:   lockroot) N
() N
(   Purpose:   Contains the root URL of the lock, which is the URL) N
(      through which the resource was addressed in the LOCK request.) N
() N
(   Description:   The href element contains the root of the lock.  The) N
(      server SHOULD include this in all DAV:lockdiscovery property) N
(      values and the response to LOCK requests.) N
() N
(   <!ELEMENT lockroot \(href\) >) N
() N
(14.13.  lockscope XML Element) N
() N
(   Name:   lockscope) N
() N
(   Purpose:   Specifies whether a lock is an exclusive lock, or a shared) N
(      lock.) N
() N
() N
(     <!ELEMENT lockscope \(exclusive | shared\) >) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 84]) N
() N
(rfc4918.txt) (Page 84/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (42/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (85-86) 43
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(14.14.  locktoken XML Element) N
() N
(   Name:   locktoken) N
() N
(   Purpose:   The lock token associated with a lock.) N
() N
(   Description:   The href contains a single lock token URI, which) N
(      refers to the lock.) N
() N
(   <!ELEMENT locktoken \(href\) >) N
() N
(14.15.  locktype XML Element) N
() N
(   Name:   locktype) N
() N
(   Purpose:   Specifies the access type of a lock.  At present, this) N
(      specification only defines one lock type, the write lock.) N
() N
() N
(   <!ELEMENT locktype \(write\) >) N
() N
() N
(14.16.  multistatus XML Element) N
() N
(   Name:   multistatus) N
() N
(   Purpose:   Contains multiple response messages.) N
() N
(   Description:   The 'responsedescription' element at the top level is) N
(      used to provide a general message describing the overarching) N
(      nature of the response.  If this value is available, an) N
(      application may use it instead of presenting the individual) N
(      response descriptions contained within the responses.) N
() N
() N
(   <!ELEMENT multistatus \(response*, responsedescription?\)  >) N
() N
() N
(14.17.  owner XML Element) N
() N
(   Name:   owner) N
() N
(   Purpose:   Holds client-supplied information about the creator of a) N
(      lock.) N
() N
(   Description:   Allows a client to provide information sufficient for) N
(      either directly contacting a principal \(such as a telephone number) N
(      or Email URI\), or for discovering the principal \(such as the URL) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 85]) N
() N
(rfc4918.txt) (Page 85/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(      of a homepage\) who created a lock.  The value provided MUST be) N
(      treated as a dead property in terms of XML Information Item) N
(      preservation.  The server MUST NOT alter the value unless the) N
(      owner value provided by the client is empty.  For a certain amount) N
(      of interoperability between different client implementations, if) N
(      clients have URI-formatted contact information for the lock) N
(      creator suitable for user display, then clients SHOULD put those) N
(      URIs in 'href' child elements of the 'owner' element.) N
() N
(   Extensibility:   MAY be extended with child elements, mixed content,) N
(      text content or attributes.) N
() N
(   <!ELEMENT owner ANY >) N
() N
(14.18.  prop XML Element) N
() N
(   Name:   prop) N
() N
(   Purpose:   Contains properties related to a resource.) N
() N
(   Description:   A generic container for properties defined on) N
(      resources.  All elements inside a 'prop' XML element MUST define) N
(      properties related to the resource, although possible property) N
(      names are in no way limited to those property names defined in) N
(      this document or other standards.  This element MUST NOT contain) N
(      text or mixed content.) N
() N
(   <!ELEMENT prop ANY >) N
() N
(14.19.  propertyupdate XML Element) N
() N
(   Name:   propertyupdate) N
() N
(   Purpose:   Contains a request to alter the properties on a resource.) N
() N
(   Description:   This XML element is a container for the information) N
(      required to modify the properties on the resource.) N
() N
(   <!ELEMENT propertyupdate \(remove | set\)+ >) N
() N
(14.20.  propfind XML Element) N
() N
(   Name:   propfind) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 86]) N
() N
(rfc4918.txt) (Page 86/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (43/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (87-88) 44
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Purpose:   Specifies the properties to be returned from a PROPFIND) N
(      method.  Four special elements are specified for use with) N
(      'propfind': 'prop', 'allprop', 'include', and 'propname'.  If) N
(      'prop' is used inside 'propfind', it MUST NOT contain property) N
(      values.) N
() N
(   <!ELEMENT propfind \( propname | \(allprop, include?\) | prop \) >) N
() N
(14.21.  propname XML Element) N
() N
(   Name:   propname) N
() N
(   Purpose:   Specifies that only a list of property names on the) N
(      resource is to be returned.) N
() N
(   <!ELEMENT propname EMPTY >) N
() N
(14.22.  propstat XML Element) N
() N
(   Name:   propstat) N
() N
(   Purpose:   Groups together a prop and status element that is) N
(      associated with a particular 'href' element.) N
() N
(   Description:   The propstat XML element MUST contain one prop XML) N
(      element and one status XML element.  The contents of the prop XML) N
(      element MUST only list the names of properties to which the result) N
(      in the status element applies.  The optional precondition/) N
(      postcondition element and 'responsedescription' text also apply to) N
(      the properties named in 'prop'.) N
() N
(   <!ELEMENT propstat \(prop, status, error?, responsedescription?\) >) N
() N
(14.23.  remove XML Element) N
() N
(   Name:   remove) N
() N
(   Purpose:   Lists the properties to be removed from a resource.) N
() N
(   Description:   Remove instructs that the properties specified in prop) N
(      should be removed.  Specifying the removal of a property that does) N
(      not exist is not an error.  All the XML elements in a 'prop' XML) N
(      element inside of a 'remove' XML element MUST be empty, as only) N
(      the names of properties to be removed are required.) N
() N
(   <!ELEMENT remove \(prop\) >) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 87]) N
() N
(rfc4918.txt) (Page 87/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(14.24.  response XML Element) N
() N
(   Name:   response) N
() N
(   Purpose:   Holds a single response describing the effect of a method) N
(      on resource and/or its properties.) N
() N
(   Description:   The 'href' element contains an HTTP URL pointing to a) N
(      WebDAV resource when used in the 'response' container.  A) N
(      particular 'href' value MUST NOT appear more than once as the) N
(      child of a 'response' XML element under a 'multistatus' XML) N
(      element.  This requirement is necessary in order to keep) N
(      processing costs for a response to linear time.  Essentially, this) N
(      prevents having to search in order to group together all the) N
(      responses by 'href'.  There are, however, no requirements) N
(      regarding ordering based on 'href' values.  The optional) N
(      precondition/postcondition element and 'responsedescription' text) N
(      can provide additional information about this resource relative to) N
(      the request or result.) N
() N
() N
(   <!ELEMENT response \(href, \(\(href*, status\)|\(propstat+\)\),) N
(                       error?, responsedescription? , location?\) >) N
() N
(14.25.  responsedescription XML Element) N
() N
(   Name:   responsedescription) N
() N
(   Purpose:   Contains information about a status response within a) N
(      Multi-Status.) N
() N
(   Description:   Provides information suitable to be presented to a) N
(      user.) N
() N
(   <!ELEMENT responsedescription \(#PCDATA\) >) N
() N
(14.26.  set XML Element) N
() N
(   Name:   set) N
() N
(   Purpose:   Lists the property values to be set for a resource.) N
() N
(   Description:   The 'set' element MUST contain only a 'prop' element.) N
(      The elements contained by the 'prop' element inside the 'set') N
(      element MUST specify the name and value of properties that are set) N
(      on the resource identified by Request-URI.  If a property already) N
(      exists, then its value is replaced.  Language tagging information) N
(      appearing in the scope of the 'prop' element \(in the "xml:lang") N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 88]) N
() N
(rfc4918.txt) (Page 88/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (44/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (89-90) 45
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(      attribute, if present\) MUST be persistently stored along with the) N
(      property, and MUST be subsequently retrievable using PROPFIND.) N
() N
(   <!ELEMENT set \(prop\) >) N
() N
(14.27.  shared XML Element) N
() N
(   Name:   shared) N
() N
(   Purpose:   Specifies a shared lock.) N
() N
() N
(   <!ELEMENT shared EMPTY >) N
() N
() N
(14.28.  status XML Element) N
() N
(   Name:   status) N
() N
(   Purpose:   Holds a single HTTP status-line.) N
() N
(   Value:   status-line \(defined in Section 6.1 of [RFC2616]\)) N
() N
(   <!ELEMENT status \(#PCDATA\) >) N
() N
(14.29.  timeout XML Element) N
() N
(   Name:   timeout) N
() N
(   Purpose:   The number of seconds remaining before a lock expires.) N
() N
(   Value:   TimeType \(defined in Section 10.7\)) N
() N
() N
(      <!ELEMENT timeout \(#PCDATA\) >) N
() N
(14.30.  write XML Element) N
() N
(   Name:   write) N
() N
(   Purpose:   Specifies a write lock.) N
() N
() N
(   <!ELEMENT write EMPTY >) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 89]) N
() N
(rfc4918.txt) (Page 89/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(15.  DAV Properties) N
() N
(   For DAV properties, the name of the property is also the same as the) N
(   name of the XML element that contains its value.  In the section) N
(   below, the final line of each section gives the element type) N
(   declaration using the format defined in [REC-XML].  The "Value") N
(   field, where present, specifies further restrictions on the allowable) N
(   contents of the XML element using BNF \(i.e., to further restrict the) N
(   values of a PCDATA element\).) N
() N
(   A protected property is one that cannot be changed with a PROPPATCH) N
(   request.  There may be other requests that would result in a change) N
(   to a protected property \(as when a LOCK request affects the value of) N
(   DAV:lockdiscovery\).  Note that a given property could be protected on) N
(   one type of resource, but not protected on another type of resource.) N
() N
(   A computed property is one with a value defined in terms of a) N
(   computation \(based on the content and other properties of that) N
(   resource, or even of some other resource\).  A computed property is) N
(   always a protected property.) N
() N
(   COPY and MOVE behavior refers to local COPY and MOVE operations.) N
() N
(   For properties defined based on HTTP GET response headers \(DAV:get*\),) N
(   the header value could include LWS as defined in [RFC2616], Section) N
(   4.2.  Server implementors SHOULD strip LWS from these values before) N
(   using as WebDAV property values.) N
() N
(15.1.  creationdate Property) N
() N
(   Name:   creationdate) N
() N
(   Purpose:   Records the time and date the resource was created.) N
() N
(   Value:   date-time \(defined in [RFC3339], see the ABNF in Section) N
(      5.6.\)) N
() N
(   Protected:   MAY be protected.  Some servers allow DAV:creationdate) N
(      to be changed to reflect the time the document was created if that) N
(      is more meaningful to the user \(rather than the time it was) N
(      uploaded\).  Thus, clients SHOULD NOT use this property in) N
(      synchronization logic \(use DAV:getetag instead\).) N
() N
(   COPY/MOVE behavior:   This property value SHOULD be kept during a) N
(      MOVE operation, but is normally re-initialized when a resource is) N
(      created with a COPY.  It should not be set in a COPY.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 90]) N
() N
(rfc4918.txt) (Page 90/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (45/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (91-92) 46
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Description:   The DAV:creationdate property SHOULD be defined on all) N
(      DAV compliant resources.  If present, it contains a timestamp of) N
(      the moment when the resource was created.  Servers that are) N
(      incapable of persistently recording the creation date SHOULD) N
(      instead leave it undefined \(i.e. report "Not Found"\).) N
() N
(   <!ELEMENT creationdate \(#PCDATA\) >) N
() N
(15.2.  displayname Property) N
() N
(   Name:   displayname) N
() N
(   Purpose:   Provides a name for the resource that is suitable for) N
(      presentation to a user.) N
() N
(   Value:   Any text.) N
() N
(   Protected:   SHOULD NOT be protected.  Note that servers implementing) N
(      [RFC2518] might have made this a protected property as this is a) N
(      new requirement.) N
() N
(   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY) N
(      and MOVE operations.) N
() N
(   Description:   Contains a description of the resource that is) N
(      suitable for presentation to a user.  This property is defined on) N
(      the resource, and hence SHOULD have the same value independent of) N
(      the Request-URI used to retrieve it \(thus, computing this property) N
(      based on the Request-URI is deprecated\).  While generic clients) N
(      might display the property value to end users, client UI designers) N
(      must understand that the method for identifying resources is still) N
(      the URL.  Changes to DAV:displayname do not issue moves or copies) N
(      to the server, but simply change a piece of meta-data on the) N
(      individual resource.  Two resources can have the same DAV:) N
(      displayname value even within the same collection.) N
() N
(   <!ELEMENT displayname \(#PCDATA\) >) N
() N
(15.3.  getcontentlanguage Property) N
() N
(   Name:   getcontentlanguage) N
() N
(   Purpose:   Contains the Content-Language header value \(from Section) N
(      14.12 of [RFC2616]\) as it would be returned by a GET without) N
(      accept headers.) N
() N
(   Value:   language-tag \(language-tag is defined in Section 3.10 of) N
(      [RFC2616]\)) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 91]) N
() N
(rfc4918.txt) (Page 91/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Protected:   SHOULD NOT be protected, so that clients can reset the) N
(      language.  Note that servers implementing [RFC2518] might have) N
(      made this a protected property as this is a new requirement.) N
() N
(   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY) N
(      and MOVE operations.) N
() N
(   Description:   The DAV:getcontentlanguage property MUST be defined on) N
(      any DAV-compliant resource that returns the Content-Language) N
(      header on a GET.) N
() N
(   <!ELEMENT getcontentlanguage \(#PCDATA\) >) N
() N
(15.4.  getcontentlength Property) N
() N
(   Name:   getcontentlength) N
() N
(   Purpose:   Contains the Content-Length header returned by a GET) N
(      without accept headers.) N
() N
(   Value:   See Section 14.13 of [RFC2616].) N
() N
(   Protected:   This property is computed, therefore protected.) N
() N
(   Description:   The DAV:getcontentlength property MUST be defined on) N
(      any DAV-compliant resource that returns the Content-Length header) N
(      in response to a GET.) N
() N
(   COPY/MOVE behavior:   This property value is dependent on the size of) N
(      the destination resource, not the value of the property on the) N
(      source resource.) N
() N
(   <!ELEMENT getcontentlength \(#PCDATA\) >) N
() N
(15.5.  getcontenttype Property) N
() N
(   Name:   getcontenttype) N
() N
(   Purpose:   Contains the Content-Type header value \(from Section 14.17) N
(      of [RFC2616]\) as it would be returned by a GET without accept) N
(      headers.) N
() N
(   Value:   media-type \(defined in Section 3.7 of [RFC2616]\)) N
() N
(   Protected:   Potentially protected if the server prefers to assign) N
(      content types on its own \(see also discussion in Section 9.7.1\).) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 92]) N
() N
(rfc4918.txt) (Page 92/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (46/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (93-94) 47
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   COPY/MOVE behavior:   This property value SHOULD be preserved in COPY) N
(      and MOVE operations.) N
() N
(   Description:   This property MUST be defined on any DAV-compliant) N
(      resource that returns the Content-Type header in response to a) N
(      GET.) N
() N
(   <!ELEMENT getcontenttype \(#PCDATA\) >) N
() N
(15.6.  getetag Property) N
() N
(   Name:   getetag) N
() N
(   Purpose:   Contains the ETag header value \(from Section 14.19 of) N
(      [RFC2616]\) as it would be returned by a GET without accept) N
(      headers.) N
() N
(   Value:   entity-tag \(defined in Section 3.11 of [RFC2616]\)) N
() N
(   Protected:  MUST be protected because this value is created and) N
(      controlled by the server.) N
() N
(   COPY/MOVE behavior:   This property value is dependent on the final) N
(      state of the destination resource, not the value of the property) N
(      on the source resource.  Also note the considerations in) N
(      Section 8.8.) N
() N
(   Description:   The getetag property MUST be defined on any DAV-) N
(      compliant resource that returns the Etag header.  Refer to Section) N
(      3.11 of RFC 2616 for a complete definition of the semantics of an) N
(      ETag, and to Section 8.6 for a discussion of ETags in WebDAV.) N
() N
(   <!ELEMENT getetag \(#PCDATA\) >) N
() N
(15.7.  getlastmodified Property) N
() N
(   Name:   getlastmodified) N
() N
(   Purpose:   Contains the Last-Modified header value \(from Section) N
(      14.29 of [RFC2616]\) as it would be returned by a GET method) N
(      without accept headers.) N
() N
(   Value:   rfc1123-date \(defined in Section 3.3.1 of [RFC2616]\)) N
() N
(   Protected:   SHOULD be protected because some clients may rely on the) N
(      value for appropriate caching behavior, or on the value of the) N
(      Last-Modified header to which this property is linked.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 93]) N
() N
(rfc4918.txt) (Page 93/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   COPY/MOVE behavior:   This property value is dependent on the last) N
(      modified date of the destination resource, not the value of the) N
(      property on the source resource.  Note that some server) N
(      implementations use the file system date modified value for the) N
(      DAV:getlastmodified value, and this can be preserved in a MOVE) N
(      even when the HTTP Last-Modified value SHOULD change.  Note that) N
(      since [RFC2616] requires clients to use ETags where provided, a) N
(      server implementing ETags can count on clients using a much better) N
(      mechanism than modification dates for offline synchronization or) N
(      cache control.  Also note the considerations in Section 8.8.) N
() N
(   Description:   The last-modified date on a resource SHOULD only) N
(      reflect changes in the body \(the GET responses\) of the resource.) N
(      A change in a property only SHOULD NOT cause the last-modified) N
(      date to change, because clients MAY rely on the last-modified date) N
(      to know when to overwrite the existing body.  The DAV:) N
(      getlastmodified property MUST be defined on any DAV-compliant) N
(      resource that returns the Last-Modified header in response to a) N
(      GET.) N
() N
(   <!ELEMENT getlastmodified \(#PCDATA\) >) N
() N
(15.8.  lockdiscovery Property) N
() N
(   Name:   lockdiscovery) N
() N
(   Purpose:   Describes the active locks on a resource) N
() N
(   Protected:   MUST be protected.  Clients change the list of locks) N
(      through LOCK and UNLOCK, not through PROPPATCH.) N
() N
(   COPY/MOVE behavior:   The value of this property depends on the lock) N
(      state of the destination, not on the locks of the source resource.) N
(      Recall that locks are not moved in a MOVE operation.) N
() N
(   Description:   Returns a listing of who has a lock, what type of lock) N
(      he has, the timeout type and the time remaining on the timeout,) N
(      and the associated lock token.  Owner information MAY be omitted) N
(      if it is considered sensitive.  If there are no locks, but the) N
(      server supports locks, the property will be present but contain) N
(      zero 'activelock' elements.  If there are one or more locks, an) N
(      'activelock' element appears for each lock on the resource.  This) N
(      property is NOT lockable with respect to write locks \(Section 7\).) N
() N
(   <!ELEMENT lockdiscovery \(activelock\)* >) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 94]) N
() N
(rfc4918.txt) (Page 94/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (47/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (95-96) 48
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(15.8.1.  Example - Retrieving DAV:lockdiscovery) N
() N
(   >>Request) N
() N
(     PROPFIND /container/ HTTP/1.1) N
(     Host: www.example.com) N
(     Content-Length: xxxx) N
(     Content-Type: application/xml; charset="utf-8") N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:propfind xmlns:D='DAV:'>) N
(       <D:prop><D:lockdiscovery/></D:prop>) N
(     </D:propfind>) N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:multistatus xmlns:D='DAV:'>) N
(       <D:response>) N
(         <D:href>http://www.example.com/container/</D:href>) N
(         <D:propstat>) N
(           <D:prop>) N
(             <D:lockdiscovery>) N
(              <D:activelock>) N
(               <D:locktype><D:write/></D:locktype>) N
(               <D:lockscope><D:exclusive/></D:lockscope>) N
(               <D:depth>0</D:depth>) N
(               <D:owner>Jane Smith</D:owner>) N
(               <D:timeout>Infinite</D:timeout>) N
(               <D:locktoken>) N
(                 <D:href) N
(             >urn:uuid:f81de2ad-7f3d-a1b2-4f3c-00a0c91a9d76</D:href>) N
(               </D:locktoken>) N
(               <D:lockroot>) N
(                 <D:href>http://www.example.com/container/</D:href>) N
(               </D:lockroot>) N
(              </D:activelock>) N
(             </D:lockdiscovery>) N
(           </D:prop>) N
(           <D:status>HTTP/1.1 200 OK</D:status>) N
(         </D:propstat>) N
(       </D:response>) N
(     </D:multistatus>) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 95]) N
() N
(rfc4918.txt) (Page 95/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   This resource has a single exclusive write lock on it, with an) N
(   infinite timeout.) N
() N
(15.9.  resourcetype Property) N
() N
(   Name:   resourcetype) N
() N
(   Purpose:   Specifies the nature of the resource.) N
() N
(   Protected:   SHOULD be protected.  Resource type is generally decided) N
(      through the operation creating the resource \(MKCOL vs PUT\), not by) N
(      PROPPATCH.) N
() N
(   COPY/MOVE behavior:   Generally a COPY/MOVE of a resource results in) N
(      the same type of resource at the destination.) N
() N
(   Description:   MUST be defined on all DAV-compliant resources.  Each) N
(      child element identifies a specific type the resource belongs to,) N
(      such as 'collection', which is the only resource type defined by) N
(      this specification \(see Section 14.3\).  If the element contains) N
(      the 'collection' child element plus additional unrecognized) N
(      elements, it should generally be treated as a collection.  If the) N
(      element contains no recognized child elements, it should be) N
(      treated as a non-collection resource.  The default value is empty.) N
(      This element MUST NOT contain text or mixed content.  Any custom) N
(      child element is considered to be an identifier for a resource) N
(      type.) N
() N
(   Example: \(fictional example to show extensibility\)) N
() N
(       <x:resourcetype xmlns:x="DAV:">) N
(           <x:collection/>) N
(           <f:search-results xmlns:f="http://www.example.com/ns"/>) N
(       </x:resourcetype>) N
() N
(15.10.  supportedlock Property) N
() N
(   Name:   supportedlock) N
() N
(   Purpose:   To provide a listing of the lock capabilities supported by) N
(      the resource.) N
() N
(   Protected:   MUST be protected.  Servers, not clients, determine what) N
(      lock mechanisms are supported.) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 96]) N
() N
(rfc4918.txt) (Page 96/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (48/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (97-98) 49
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   COPY/MOVE behavior:   This property value is dependent on the kind of) N
(      locks supported at the destination, not on the value of the) N
(      property at the source resource.  Servers attempting to COPY to a) N
(      destination should not attempt to set this property at the) N
(      destination.) N
() N
(   Description:   Returns a listing of the combinations of scope and) N
(      access types that may be specified in a lock request on the) N
(      resource.  Note that the actual contents are themselves controlled) N
(      by access controls, so a server is not required to provide) N
(      information the client is not authorized to see.  This property is) N
(      NOT lockable with respect to write locks \(Section 7\).) N
() N
(   <!ELEMENT supportedlock \(lockentry\)* >) N
() N
(15.10.1.  Example - Retrieving DAV:supportedlock) N
() N
(   >>Request) N
() N
(     PROPFIND /container/ HTTP/1.1) N
(     Host: www.example.com) N
(     Content-Length: xxxx) N
(     Content-Type: application/xml; charset="utf-8") N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:propfind xmlns:D="DAV:">) N
(       <D:prop><D:supportedlock/></D:prop>) N
(     </D:propfind>) N
() N
(   >>Response) N
() N
(     HTTP/1.1 207 Multi-Status) N
(     Content-Type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     <?xml version="1.0" encoding="utf-8" ?>) N
(     <D:multistatus xmlns:D="DAV:">) N
(       <D:response>) N
(         <D:href>http://www.example.com/container/</D:href>) N
(         <D:propstat>) N
(           <D:prop>) N
(             <D:supportedlock>) N
(               <D:lockentry>) N
(                 <D:lockscope><D:exclusive/></D:lockscope>) N
(                 <D:locktype><D:write/></D:locktype>) N
(               </D:lockentry>) N
(               <D:lockentry>) N
(                 <D:lockscope><D:shared/></D:lockscope>) N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 97]) N
() N
(rfc4918.txt) (Page 97/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(                 <D:locktype><D:write/></D:locktype>) N
(               </D:lockentry>) N
(             </D:supportedlock>) N
(           </D:prop>) N
(           <D:status>HTTP/1.1 200 OK</D:status>) N
(         </D:propstat>) N
(       </D:response>) N
(     </D:multistatus>) N
() N
(16.  Precondition/Postcondition XML Elements) N
() N
(   As introduced in Section 8.7, extra information on error conditions) N
(   can be included in the body of many status responses.  This section) N
(   makes requirements on the use of the error body mechanism and) N
(   introduces a number of precondition and postcondition codes.) N
() N
(   A "precondition" of a method describes the state of the server that) N
(   must be true for that method to be performed.  A "postcondition" of a) N
(   method describes the state of the server that must be true after that) N
(   method has been completed.) N
() N
(   Each precondition and postcondition has a unique XML element) N
(   associated with it.  In a 207 Multi-Status response, the XML element) N
(   MUST appear inside an 'error' element in the appropriate 'propstat or) N
(   'response' element depending on whether the condition applies to one) N
(   or more properties or to the resource as a whole.  In all other error) N
(   responses where this specification's 'error' body is used, the) N
(   precondition/postcondition XML element MUST be returned as the child) N
(   of a top-level 'error' element in the response body, unless otherwise) N
(   negotiated by the request, along with an appropriate response status.) N
(   The most common response status codes are 403 \(Forbidden\) if the) N
(   request should not be repeated because it will always fail, and 409) N
(   \(Conflict\) if it is expected that the user might be able to resolve) N
(   the conflict and resubmit the request.  The 'error' element MAY) N
(   contain child elements with specific error information and MAY be) N
(   extended with any custom child elements.) N
() N
(   This mechanism does not take the place of using a correct numeric) N
(   status code as defined here or in HTTP, because the client must) N
(   always be able to take a reasonable course of action based only on) N
(   the numeric code.  However, it does remove the need to define new) N
(   numeric codes.  The new machine-readable codes used for this purpose) N
(   are XML elements classified as preconditions and postconditions, so) N
(   naturally, any group defining a new condition code can use their own) N
(   namespace.  As always, the "DAV:" namespace is reserved for use by) N
(   IETF-chartered WebDAV working groups.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 98]) N
() N
(rfc4918.txt) (Page 98/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (49/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (99-100) 50
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   A server supporting this specification SHOULD use the XML error) N
(   whenever a precondition or postcondition defined in this document is) N
(   violated.  For error conditions not specified in this document, the) N
(   server MAY simply choose an appropriate numeric status and leave the) N
(   response body blank.  However, a server MAY instead use a custom) N
(   condition code and other supporting text, because even when clients) N
(   do not automatically recognize condition codes, they can be quite) N
(   useful in interoperability testing and debugging.) N
() N
(   Example - Response with precondition code) N
() N
(   >>Response) N
() N
(      HTTP/1.1 423 Locked) N
(      Content-Type: application/xml; charset="utf-8") N
(      Content-Length: xxxx) N
() N
(      <?xml version="1.0" encoding="utf-8" ?>) N
(      <D:error xmlns:D="DAV:">) N
(        <D:lock-token-submitted>) N
(          <D:href>/workspace/webdav/</D:href>) N
(        </D:lock-token-submitted>) N
(      </D:error>) N
() N
(   In this example, a client unaware of a depth-infinity lock on the) N
(   parent collection "/workspace/webdav/" attempted to modify the) N
(   collection member "/workspace/webdav/proposal.doc".) N
() N
(   Some other useful preconditions and postconditions have been defined) N
(   in other specifications extending WebDAV, such as [RFC3744] \(see) N
(   particularly Section 7.1.1\), [RFC3253], and [RFC3648].) N
() N
(   All these elements are in the "DAV:" namespace.  If not specified) N
(   otherwise, the content for each condition's XML element is defined to) N
(   be empty.) N
() N
() N
(   Name:  lock-token-matches-request-uri) N
() N
(   Use with:  409 Conflict) N
() N
(   Purpose:  \(precondition\) -- A request may include a Lock-Token header) N
(      to identify a lock for the UNLOCK method.  However, if the) N
(      Request-URI does not fall within the scope of the lock identified) N
(      by the token, the server SHOULD use this error.  The lock may have) N
(      a scope that does not include the Request-URI, or the lock could) N
(      have disappeared, or the token may be invalid.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                    [Page 99]) N
() N
(rfc4918.txt) (Page 99/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Name:  lock-token-submitted \(precondition\)) N
() N
(   Use with:  423 Locked) N
() N
(   Purpose:  The request could not succeed because a lock token should) N
(      have been submitted.  This element, if present, MUST contain at) N
(      least one URL of a locked resource that prevented the request.  In) N
(      cases of MOVE, COPY, and DELETE where collection locks are) N
(      involved, it can be difficult for the client to find out which) N
(      locked resource made the request fail -- but the server is only) N
(      responsible for returning one such locked resource.  The server) N
(      MAY return every locked resource that prevented the request from) N
(      succeeding if it knows them all.) N
() N
(   <!ELEMENT lock-token-submitted \(href+\) >) N
() N
() N
(   Name:  no-conflicting-lock \(precondition\)) N
() N
(   Use with:  Typically 423 Locked) N
() N
(   Purpose:  A LOCK request failed due the presence of an already) N
(      existing conflicting lock.  Note that a lock can be in conflict) N
(      although the resource to which the request was directed is only) N
(      indirectly locked.  In this case, the precondition code can be) N
(      used to inform the client about the resource that is the root of) N
(      the conflicting lock, avoiding a separate lookup of the) N
(      "lockdiscovery" property.) N
() N
(   <!ELEMENT no-conflicting-lock \(href\)* >) N
() N
() N
(   Name:  no-external-entities) N
() N
(   Use with:  403 Forbidden) N
() N
(   Purpose:  \(precondition\) -- If the server rejects a client request) N
(      because the request body contains an external entity, the server) N
(      SHOULD use this error.) N
() N
() N
(   Name:  preserved-live-properties) N
() N
(   Use with:  409 Conflict) N
() N
(   Purpose:  \(postcondition\) -- The server received an otherwise-valid) N
(      MOVE or COPY request, but cannot maintain the live properties with) N
(      the same behavior at the destination.  It may be that the server) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 100]) N
() N
(rfc4918.txt) (Page 100/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (50/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (101-102) 51
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(      only supports some live properties in some parts of the) N
(      repository, or simply has an internal error.) N
() N
() N
(   Name:  propfind-finite-depth) N
() N
(   Use with:  403 Forbidden) N
() N
(   Purpose:  \(precondition\) -- This server does not allow infinite-depth) N
(      PROPFIND requests on collections.) N
() N
() N
(   Name:  cannot-modify-protected-property) N
() N
(   Use with:  403 Forbidden) N
() N
(   Purpose:  \(precondition\) -- The client attempted to set a protected) N
(      property in a PROPPATCH \(such as DAV:getetag\).  See also) N
(      [RFC3253], Section 3.12.) N
() N
(17.  XML Extensibility in DAV) N
() N
(   The XML namespace extension \([REC-XML-NAMES]\) is used in this) N
(   specification in order to allow for new XML elements to be added) N
(   without fear of colliding with other element names.  Although WebDAV) N
(   request and response bodies can be extended by arbitrary XML) N
(   elements, which can be ignored by the message recipient, an XML) N
(   element in the "DAV:" namespace SHOULD NOT be used in the request or) N
(   response body unless that XML element is explicitly defined in an) N
(   IETF RFC reviewed by a WebDAV working group.) N
() N
(   For WebDAV to be both extensible and backwards-compatible, both) N
(   clients and servers need to know how to behave when unexpected or) N
(   unrecognized command extensions are received.  For XML processing,) N
(   this means that clients and servers MUST process received XML) N
(   documents as if unexpected elements and attributes \(and all children) N
(   of unrecognized elements\) were not there.  An unexpected element or) N
(   attribute includes one that may be used in another context but is not) N
(   expected here.  Ignoring such items for purposes of processing can of) N
(   course be consistent with logging all information or presenting for) N
(   debugging.) N
() N
(   This restriction also applies to the processing, by clients, of DAV) N
(   property values where unexpected XML elements SHOULD be ignored) N
(   unless the property's schema declares otherwise.) N
() N
(   This restriction does not apply to setting dead DAV properties on the) N
(   server where the server MUST record all XML elements.) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 101]) N
() N
(rfc4918.txt) (Page 101/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Additionally, this restriction does not apply to the use of XML where) N
(   XML happens to be the content type of the entity body, for example,) N
(   when used as the body of a PUT.) N
() N
(   Processing instructions in XML SHOULD be ignored by recipients.) N
(   Thus, specifications extending WebDAV SHOULD NOT use processing) N
(   instructions to define normative behavior.) N
() N
(   XML DTD fragments are included for all the XML elements defined in) N
(   this specification.  However, correct XML will not be valid according) N
(   to any DTD due to namespace usage and extension rules.  In) N
(   particular:) N
() N
(   o  Elements \(from this specification\) are in the "DAV:" namespace,) N
() N
(   o  Element ordering is irrelevant unless otherwise stated,) N
() N
(   o  Extension attributes MAY be added,) N
() N
(   o  For element type definitions of "ANY", the normative text) N
(      definition for that element defines what can be in it and what) N
(      that means.) N
() N
(   o  For element type definitions of "#PCDATA", extension elements MUST) N
(      NOT be added.) N
() N
(   o  For other element type definitions, including "EMPTY", extension) N
(      elements MAY be added.) N
() N
(   Note that this means that elements containing elements cannot be) N
(   extended to contain text, and vice versa.) N
() N
(   With DTD validation relaxed by the rules above, the constraints) N
(   described by the DTD fragments are normative \(see for example) N
(   Appendix A\).  A recipient of a WebDAV message with an XML body MUST) N
(   NOT validate the XML document according to any hard-coded or) N
(   dynamically-declared DTD.) N
() N
(   Note that this section describes backwards-compatible extensibility) N
(   rules.  There might also be times when an extension is designed not) N
(   to be backwards-compatible, for example, defining an extension that) N
(   reuses an XML element defined in this document but omitting one of) N
(   the child elements required by the DTDs in this specification.) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 102]) N
() N
(rfc4918.txt) (Page 102/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (51/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (103-104) 52
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(18.  DAV Compliance Classes) N
() N
(   A DAV-compliant resource can advertise several classes of compliance.) N
(   A client can discover the compliance classes of a resource by) N
(   executing OPTIONS on the resource and examining the "DAV" header) N
(   which is returned.  Note particularly that resources, rather than) N
(   servers, are spoken of as being compliant.  That is because) N
(   theoretically some resources on a server could support different) N
(   feature sets.  For example, a server could have a sub-repository) N
(   where an advanced feature like versioning was supported, even if that) N
(   feature was not supported on all sub-repositories.) N
() N
(   Since this document describes extensions to the HTTP/1.1 protocol,) N
(   minimally all DAV-compliant resources, clients, and proxies MUST be) N
(   compliant with [RFC2616].) N
() N
(   A resource that is class 2 or class 3 compliant must also be class 1) N
(   compliant.) N
() N
(18.1.  Class 1) N
() N
(   A class 1 compliant resource MUST meet all "MUST" requirements in all) N
(   sections of this document.) N
() N
(   Class 1 compliant resources MUST return, at minimum, the value "1" in) N
(   the DAV header on all responses to the OPTIONS method.) N
() N
(18.2.  Class 2) N
() N
(   A class 2 compliant resource MUST meet all class 1 requirements and) N
(   support the LOCK method, the DAV:supportedlock property, the DAV:) N
(   lockdiscovery property, the Time-Out response header and the Lock-) N
(   Token request header.  A class 2 compliant resource SHOULD also) N
(   support the Timeout request header and the 'owner' XML element.) N
() N
(   Class 2 compliant resources MUST return, at minimum, the values "1") N
(   and "2" in the DAV header on all responses to the OPTIONS method.) N
() N
(18.3.  Class 3) N
() N
(   A resource can explicitly advertise its support for the revisions to) N
(   [RFC2518] made in this document.  Class 1 MUST be supported as well.) N
(   Class 2 MAY be supported.  Advertising class 3 support in addition to) N
(   class 1 and 2 means that the server supports all the requirements in) N
(   this specification.  Advertising class 3 and class 1 support, but not) N
(   class 2, means that the server supports all the requirements in this) N
(   specification except possibly those that involve locking support.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 103]) N
() N
(rfc4918.txt) (Page 103/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Example:) N
() N
(            DAV: 1, 3) N
() N
(19.  Internationalization Considerations) N
() N
(   In the realm of internationalization, this specification complies) N
(   with the IETF Character Set Policy [RFC2277].  In this specification,) N
(   human-readable fields can be found either in the value of a property,) N
(   or in an error message returned in a response entity body.  In both) N
(   cases, the human-readable content is encoded using XML, which has) N
(   explicit provisions for character set tagging and encoding, and) N
(   requires that XML processors read XML elements encoded, at minimum,) N
(   using the UTF-8 [RFC3629] and UTF-16 [RFC2781] encodings of the ISO) N
(   10646 multilingual plane.  XML examples in this specification) N
(   demonstrate use of the charset parameter of the Content-Type header) N
(   \(defined in [RFC3023]\), as well as XML charset declarations.) N
() N
(   XML also provides a language tagging capability for specifying the) N
(   language of the contents of a particular XML element.  The "xml:lang") N
(   attribute appears on an XML element to identify the language of its) N
(   content and attributes.  See [REC-XML] for definitions of values and) N
(   scoping.) N
() N
(   WebDAV applications MUST support the character set tagging, character) N
(   set encoding, and the language tagging functionality of the XML) N
(   specification.  Implementors of WebDAV applications are strongly) N
(   encouraged to read "XML Media Types" [RFC3023] for instruction on) N
(   which MIME media type to use for XML transport, and on use of the) N
(   charset parameter of the Content-Type header.) N
() N
(   Names used within this specification fall into four categories: names) N
(   of protocol elements such as methods and headers, names of XML) N
(   elements, names of properties, and names of conditions.  Naming of) N
(   protocol elements follows the precedent of HTTP, using English names) N
(   encoded in US-ASCII for methods and headers.  Since these protocol) N
(   elements are not visible to users, and are simply long token) N
(   identifiers, they do not need to support multiple languages.) N
(   Similarly, the names of XML elements used in this specification are) N
(   not visible to the user and hence do not need to support multiple) N
(   languages.) N
() N
(   WebDAV property names are qualified XML names \(pairs of XML namespace) N
(   name and local name\).  Although some applications \(e.g., a generic) N
(   property viewer\) will display property names directly to their users,) N
(   it is expected that the typical application will use a fixed set of) N
(   properties, and will provide a mapping from the property name and) N
(   namespace to a human-readable field when displaying the property name) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 104]) N
() N
(rfc4918.txt) (Page 104/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (52/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (105-106) 53
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   to a user.  It is only in the case where the set of properties is not) N
(   known ahead of time that an application need display a property name) N
(   to a user.  We recommend that applications provide human-readable) N
(   property names wherever feasible.) N
() N
(   For error reporting, we follow the convention of HTTP/1.1 status) N
(   codes, including with each status code a short, English description) N
(   of the code \(e.g., 423 \(Locked\)\).  While the possibility exists that) N
(   a poorly crafted user agent would display this message to a user,) N
(   internationalized applications will ignore this message, and display) N
(   an appropriate message in the user's language and character set.) N
() N
(   Since interoperation of clients and servers does not require locale) N
(   information, this specification does not specify any mechanism for) N
(   transmission of this information.) N
() N
(20.  Security Considerations) N
() N
(   This section is provided to detail issues concerning security) N
(   implications of which WebDAV applications need to be aware.) N
() N
(   All of the security considerations of HTTP/1.1 \(discussed in) N
(   [RFC2616]\) and XML \(discussed in [RFC3023]\) also apply to WebDAV.  In) N
(   addition, the security risks inherent in remote authoring require) N
(   stronger authentication technology, introduce several new privacy) N
(   concerns, and may increase the hazards from poor server design.) N
(   These issues are detailed below.) N
() N
(20.1.  Authentication of Clients) N
() N
(   Due to their emphasis on authoring, WebDAV servers need to use) N
(   authentication technology to protect not just access to a network) N
(   resource, but the integrity of the resource as well.  Furthermore,) N
(   the introduction of locking functionality requires support for) N
(   authentication.) N
() N
(   A password sent in the clear over an insecure channel is an) N
(   inadequate means for protecting the accessibility and integrity of a) N
(   resource as the password may be intercepted.  Since Basic) N
(   authentication for HTTP/1.1 performs essentially clear text) N
(   transmission of a password, Basic authentication MUST NOT be used to) N
(   authenticate a WebDAV client to a server unless the connection is) N
(   secure.  Furthermore, a WebDAV server MUST NOT send a Basic) N
(   authentication challenge in a WWW-Authenticate header unless the) N
(   connection is secure.  An example of a secure connection would be a) N
(   Transport Layer Security \(TLS\) connection employing a strong cipher) N
(   suite and server authentication.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 105]) N
() N
(rfc4918.txt) (Page 105/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   WebDAV applications MUST support the Digest authentication scheme) N
(   [RFC2617].  Since Digest authentication verifies that both parties to) N
(   a communication know a shared secret, a password, without having to) N
(   send that secret in the clear, Digest authentication avoids the) N
(   security problems inherent in Basic authentication while providing a) N
(   level of authentication that is useful in a wide range of scenarios.) N
() N
(20.2.  Denial of Service) N
() N
(   Denial-of-service attacks are of special concern to WebDAV servers.) N
(   WebDAV plus HTTP enables denial-of-service attacks on every part of a) N
(   system's resources.) N
() N
(   o  The underlying storage can be attacked by PUTting extremely large) N
(      files.) N
() N
(   o  Asking for recursive operations on large collections can attack) N
(      processing time.) N
() N
(   o  Making multiple pipelined requests on multiple connections can) N
(      attack network connections.) N
() N
(   WebDAV servers need to be aware of the possibility of a denial-of-) N
(   service attack at all levels.  The proper response to such an attack) N
(   MAY be to simply drop the connection.  Or, if the server is able to) N
(   make a response, the server MAY use a 400-level status request such) N
(   as 400 \(Bad Request\) and indicate why the request was refused \(a 500-) N
(   level status response would indicate that the problem is with the) N
(   server, whereas unintentional DoS attacks are something the client is) N
(   capable of remedying\).) N
() N
(20.3.  Security through Obscurity) N
() N
(   WebDAV provides, through the PROPFIND method, a mechanism for listing) N
(   the member resources of a collection.  This greatly diminishes the) N
(   effectiveness of security or privacy techniques that rely only on the) N
(   difficulty of discovering the names of network resources.  Users of) N
(   WebDAV servers are encouraged to use access control techniques to) N
(   prevent unwanted access to resources, rather than depending on the) N
(   relative obscurity of their resource names.) N
() N
(20.4.  Privacy Issues Connected to Locks) N
() N
(   When submitting a lock request, a user agent may also submit an) N
(   'owner' XML field giving contact information for the person taking) N
(   out the lock \(for those cases where a person, rather than a robot, is) N
(   taking out the lock\).  This contact information is stored in a DAV:) N
(   lockdiscovery property on the resource, and can be used by other) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 106]) N
() N
(rfc4918.txt) (Page 106/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (53/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (107-108) 54
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   collaborators to begin negotiation over access to the resource.) N
(   However, in many cases, this contact information can be very private,) N
(   and should not be widely disseminated.  Servers SHOULD limit read) N
(   access to the DAV:lockdiscovery property as appropriate.) N
(   Furthermore, user agents SHOULD provide control over whether contact) N
(   information is sent at all, and if contact information is sent,) N
(   control over exactly what information is sent.) N
() N
(20.5.  Privacy Issues Connected to Properties) N
() N
(   Since property values are typically used to hold information such as) N
(   the author of a document, there is the possibility that privacy) N
(   concerns could arise stemming from widespread access to a resource's) N
(   property data.  To reduce the risk of inadvertent release of private) N
(   information via properties, servers are encouraged to develop access) N
(   control mechanisms that separate read access to the resource body and) N
(   read access to the resource's properties.  This allows a user to) N
(   control the dissemination of their property data without overly) N
(   restricting access to the resource's contents.) N
() N
(20.6.  Implications of XML Entities) N
() N
(   XML supports a facility known as "external entities", defined in) N
(   Section 4.2.2 of [REC-XML], which instructs an XML processor to) N
(   retrieve and include additional XML.  An external XML entity can be) N
(   used to append or modify the document type declaration \(DTD\)) N
(   associated with an XML document.  An external XML entity can also be) N
(   used to include XML within the content of an XML document.  For non-) N
(   validating XML, such as the XML used in this specification, including) N
(   an external XML entity is not required by XML.  However, XML does) N
(   state that an XML processor may, at its discretion, include the) N
(   external XML entity.) N
() N
(   External XML entities have no inherent trustworthiness and are) N
(   subject to all the attacks that are endemic to any HTTP GET request.) N
(   Furthermore, it is possible for an external XML entity to modify the) N
(   DTD, and hence affect the final form of an XML document, in the worst) N
(   case, significantly modifying its semantics or exposing the XML) N
(   processor to the security risks discussed in [RFC3023].  Therefore,) N
(   implementers must be aware that external XML entities should be) N
(   treated as untrustworthy.  If a server chooses not to handle external) N
(   XML entities, it SHOULD respond to requests containing external) N
(   entities with the 'no-external-entities' condition code.) N
() N
(   There is also the scalability risk that would accompany a widely) N
(   deployed application that made use of external XML entities.  In this) N
(   situation, it is possible that there would be significant numbers of) N
(   requests for one external XML entity, potentially overloading any) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 107]) N
() N
(rfc4918.txt) (Page 107/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   server that fields requests for the resource containing the external) N
(   XML entity.) N
() N
(   Furthermore, there's also a risk based on the evaluation of "internal) N
(   entities" as defined in Section 4.2.2 of [REC-XML].  A small,) N
(   carefully crafted request using nested internal entities may require) N
(   enormous amounts of memory and/or processing time to process.  Server) N
(   implementers should be aware of this risk and configure their XML) N
(   parsers so that requests like these can be detected and rejected as) N
(   early as possible.) N
() N
(20.7.  Risks Connected with Lock Tokens) N
() N
(   This specification encourages the use of "A Universally Unique) N
(   Identifier \(UUID\) URN Namespace" \([RFC4122]\) for lock tokens) N
(   \(Section 6.5\), in order to guarantee their uniqueness across space) N
(   and time.  Version 1 UUIDs \(defined in Section 4\) MAY contain a) N
(   "node" field that "consists of an IEEE 802 MAC address, usually the) N
(   host address.  For systems with multiple IEEE addresses, any) N
(   available one can be used".  Since a WebDAV server will issue many) N
(   locks over its lifetime, the implication is that it may also be) N
(   publicly exposing its IEEE 802 address.) N
() N
(   There are several risks associated with exposure of IEEE 802) N
(   addresses.  Using the IEEE 802 address:) N
() N
(   o  It is possible to track the movement of hardware from subnet to) N
(      subnet.) N
() N
(   o  It may be possible to identify the manufacturer of the hardware) N
(      running a WebDAV server.) N
() N
(   o  It may be possible to determine the number of each type of) N
(      computer running WebDAV.) N
() N
(   This risk only applies to host-address-based UUID versions.  Section) N
(   4 of [RFC4122] describes several other mechanisms for generating) N
(   UUIDs that do not involve the host address and therefore do not) N
(   suffer from this risk.) N
() N
(20.8.  Hosting Malicious Content) N
() N
(   HTTP has the ability to host programs that are executed on client) N
(   machines.  These programs can take many forms including Web scripts,) N
(   executables, plug-in modules, and macros in documents.  WebDAV does) N
(   not change any of the security concerns around these programs, yet) N
(   often WebDAV is used in contexts where a wide range of users can) N
(   publish documents on a server.  The server might not have a close) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 108]) N
() N
(rfc4918.txt) (Page 108/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (54/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (109-110) 55
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   trust relationship with the author that is publishing the document.) N
(   Servers that allow clients to publish arbitrary content can usefully) N
(   implement precautions to check that content published to the server) N
(   is not harmful to other clients.  Servers could do this by techniques) N
(   such as restricting the types of content that is allowed to be) N
(   published and running virus and malware detection software on) N
(   published content.  Servers can also mitigate the risk by having) N
(   appropriate access restriction and authentication of users that are) N
(   allowed to publish content to the server.) N
() N
(21.  IANA Considerations) N
() N
(21.1.  New URI Schemes) N
() N
(   This specification defines two URI schemes:) N
() N
(   1.  the "opaquelocktoken" scheme defined in Appendix C, and) N
() N
(   2.  the "DAV" URI scheme, which historically was used in [RFC2518] to) N
(       disambiguate WebDAV property and XML element names and which) N
(       continues to be used for that purpose in this specification and) N
(       others extending WebDAV.  Creation of identifiers in the "DAV:") N
(       namespace is controlled by the IETF.) N
() N
(   Note that defining new URI schemes for XML namespaces is now) N
(   discouraged.  "DAV:" was defined before standard best practices) N
(   emerged.) N
() N
(21.2.  XML Namespaces) N
() N
(   XML namespaces disambiguate WebDAV property names and XML elements.) N
(   Any WebDAV user or application can define a new namespace in order to) N
(   create custom properties or extend WebDAV XML syntax.  IANA does not) N
(   need to manage such namespaces, property names, or element names.) N
() N
(21.3.  Message Header Fields) N
() N
(   The message header fields below should be added to the permanent) N
(   registry \(see [RFC3864]\).) N
() N
(21.3.1.  DAV) N
() N
(   Header field name: DAV) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 109]) N
() N
(rfc4918.txt) (Page 109/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.1\)) N
() N
(21.3.2.  Depth) N
() N
(   Header field name: Depth) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.2\)) N
() N
(21.3.3.  Destination) N
() N
(   Header field name: Destination) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.3\)) N
() N
(21.3.4.  If) N
() N
(   Header field name: If) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.4\)) N
() N
(21.3.5.  Lock-Token) N
() N
(   Header field name: Lock-Token) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 110]) N
() N
(rfc4918.txt) (Page 110/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (55/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (111-112) 56
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.5\)) N
() N
(21.3.6.  Overwrite) N
() N
(   Header field name: Overwrite) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.6\)) N
() N
(21.3.7.  Timeout) N
() N
(   Header field name: Timeout) N
() N
(   Applicable protocol: http) N
() N
(   Status: standard) N
() N
(   Author/Change controller: IETF) N
() N
(   Specification document: this specification \(Section 10.7\)) N
() N
(21.4.  HTTP Status Codes) N
() N
(   This specification defines the HTTP status codes) N
() N
(   o  207 Multi-Status \(Section 11.1\)) N
() N
(   o  422 Unprocessable Entity \(Section 11.2\),) N
() N
(   o  423 Locked \(Section 11.3\),) N
() N
(   o  424 Failed Dependency \(Section 11.4\) and) N
() N
(   o  507 Insufficient Storage \(Section 11.5\),) N
() N
(   to be updated in the registry at) N
(   <http://www.iana.org/assignments/http-status-codes>.) N
() N
(   Note: the HTTP status code 102 \(Processing\) has been removed in this) N
(   specification; its IANA registration should continue to reference RFC) N
(   2518.) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 111]) N
() N
(rfc4918.txt) (Page 111/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(22.  Acknowledgements) N
() N
(   A specification such as this thrives on piercing critical review and) N
(   withers from apathetic neglect.  The authors gratefully acknowledge) N
(   the contributions of the following people, whose insights were so) N
(   valuable at every stage of our work.) N
() N
(   Contributors to RFC 2518) N
() N
(   Terry Allen, Harald Alvestrand, Jim Amsden, Becky Anderson, Alan) N
(   Babich, Sanford Barr, Dylan Barrell, Bernard Chester, Tim Berners-) N
(   Lee, Dan Connolly, Jim Cunningham, Ron Daniel, Jr., Jim Davis, Keith) N
(   Dawson, Mark Day, Brian Deen, Martin Duerst, David Durand, Lee) N
(   Farrell, Chuck Fay, Wesley Felter, Roy Fielding, Mark Fisher, Alan) N
(   Freier, George Florentine, Jim Gettys, Phill Hallam-Baker, Dennis) N
(   Hamilton, Steve Henning, Mead Himelstein, Alex Hopmann, Andre van der) N
(   Hoek, Ben Laurie, Paul Leach, Ora Lassila, Karen MacArthur, Steven) N
(   Martin, Larry Masinter, Michael Mealling, Keith Moore, Thomas Narten,) N
(   Henrik Nielsen, Kenji Ota, Bob Parker, Glenn Peterson, Jon Radoff,) N
(   Saveen Reddy, Henry Sanders, Christopher Seiwald, Judith Slein, Mike) N
(   Spreitzer, Einar Stefferud, Greg Stein, Ralph Swick, Kenji Takahashi,) N
(   Richard N. Taylor, Robert Thau, John Turner, Sankar Virdhagriswaran,) N
(   Fabio Vitali, Gregory Woodhouse, and Lauren Wood.) N
() N
(   Two from this list deserve special mention.  The contributions by) N
(   Larry Masinter have been invaluable; he both helped the formation of) N
(   the working group and patiently coached the authors along the way.) N
(   In so many ways he has set high standards that we have toiled to) N
(   meet.  The contributions of Judith Slein were also invaluable; by) N
(   clarifying the requirements and in patiently reviewing version after) N
(   version, she both improved this specification and expanded our minds) N
(   on document management.) N
() N
(   We would also like to thank John Turner for developing the XML DTD.) N
() N
(   The authors of RFC 2518 were Yaron Goland, Jim Whitehead, A. Faizi,) N
(   Steve Carter, and D. Jensen.  Although their names had to be removed) N
(   due to IETF author count restrictions, they can take credit for the) N
(   majority of the design of WebDAV.) N
() N
(   Additional Acknowledgements for This Specification) N
() N
(   Significant contributors of text for this specification are listed as) N
(   contributors in the section below.  We must also gratefully) N
(   acknowledge Geoff Clemm, Joel Soderberg, and Dan Brotsky for hashing) N
(   out specific text on the list or in meetings.  Joe Hildebrand and) N
(   Cullen Jennings helped close many issues.  Barry Lind described an) N
(   additional security consideration and Cullen Jennings provided text) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 112]) N
() N
(rfc4918.txt) (Page 112/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (56/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (113-114) 57
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   for that consideration.  Jason Crawford tracked issue status for this) N
(   document for a period of years, followed by Elias Sinderson.) N
() N
(23.  Contributors to This Specification) N
() N
(   Julian Reschke) N
(   <green/>bytes GmbH) N
(   Hafenweg 16, 48155 Muenster, Germany) N
(   EMail: julian.reschke@greenbytes.de) N
() N
() N
(   Elias Sinderson) N
(   University of California, Santa Cruz) N
(   1156 High Street, Santa Cruz, CA 95064) N
(   EMail: elias@cse.ucsc.edu) N
() N
() N
(   Jim Whitehead) N
(   University of California, Santa Cruz) N
(   1156 High Street, Santa Cruz, CA 95064) N
(   EMail: ejw@soe.ucsc.edu) N
() N
(24.  Authors of RFC 2518) N
() N
(   Y. Y. Goland) N
(   Microsoft Corporation) N
(   One Microsoft Way) N
(   Redmond, WA 98052-6399) N
(   EMail: yarong@microsoft.com) N
() N
() N
(   E. J. Whitehead, Jr.) N
(   Dept. Of Information and Computer Science) N
(   University of California, Irvine) N
(   Irvine, CA 92697-3425) N
(   EMail: ejw@ics.uci.edu) N
() N
() N
(   A. Faizi) N
(   Netscape) N
(   685 East Middlefield Road) N
(   Mountain View, CA 94043) N
(   EMail: asad@netscape.com) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 113]) N
() N
(rfc4918.txt) (Page 113/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   S. R. Carter) N
(   Novell) N
(   1555 N. Technology Way) N
(   M/S ORM F111) N
(   Orem, UT 84097-2399) N
(   EMail: srcarter@novell.com) N
() N
() N
(   D. Jensen) N
(   Novell) N
(   1555 N. Technology Way) N
(   M/S ORM F111) N
(   Orem, UT 84097-2399) N
(   EMail: dcjensen@novell.com) N
() N
(25.  References) N
() N
(25.1.  Normative References) N
() N
(   [REC-XML]          Bray, T., Paoli, J., Sperberg-McQueen, C., Maler,) N
(                      E., and F. Yergeau, "Extensible Markup Language) N
(                      \(XML\) 1.0 \(Fourth Edition\)", W3C REC-xml-20060816,) N
(                      August 2006,) N
(                      <http://www.w3.org/TR/2006/REC-xml-20060816/>.) N
() N
(   [REC-XML-INFOSET]  Cowan, J. and R. Tobin, "XML Information Set) N
(                      \(Second Edition\)", W3C REC-xml-infoset-20040204,) N
(                      February 2004, <http://www.w3.org/TR/2004/) N
(                      REC-xml-infoset-20040204/>.) N
() N
(   [REC-XML-NAMES]    Bray, T., Hollander, D., Layman, A., and R. Tobin,) N
(                      "Namespaces in XML 1.0 \(Second Edition\)", W3C REC-) N
(                      xml-names-20060816, August 2006, <http://) N
(                      www.w3.org/TR/2006/REC-xml-names-20060816/>.) N
() N
(   [RFC2119]          Bradner, S., "Key words for use in RFCs to) N
(                      Indicate Requirement Levels", BCP 14, RFC 2119,) N
(                      March 1997.) N
() N
(   [RFC2277]          Alvestrand, H., "IETF Policy on Character Sets and) N
(                      Languages", BCP 18, RFC 2277, January 1998.) N
() N
(   [RFC2616]          Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,) N
(                      Masinter, L., Leach, P., and T. Berners-Lee,) N
(                      "Hypertext Transfer Protocol -- HTTP/1.1",) N
(                      RFC 2616, June 1999.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 114]) N
() N
(rfc4918.txt) (Page 114/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (57/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (115-116) 58
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   [RFC2617]          Franks, J., Hallam-Baker, P., Hostetler, J.,) N
(                      Lawrence, S., Leach, P., Luotonen, A., and L.) N
(                      Stewart, "HTTP Authentication: Basic and Digest) N
(                      Access Authentication", RFC 2617, June 1999.) N
() N
(   [RFC3339]          Klyne, G., Ed. and C. Newman, "Date and Time on) N
(                      the Internet: Timestamps", RFC 3339, July 2002.) N
() N
(   [RFC3629]          Yergeau, F., "UTF-8, a transformation format of) N
(                      ISO 10646", STD 63, RFC 3629, November 2003.) N
() N
(   [RFC3986]          Berners-Lee, T., Fielding, R., and L. Masinter,) N
(                      "Uniform Resource Identifier \(URI\): Generic) N
(                      Syntax", STD 66, RFC 3986, January 2005.) N
() N
(   [RFC4122]          Leach, P., Mealling, M., and R. Salz, "A) N
(                      Universally Unique IDentifier \(UUID\) URN) N
(                      Namespace", RFC 4122, July 2005.) N
() N
(25.2.  Informative References) N
() N
(   [RFC2291]          Slein, J., Vitali, F., Whitehead, E., and D.) N
(                      Durand, "Requirements for a Distributed Authoring) N
(                      and Versioning Protocol for the World Wide Web",) N
(                      RFC 2291, February 1998.) N
() N
(   [RFC2518]          Goland, Y., Whitehead, E., Faizi, A., Carter, S.,) N
(                      and D. Jensen, "HTTP Extensions for Distributed) N
(                      Authoring -- WEBDAV", RFC 2518, February 1999.) N
() N
(   [RFC2781]          Hoffman, P. and F. Yergeau, "UTF-16, an encoding) N
(                      of ISO 10646", RFC 2781, February 2000.) N
() N
(   [RFC3023]          Murata, M., St. Laurent, S., and D. Kohn, "XML) N
(                      Media Types", RFC 3023, January 2001.) N
() N
(   [RFC3253]          Clemm, G., Amsden, J., Ellison, T., Kaler, C., and) N
(                      J. Whitehead, "Versioning Extensions to WebDAV) N
(                      \(Web Distributed Authoring and Versioning\)",) N
(                      RFC 3253, March 2002.) N
() N
(   [RFC3648]          Whitehead, J. and J. Reschke, Ed., "Web) N
(                      Distributed Authoring and Versioning \(WebDAV\)) N
(                      Ordered Collections Protocol", RFC 3648,) N
(                      December 2003.) N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 115]) N
() N
(rfc4918.txt) (Page 115/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   [RFC3744]          Clemm, G., Reschke, J., Sedlar, E., and J.) N
(                      Whitehead, "Web Distributed Authoring and) N
(                      Versioning \(WebDAV\) Access Control Protocol",) N
(                      RFC 3744, May 2004.) N
() N
(   [RFC3864]          Klyne, G., Nottingham, M., and J. Mogul,) N
(                      "Registration Procedures for Message Header) N
(                      Fields", BCP 90, RFC 3864, September 2004.) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 116]) N
() N
(rfc4918.txt) (Page 116/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (58/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (117-118) 59
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(Appendix A.  Notes on Processing XML Elements) N
() N
(A.1.  Notes on Empty XML Elements) N
() N
(   XML supports two mechanisms for indicating that an XML element does) N
(   not have any content.  The first is to declare an XML element of the) N
(   form <A></A>.  The second is to declare an XML element of the form) N
(   <A/>.  The two XML elements are semantically identical.) N
() N
(A.2.  Notes on Illegal XML Processing) N
() N
(   XML is a flexible data format that makes it easy to submit data that) N
(   appears legal but in fact is not.  The philosophy of "Be flexible in) N
(   what you accept and strict in what you send" still applies, but it) N
(   must not be applied inappropriately.  XML is extremely flexible in) N
(   dealing with issues of whitespace, element ordering, inserting new) N
(   elements, etc.  This flexibility does not require extension,) N
(   especially not in the area of the meaning of elements.) N
() N
(   There is no kindness in accepting illegal combinations of XML) N
(   elements.  At best, it will cause an unwanted result and at worst it) N
(   can cause real damage.) N
() N
(A.3.  Example - XML Syntax Error) N
() N
(   The following request body for a PROPFIND method is illegal.) N
() N
(      <?xml version="1.0" encoding="utf-8" ?>) N
(      <D:propfind xmlns:D="DAV:">) N
(       <D:allprop/>) N
(       <D:propname/>) N
(      </D:propfind>) N
() N
(   The definition of the propfind element only allows for the allprop or) N
(   the propname element, not both.  Thus, the above is an error and must) N
(   be responded to with a 400 \(Bad Request\).) N
() N
(   Imagine, however, that a server wanted to be "kind" and decided to) N
(   pick the allprop element as the true element and respond to it.  A) N
(   client running over a bandwidth limited line who intended to execute) N
(   a propname would be in for a big surprise if the server treated the) N
(   command as an allprop.) N
() N
(   Additionally, if a server were lenient and decided to reply to this) N
(   request, the results would vary randomly from server to server, with) N
(   some servers executing the allprop directive, and others executing) N
(   the propname directive.  This reduces interoperability rather than) N
(   increasing it.) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 117]) N
() N
(rfc4918.txt) (Page 117/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(A.4.  Example - Unexpected XML Element) N
() N
(   The previous example was illegal because it contained two elements) N
(   that were explicitly banned from appearing together in the propfind) N
(   element.  However, XML is an extensible language, so one can imagine) N
(   new elements being defined for use with propfind.  Below is the) N
(   request body of a PROPFIND and, like the previous example, must be) N
(   rejected with a 400 \(Bad Request\) by a server that does not) N
(   understand the expired-props element.) N
() N
(      <?xml version="1.0" encoding="utf-8" ?>) N
(      <D:propfind xmlns:D="DAV:") N
(      xmlns:E="http://www.example.com/standards/props/">) N
(       <E:expired-props/>) N
(      </D:propfind>) N
() N
(   To understand why a 400 \(Bad Request\) is returned, let us look at the) N
(   request body as the server unfamiliar with expired-props sees it.) N
() N
(      <?xml version="1.0" encoding="utf-8" ?>) N
(      <D:propfind xmlns:D="DAV:") N
(                  xmlns:E="http://www.example.com/standards/props/">) N
(      </D:propfind>) N
() N
(   As the server does not understand the 'expired-props' element,) N
(   according to the WebDAV-specific XML processing rules specified in) N
(   Section 17, it must process the request as if the element were not) N
(   there.  Thus, the server sees an empty propfind, which by the) N
(   definition of the propfind element is illegal.) N
() N
(   Please note that had the extension been additive, it would not) N
(   necessarily have resulted in a 400 \(Bad Request\).  For example,) N
(   imagine the following request body for a PROPFIND:) N
() N
() N
(      <?xml version="1.0" encoding="utf-8" ?>) N
(      <D:propfind xmlns:D="DAV:") N
(                  xmlns:E="http://www.example.com/standards/props/">) N
(       <D:propname/>) N
(       <E:leave-out>*boss*</E:leave-out>) N
(      </D:propfind>) N
() N
(   The previous example contains the fictitious element leave-out.  Its) N
(   purpose is to prevent the return of any property whose name matches) N
(   the submitted pattern.  If the previous example were submitted to a) N
(   server unfamiliar with 'leave-out', the only result would be that the) N
(   'leave-out' element would be ignored and a propname would be) N
(   executed.) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 118]) N
() N
(rfc4918.txt) (Page 118/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (59/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (119-120) 60
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(Appendix B.  Notes on HTTP Client Compatibility) N
() N
(   WebDAV was designed to be, and has been found to be, backward-) N
(   compatible with HTTP 1.1.  The PUT and DELETE methods are defined in) N
(   HTTP and thus may be used by HTTP clients as well as WebDAV-aware) N
(   clients, but the responses to PUT and DELETE have been extended in) N
(   this specification in ways that only a WebDAV client would be) N
(   entirely prepared for.  Some theoretical concerns were raised about) N
(   whether those responses would cause interoperability problems with) N
(   HTTP-only clients, and this section addresses those concerns.) N
() N
(   Since any HTTP client ought to handle unrecognized 400-level and 500-) N
(   level status codes as errors, the following new status codes should) N
(   not present any issues: 422, 423, and 507 \(424 is also a new status) N
(   code but it appears only in the body of a Multistatus response.\)  So,) N
(   for example, if an HTTP client attempted to PUT or DELETE a locked) N
(   resource, the 423 Locked response ought to result in a generic error) N
(   presented to the user.) N
() N
(   The 207 Multistatus response is interesting because an HTTP client) N
(   issuing a DELETE request to a collection might interpret a 207) N
(   response as a success, even though it does not realize the resource) N
(   is a collection and cannot understand that the DELETE operation might) N
(   have been a complete or partial failure.  That interpretation isn't) N
(   entirely justified, because a 200-level response indicates that the) N
(   server "received, understood, and accepted" the request, not that the) N
(   request resulted in complete success.) N
() N
(   One option is that a server could treat a DELETE of a collection as) N
(   an atomic operation, and use either 204 No Content in case of) N
(   success, or some appropriate error response \(400 or 500 level\) for an) N
(   error.  This approach would indeed maximize backward compatibility.) N
(   However, since interoperability tests and working group discussions) N
(   have not turned up any instances of HTTP clients issuing a DELETE) N
(   request against a WebDAV collection, this concern is more theoretical) N
(   than practical.  Thus, servers are likely to be completely successful) N
(   at interoperating with HTTP clients even if they treat any collection) N
(   DELETE request as a WebDAV request and send a 207 Multi-Status) N
(   response.) N
() N
(   In general, server implementations are encouraged to use the detailed) N
(   responses and other mechanisms defined in this document rather than) N
(   make changes for theoretical interoperability concerns.) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 119]) N
() N
(rfc4918.txt) (Page 119/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(Appendix C.  The 'opaquelocktoken' Scheme and URIs) N
() N
(   The 'opaquelocktoken' URI scheme was defined in [RFC2518] \(and) N
(   registered by IANA\) in order to create syntactically correct and) N
(   easy-to-generate URIs out of UUIDs, intended to be used as lock) N
(   tokens and to be unique across all resources for all time.) N
() N
(   An opaquelocktoken URI is constructed by concatenating the) N
(   'opaquelocktoken' scheme with a UUID, along with an optional) N
(   extension.  Servers can create new UUIDs for each new lock token.  If) N
(   a server wishes to reuse UUIDs, the server MUST add an extension, and) N
(   the algorithm generating the extension MUST guarantee that the same) N
(   extension will never be used twice with the associated UUID.) N
() N
(     OpaqueLockToken-URI = "opaquelocktoken:" UUID [Extension]) N
(       ; UUID is defined in Section 3 of [RFC4122].  Note that LWS) N
(       ; is not allowed between elements of) N
(       ; this production.) N
() N
(     Extension = path) N
(       ; path is defined in Section 3.3 of [RFC3986]) N
() N
() N
(Appendix D.  Lock-null Resources) N
() N
(   The original WebDAV model for locking unmapped URLs created "lock-) N
(   null resources".  This model was over-complicated and some) N
(   interoperability and implementation problems were discovered.  The) N
(   new WebDAV model for locking unmapped URLs \(see Section 7.3\) creates) N
(   "locked empty resources".  Lock-null resources are deprecated.  This) N
(   section discusses the original model briefly because clients MUST be) N
(   able to handle either model.) N
() N
(   In the original "lock-null resource" model, which is no longer) N
(   recommended for implementation:) N
() N
(   o  A lock-null resource sometimes appeared as "Not Found".  The) N
(      server responds with a 404 or 405 to any method except for PUT,) N
(      MKCOL, OPTIONS, PROPFIND, LOCK, UNLOCK.) N
() N
(   o  A lock-null resource does however show up as a member of its) N
(      parent collection.) N
() N
(   o  The server removes the lock-null resource entirely \(its URI) N
(      becomes unmapped\) if its lock goes away before it is converted to) N
(      a regular resource.  Recall that locks go away not only when they) N
(      expire or are unlocked, but are also removed if a resource is) N
(      renamed or moved, or if any parent collection is renamed or moved.) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 120]) N
() N
(rfc4918.txt) (Page 120/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (60/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (121-122) 61
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   o  The server converts the lock-null resource into a regular resource) N
(      if a PUT request to the URL is successful.) N
() N
(   o  The server converts the lock-null resource into a collection if a) N
(      MKCOL request to the URL is successful \(though interoperability) N
(      experience showed that not all servers followed this requirement\).) N
() N
(   o  Property values were defined for DAV:lockdiscovery and DAV:) N
(      supportedlock properties but not necessarily for other properties) N
(      like DAV:getcontenttype.) N
() N
(   Clients can easily interoperate both with servers that support the) N
(   old model "lock-null resources" and the recommended model of "locked) N
(   empty resources" by only attempting PUT after a LOCK to an unmapped) N
(   URL, not MKCOL or GET.) N
() N
(D.1.  Guidance for Clients Using LOCK to Create Resources) N
() N
(   A WebDAV client implemented to this specification might find servers) N
(   that create lock-null resources \(implemented before this) N
(   specification using [RFC2518]\) as well as servers that create locked) N
(   empty resources.  The response to the LOCK request will not indicate) N
(   what kind of resource was created.  There are a few techniques that) N
(   help the client deal with either type.) N
() N
(      If the client wishes to avoid accidentally creating either lock-) N
(      null or empty locked resources, an "If-Match: *" header can be) N
(      included with LOCK requests to prevent the server from creating a) N
(      new resource.) N
() N
(      If a LOCK request creates a resource and the client subsequently) N
(      wants to overwrite that resource using a COPY or MOVE request, the) N
(      client should include an "Overwrite: T" header.) N
() N
(      If a LOCK request creates a resource and the client then decides) N
(      to get rid of that resource, a DELETE request is supposed to fail) N
(      on a lock-null resource and UNLOCK should be used instead.  But) N
(      with a locked empty resource, UNLOCK doesn't make the resource) N
(      disappear.  Therefore, the client might have to try both requests) N
(      and ignore an error in one of the two requests.) N
() N
(Appendix E.  Guidance for Clients Desiring to Authenticate) N
() N
(   Many WebDAV clients that have already been implemented have account) N
(   settings \(similar to the way email clients store IMAP account) N
(   settings\).  Thus, the WebDAV client would be able to authenticate) N
(   with its first couple requests to the server, provided it had a way) N
(   to get the authentication challenge from the server with realm name,) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 121]) N
() N
(rfc4918.txt) (Page 121/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   nonce, and other challenge information.  Note that the results of) N
(   some requests might vary according to whether or not the client is) N
(   authenticated -- a PROPFIND might return more visible resources if) N
(   the client is authenticated, yet not fail if the client is anonymous.) N
() N
(   There are a number of ways the client might be able to trigger the) N
(   server to provide an authentication challenge.  This appendix) N
(   describes a couple approaches that seem particularly likely to work.) N
() N
(   The first approach is to perform a request that ought to require) N
(   authentication.  However, it's possible that a server might handle) N
(   any request even without authentication, so to be entirely safe, the) N
(   client could add a conditional header to ensure that even if the) N
(   request passes permissions checks, it's not actually handled by the) N
(   server.  An example of following this approach would be to use a PUT) N
(   request with an "If-Match" header with a made-up ETag value.  This) N
(   approach might fail to result in an authentication challenge if the) N
(   server does not test authorization before testing conditionals as is) N
(   required \(see Section 8.5\), or if the server does not need to test) N
(   authorization.) N
() N
(   Example - forcing auth challenge with write request) N
() N
(   >>Request) N
() N
(     PUT /forceauth.txt HTTP/1.1) N
(     Host: www.example.com) N
(     If-Match: "xxx") N
(     Content-Type: text/plain) N
(     Content-Length: 0) N
() N
() N
(   The second approach is to use an Authorization header \(defined in) N
(   [RFC2617]\), which is likely to be rejected by the server but which) N
(   will then prompt a proper authentication challenge.  For example, the) N
(   client could start with a PROPFIND request containing an) N
(   Authorization header containing a made-up Basic userid:password) N
(   string or with actual plausible credentials.  This approach relies on) N
(   the server responding with a "401 Unauthorized" along with a) N
(   challenge if it receives an Authorization header with an unrecognized) N
(   username, invalid password, or if it doesn't even handle Basic) N
(   authentication.  This seems likely to work because of the) N
(   requirements of RFC 2617:) N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 122]) N
() N
(rfc4918.txt) (Page 122/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (61/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (123-124) 62
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   "If the origin server does not wish to accept the credentials sent) N
(   with a request, it SHOULD return a 401 \(Unauthorized\) response.  The) N
(   response MUST include a WWW-Authenticate header field containing at) N
(   least one \(possibly new\) challenge applicable to the requested) N
(   resource.") N
() N
(   There's a slight problem with implementing that recommendation in) N
(   some cases, because some servers do not even have challenge) N
(   information for certain resources.  Thus, when there's no way to) N
(   authenticate to a resource or the resource is entirely publicly) N
(   available over all accepted methods, the server MAY ignore the) N
(   Authorization header, and the client will presumably try again later.) N
() N
(   Example - forcing auth challenge with Authorization header) N
() N
(   >>Request) N
() N
(     PROPFIND /docs/ HTTP/1.1) N
(     Host: www.example.com) N
(     Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==) N
(     Content-type: application/xml; charset="utf-8") N
(     Content-Length: xxxx) N
() N
(     [body omitted]) N
() N
() N
(Appendix F.  Summary of Changes from RFC 2518) N
() N
(   This section lists major changes between this document and RFC 2518,) N
(   starting with those that are likely to result in implementation) N
(   changes.  Servers will advertise support for all changes in this) N
(   specification by returning the compliance class "3" in the DAV) N
(   response header \(see Sections 10.1 and 18.3\).) N
() N
(F.1.  Changes for Both Client and Server Implementations) N
() N
(   Collections and Namespace Operations) N
() N
(   o  The semantics of PROPFIND 'allprop' \(Section 9.1\) have been) N
(      relaxed so that servers return results including, at a minimum,) N
(      the live properties defined in this specification, but not) N
(      necessarily return other live properties.  The 'allprop' directive) N
(      therefore means something more like "return all properties that) N
(      are supposed to be returned when 'allprop' is requested" -- a set) N
(      of properties that may include custom properties and properties) N
(      defined in other specifications if those other specifications so) N
(      require.  Related to this, 'allprop' requests can now be extended) N
(      with the 'include' syntax to include specific named properties,) N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 123]) N
() N
(rfc4918.txt) (Page 123/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(      thereby avoiding additional requests due to changed 'allprop') N
(      semantics.) N
() N
(   o  Servers are now allowed to reject PROPFIND requests with Depth:) N
(      Infinity.  Clients that used this will need to be able to do a) N
(      series of Depth:1 requests instead.) N
() N
(   o  Multi-Status response bodies now can transport the value of HTTP's) N
(      Location response header in the new 'location' element.  Clients) N
(      may use this to avoid additional roundtrips to the server when) N
(      there is a 'response' element with a 3xx status \(see) N
(      Section 14.24\).) N
() N
(   o  The definition of COPY has been relaxed so that it doesn't require) N
(      servers to first delete the target resources anymore \(this was a) N
(      known incompatibility with [RFC3253]\).  See Section 9.8.) N
() N
(   Headers and Marshalling) N
() N
(   o  The Destination and If request headers now allow absolute paths in) N
(      addition to full URIs \(see Section 8.3\).  This may be useful for) N
(      clients operating through a reverse proxy that does rewrite the) N
(      Host request header, but not WebDAV-specific headers.) N
() N
(   o  This specification adopts the error marshalling extensions and the) N
(      "precondition/postcondition" terminology defined in [RFC3253] \(see) N
(      Section 16\).  Related to that, it adds the "error" XML element) N
(      inside multistatus response bodies \(see Section 14.5, however note) N
(      that it uses a format different from the one recommended in RFC) N
(      3253\).) N
() N
(   o  Senders and recipients are now required to support the UTF-16) N
(      character encoding in XML message bodies \(see Section 19\).) N
() N
(   o  Clients are now required to send the Depth header on PROPFIND) N
(      requests, although servers are still encouraged to support clients) N
(      that don't.) N
() N
(   Locking) N
() N
(   o  RFC 2518's concept of "lock-null resources" \(LNRs\) has been) N
(      replaced by a simplified approach, the "locked empty resources") N
(      \(see Section 7.3\).  There are some aspects of lock-null resources) N
(      clients cannot rely on anymore, namely, the ability to use them to) N
(      create a locked collection or the fact that they disappear upon) N
(      UNLOCK when no PUT or MKCOL request was issued.  Note that servers) N
(      are still allowed to implement LNRs as per RFC 2518.) N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 124]) N
() N
(rfc4918.txt) (Page 124/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (62/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (125-126) 63
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   o  There is no implicit refresh of locks anymore.  Locks are only) N
(      refreshed upon explicit request \(see Section 9.10.2\).) N
() N
(   o  Clarified that the DAV:owner value supplied in the LOCK request) N
(      must be preserved by the server just like a dead property) N
(      \(Section 14.17\).  Also added the DAV:lockroot element) N
(      \(Section 14.12\), which allows clients to discover the root of) N
(      lock.) N
() N
(F.2.  Changes for Server Implementations) N
() N
(   Collections and Namespace Operations) N
() N
(   o  Due to interoperability problems, allowable formats for contents) N
(      of 'href' elements in multistatus responses have been limited \(see) N
(      Section 8.3\).) N
() N
(   o  Due to lack of implementation, support for the 'propertybehavior') N
(      request body for COPY and MOVE has been removed.  Instead,) N
(      requirements for property preservation have been clarified \(see) N
(      Sections 9.8 and 9.9\).) N
() N
(   Properties) N
() N
(   o  Strengthened server requirements for storage of property values,) N
(      in particular persistence of language information \(xml:lang\),) N
(      whitespace, and XML namespace information \(see Section 4.3\).) N
() N
(   o  Clarified requirements on which properties should be writable by) N
(      the client; in particular, setting "DAV:displayname" should be) N
(      supported by servers \(see Section 15\).) N
() N
(   o  Only 'rfc1123-date' productions are legal as values for DAV:) N
(      getlastmodified \(see Section 15.7\).) N
() N
(   Headers and Marshalling) N
() N
(   o  Servers are now required to do authorization checks before) N
(      processing conditional headers \(see Section 8.5\).) N
() N
(   Locking) N
() N
(   o  Strengthened requirement to check identity of lock creator when) N
(      accessing locked resources \(see Section 6.4\).  Clients should be) N
(      aware that lock tokens returned to other principals can only be) N
(      used to break a lock, if at all.) N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 125]) N
() N
(rfc4918.txt) (Page 125/127) (Jun 29, 07 23:48) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(   o  Section 8.10.4 of [RFC2518] incorrectly required servers to return) N
(      a 409 status where a 207 status was really appropriate.  This has) N
(      been corrected \(Section 9.10\).) N
() N
(F.3.  Other Changes) N
() N
(   The definition of collection state has been fixed so it doesn't vary) N
(   anymore depending on the Request-URI \(see Section 5.2\).) N
() N
(   The DAV:source property introduced in Section 4.6 of [RFC2518] was) N
(   removed due to lack of implementation experience.) N
() N
(   The DAV header now allows non-IETF extensions through URIs in) N
(   addition to compliance class tokens.  It also can now be used in) N
(   requests, although this specification does not define any associated) N
(   semantics for the compliance classes defined in here \(see) N
(   Section 10.1\).) N
() N
(   In RFC 2518, the definition of the Depth header \(Section 9.2\)) N
(   required that, by default, request headers would be applied to each) N
(   resource in scope.  Based on implementation experience, the default) N
(   has now been reversed \(see Section 10.2\).) N
() N
(   The definitions of HTTP status code 102 \([RFC2518], Section 10.1\) and) N
(   the Status-URI response header \(Section 9.7\) have been removed due to) N
(   lack of implementation.) N
() N
(   The TimeType format used in the Timeout request header and the) N
(   "timeout" XML element used to be extensible.  Now, only the two) N
(   formats defined by this specification are allowed \(see Section 10.7\).) N
() N
(Author's Address) N
() N
(   Lisa Dusseault \(editor\)) N
(   CommerceNet) N
(   2064 Edgewood Dr.) N
(   Palo Alto, CA  94303) N
(   US) N
() N
(   EMail: ldusseault@commerce.net) N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 126]) N
() N
(rfc4918.txt) (Page 126/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (63/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (127) 64
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(RFC 4918                         WebDAV                        June 2007) p n
() N
() N
(Full Copyright Statement) N
() N
(   Copyright \(C\) The IETF Trust \(2007\).) N
() N
(   This document is subject to the rights, licenses and restrictions) N
(   contained in BCP 78, and except as set forth therein, the authors) N
(   retain all their rights.) N
() N
(   This document and the information contained herein are provided on an) N
(   "AS IS" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS) N
(   OR IS SPONSORED BY \(IF ANY\), THE INTERNET SOCIETY, THE IETF TRUST AND) N
(   THE INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS) N
(   OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF) N
(   THE INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED) N
(   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.) N
() N
(Intellectual Property) N
() N
(   The IETF takes no position regarding the validity or scope of any) N
(   Intellectual Property Rights or other rights that might be claimed to) N
(   pertain to the implementation or use of the technology described in) N
(   this document or the extent to which any license under such rights) N
(   might or might not be available; nor does it represent that it has) N
(   made any independent effort to identify any such rights.  Information) N
(   on the procedures with respect to rights in RFC documents can be) N
(   found in BCP 78 and BCP 79.) N
() N
(   Copies of IPR disclosures made to the IETF Secretariat and any) N
(   assurances of licenses to be made available, or the result of an) N
(   attempt made to obtain a general license or permission for the use of) N
(   such proprietary rights by implementers or users of this) N
(   specification can be obtained from the IETF on-line IPR repository at) N
(   http://www.ietf.org/ipr.) N
() N
(   The IETF invites any interested party to bring to its attention any) N
(   copyrights, patents or patent applications, or other proprietary) N
(   rights that may cover technology that may be required to implement) N
(   this standard.  Please address the information to the IETF at) N
(   ietf-ipr@ietf.org.) N
() N
(Acknowledgement) N
() N
(   Funding for the RFC Editor function is currently provided by the) N
(   Internet Society.) N
() N
() N
() N
() N
() N
() N
() N
(Dusseault                   Standards Track                   [Page 127]) N
() N
(rfc4918.txt) (Page 127/127) (Jun 29, 07 23:48) title
border
grestore
(Printed by Thomas Cataldo) rhead
(rfc4918.txt) (64/64) (Monday April 06, 2009) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
