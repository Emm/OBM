=head1 NOM

Aliamin::toolBox - Différentes fonctions permettant de manipuler diverses
informations. C'est la boite à outils d'Aliamin.

=head1 DEPENDANCES

 use Aliamin::Parameters::common;
 use Aliamin::dbUtils;
 use Aliamin::samba;
 use Sys::Syslog;

=head1 DESCRIPTION

    use Aliamin::toolBox;
    
Ce paquet implémente les fonctions permettant de manipuler diverses informations
manipulées par Aliamin.

=head1 API

Description de l'API mise à disposition par ce module.

=over 4

=item B<execRootCmd( $cmd )>

Cette fonction sert à exécuter un programme en tant qu'utilisateur 'root',
elle bloque le script qui l'a appellée jusqu'à ce que le programme exécuté
se termine.

=over 4

=item cmd : le programme à exécuter.

=back

Retour : le code erreur de l'exécution de la commande.

=item B<execCmd( $cmd, $verbose )>

Cette fonction permet d'exécuter une commande. Elle bloque le script qui
l'appelle jusqu'à ce que le programme exécuté se termine.

=over 4

=item cmd : le programme a executer ;

=item verbose : la sortie standart est redirigee vers /dev/null (vrai) ou pas
(faux).

=back

Retour : le code erreur de l'exécution de la commande.

=item B<write_log( $text, $action )>

Sert à écrire et fermer un fichier log.
ATTENTION : il faut que le fichier de log soit ouvert au préalable !
 
=over 4

=item text : texte à écrire dans le fichier de log, ou préfixe lors de l'ouverture
du log ;

=item action : "W" -E<gt> écrit $text dans le fichier log, "C" -E<gt> ferme le fichier de log
"WC" -E<gt> écrit $text puis ferme le fichier et "O" -E<gt> ouvre le log

=back

Retour : 0 pour dire que tout c'est bien passé.

=item B<makeConfigFile( $template, $data, $start, $end )>

Cette fonction permet de parcourir le fichier modèle et de
remplacer les tags <ALIAMIN-...> par la valeur correspondante.

=over 4

=item template : pointeur sur un tableau contenant 1 ligne du modele
dans chacune de ses cases ;

=item data : pointeur sur une table de hachage associant cle/valeurs ;

=item start : indique la première à traiter ;

=item end : indique la dernière ligne à traiter.

=back

Retour : vrai si tout est OK, faux sinon.

=item B<getLastUid( $listUsers )>

Cherche le premier UID libre.

=over 4

=item listUsers : tableau contenant une description d'utilisateur par case.

=back

Retour : l'UID libre.

=item B<getLastGid( $listGroups )>

Cherche le permier GID libre.

=over 4

=item listGroups : tableau contenant une description de groupe par case.

=back

Retour : le GID libre.

=item B<getGroupUsersMailEnable( $groupId, $dbHandler )>

Cette fonction permet de récupérer le login de tous les utilisateurs ayant
droit au mail et faisant partie du groupe dont l'Id est passé en paramètre.

=over 4

=item groupId : ID du groupe dont on souhaite récupérer la liste des logins ;

=item dbHandler : référence à l'objet de gestion de la connexion à la base ;

=back

Retour : référence à un tableau contenant un login par case.

=item B<getGroupUsers( $groupId, $dbHandler, $sqlRequest )>

Cette fonction permet de récupérer le login de tous les utilisateurs
faisant partie du groupe dont l'Id est passé en paramètre.

=over 4

=item groupId : ID du groupe dont on souhaite récupérer la liste des logins ;

=item dbHandler : référence à l'objet de gestion de la connexion à la base ;

=item sqlRequest : filter SQL permettant de faire le choix des utilisateurs a
recuperer plus finement.

=back

Retour : référence à un tableau contenant un login par case.

=item B<getGroupUsersSID( $groupId, $dbHandler, $SID )>

Cette fonction permet de récupérer le SID de tous les utilisateurs
faisant partie du groupe dont l'Id est passé en paramètre.

=over 4

=item groupId : ID du groupe dont on souhaite récupérer la liste des logins ;

=item dbHandler : référence à l'objet de gestion de la connexion à la base ;

=item baseDN : DN de référence pour les groupes.

=back

Retour : référence à un tableau contenant un SID par case.

=back

=item B<makeEntityMailAddress( $mailPrefix, $domainList )>

Cette fonction permet de construire les adresses mails d'une entite à partir
de sa liste de prefix et de la liste de domaines.

=over 4

=item mailPrefix : liste des prefixes de la forme 'pref1\r\npref2...' ;

=item mailDomain : référence à un tableau de domaines de messagerie - 1 par
case.

=back

Retour : référence à un tableau contenant les adresses mails de l'entité - 1
adresse par case.

=item B<initRight( $entityId, $entityType )>

Permet de definir une table de hachage dont les clés sont les droits et les
valeurs, une référence à une table de hachage qui décrit ce droit avec les
clés 'compute' qui permet de savoir si ce droit doit être traité ou pas, et
'sqlQuery' qui donne la requête SQL a exécuter.

=over 4

=item entityId : identifiant de l'entité pour laquelle on souhaite construire
la structure de définition des droits ;

=item entityType : type de l'entité.

=back

Retour : une table de hachage.

=item B<getEntityRight( $entityId, $entityType, $dbHandler )>

Cette fonction permet de créer une table de hachage dont les clés sont les
droits ('read', 'writeonly', 'write') et les valeurs, une table de hachage
dont les clés sont les logins des utilisateurs ayant le droit correspondant.

=over 4

=item entityId : identifiant de l'entité pour laquelle on souhaite construire
la structure des droits ;

=item entityType : type de l'entité ;

=item dbHandler : une reference au handler de la base SQL a interroger.

=back

Retour : une référence à la table de hachage de définition des droits.

=item B<computeRight( $usersList )>

Permet de convertir les droits décrit en base, en droit Aliamin. 

=over 4

=item usersList : table de hachage dont les clés sont les logins des
utilisateurs et les valeurs une référence à une table de hachage dont les
clés sont les droits ('read', 'writeonly', 'write') et les valeurs 0 ou 1.

=back

Retour : une table de hachage dont les clés sont les droits ('read',
'writeonly', 'write') et les valeurs, une table de hachage dont les clés sont
les logins des utilisateurs ayant le droit correspondant.

=item B<aclUpdated( $cyrusAcl, $bdAcl )>

Permet de savoir si il y a eu mise à jour des ACL ou pas.

=over 4

=item cyrusAcl : une table de hachage dont les clés sont les droits ('read',
'writeonly', 'write') et les valeurs, une table de hachage dont les clés sont
les logins des utilisateurs ayant le droit correspondant ;

=item bdAcl : une table de hachage dont les clés sont les droits ('read',
'writeonly', 'write') et les valeurs, une table de hachage dont les clés sont
les logins des utilisateurs ayant le droit correspondant.

=back

Retour :
    0 : les 2 tables de hachages sont les mêmes ;
    1 : il y a au moins une différence.

=item B<getHostIpById( $dbHandler, $hostId )>

Permet d'obtenir l'IP d'un hôte à partir de son identifiant.

=over 4

=item dbHandler : référence à l'objet de gestion de la connexion à la base ;

=item hostId : identifiant de l'hôte dont on souhaite récupérer le nom.

=back

Retour :
    undef : si l'adresse IP n'est pas trouvé ;
    hostIp : l'adresse IP de l'hôte correspondant à l'identifiant passé en paramètre.

=item B<getHostNameById( $dbHandler, $hostId )>

Permet d'obtenir le nom d'un hôte à partir de son identifiant.

=over 4

=item dbHandler : référence à l'objet de gestion de la connexion à la base ;

=item hostId : identifiant de l'hôte dont on souhaite récupérer le nom.

=back

Retour :
    undef : si le nom n'est pas trouvé ;
    hostIp : l'adresse IP de l'hôte correspondant à l'identifiant passé en paramètre.

=item B<getMailServerList( $dbHandler )>

Permet d'obtenir la liste des serveurs de boîtes à lettres.

=over 4

=item dbHandler : référence à l'objet de gestion de la connexion à la base.

=back

Retour :
    undef en cas d'erreur ;
    une référence à un tableau contenant un Id de serveur mail par case.

=item B<getDomains( $dbHandler )>

Permet d'obtenir la liste des domaines OBM

=over 4

=item dbHandler : référence à l'objet de gestion de la connexion à la base.

=back

Retour :
    undef en cas d'erreur ;
    une référence à un tableau contenant une référence à une table hachage par
    case. Cette tables contient les clés :
        - domain_id                 - domain_label
        - domain_desc               - domain_name
        - domain_alias              - domain_ldap_root
        - domain_root_datatype

=cut
